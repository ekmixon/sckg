---
###############################################################################
#
# Ansible remediation role for profile draft_stig_wrlinux_disa
# Profile Title:  DRAFT DISA STIG for Wind River Linux
# Profile Description:
# This profile contains configuration checks that align to the
# DISA STIG for Wind River Linux.
# This profile is being developed under the DoD consensus model to
# become a STIG in coordination with DISA FSO.
# What is the status of the Wind River Linux STIG?
# The Wind River Linux STIG is in development under the DoD consensus model
# and Wind River has started the process to get approval from DISA. However, in
# the absence of an approved SRG or STIG, vendor recommendations may be used
# instead. The current contents constitute the vendor recommendations at the
# time of the product release containing these contents.
# Note that changes are expected before approval is granted, and those changes
# will be made available in future Wind River Linux Security Profile 1019 RCPL releases.
# More information, including the following, is available from the DISA FAQs
# at https://public.cyber.mil/stigs/faqs/
#
# Benchmark ID:  WRLINUX
# Benchmark Version:  0.1.47
#
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.2.17 using:
# 	$ oscap xccdf generate fix --profile draft_stig_wrlinux_disa --template urn:xccdf:fix:script:ansible xccdf-file.xml
#
# This script is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this remediation role:
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################

 - hosts: all
   pre_tasks:
     - name: Verify Ansible meets SCAP-Security-Guide version requirements.
       assert:
         that: "ansible_version.full is version_compare('2.5', '>=')"
         msg: >
           "You must update Ansible to at least version 2.5 to use this role."

   vars:
      sysctl_net_ipv6_conf_all_accept_source_route_value: !!str 0
      sysctl_net_ipv4_conf_default_accept_source_route_value: !!str 0
      sysctl_net_ipv4_conf_all_accept_source_route_value: !!str 0
      sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str 1
      sysctl_net_ipv4_conf_all_accept_redirects_value: !!str 0
      var_removable_partition: !!str /dev/cdrom
   tasks:
    - name: Ensure AIDE is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-11.5
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - CJIS-5.10.1.3

    - name: Configure Periodic Execution of AIDE
      cron:
        name: run AIDE check
        minute: 5
        hour: 4
        weekday: 0
        user: root
        job: /usr/sbin/aide --check
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-11.5
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - CJIS-5.10.1.3

    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.20
        - NIST-800-53-AC-4

    - name: Enable service firewalld
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: 'yes'
            state: started
          when:
            - '"firewalld" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_firewalld_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(b)

    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.20
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.20
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5

    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.20
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_ip_forward
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-32

    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.20
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5(1)
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.20
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - CJIS-5.10.1.1

    - name: require single user mode password
      lineinfile:
        create: true
        dest: /usr/lib/systemd/system/rescue.service
        regexp: ^#?ExecStart=
        line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block
          default"
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - require_singleuser_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.1
        - NIST-800-171-3.4.5
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(1)
        - NIST-800-53-AC-3

    - name: Ensure screen is installed
      package:
        name: screen
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_screen_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)

    - name: Enable service auditd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service auditd
          service:
            name: auditd
            enabled: 'yes'
            state: started
          when:
            - '"audit" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_auditd_enabled
        - high_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.1
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - NIST-800-53-AC-2(g)
        - NIST-800-53-AU-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-IR-5
        - NIST-800-53-AU-12(1)
        - CJIS-5.4.1.1

    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: |-
          ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
          ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Unit Service Exists - autofs.service
      command: systemctl list-unit-files autofs.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3

    - name: Disable service autofs
      systemd:
        name: autofs.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"autofs.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3

    - name: Unit Socket Exists - autofs.socket
      command: systemctl list-unit-files autofs.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3

    - name: Disable socket autofs
      systemd:
        name: autofs.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '{{ var_removable_partition }}'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_nosuid_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_nosuid_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: Ensure permission nosuid are set on var_removable_partition
      mount:
        path: '{{ var_removable_partition }}'
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_nosuid_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/home'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: Ensure permission nosuid are set on /home
      mount:
        path: /home
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: Ensure rsh-server is removed
      package:
        name: rsh-server
        state: absent
      tags:
        - package_rsh-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)

    - name: Ensure telnet-server is removed
      package:
        name: telnet-server
        state: absent
      tags:
        - package_telnet-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)

    - name: Ensure ypserv is removed
      package:
        name: ypserv
        state: absent
      tags:
        - package_ypserv_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)

    - name: Ensure tftp-server is removed
      package:
        name: tftp-server
        state: absent
      tags:
        - package_tftp-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-7

    - name: Ensure vsftpd is removed
      package:
        name: vsftpd
        state: absent
      tags:
        - package_vsftpd_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-7

    - name: Test for existence /etc/cron.allow
      stat:
        path: /etc/cron.allow
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6

    - name: Ensure group owner 0 on /etc/cron.allow
      file:
        path: /etc/cron.allow
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6

    - name: Test for existence /etc/cron.allow
      stat:
        path: /etc/cron.allow
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6

    - name: Ensure owner 0 on /etc/cron.allow
      file:
        path: /etc/cron.allow
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6

    - name: Unit Service Exists - kdump.service
      command: systemctl list-unit-files kdump.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_kdump_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-CM-6(b)

    - name: Disable service kdump
      systemd:
        name: kdump.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"kdump.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_kdump_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-CM-6(b)

    - name: Unit Socket Exists - kdump.socket
      command: systemctl list-unit-files kdump.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_kdump_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-CM-6(b)

    - name: Disable socket kdump
      systemd:
        name: kdump.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"kdump.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_kdump_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-CM-6(b)

    - name: Get nfs and nfs4 mount points, that don't have Kerberos security option
      command: findmnt --fstab --types nfs,nfs4 -O nosec=krb5:krb5i:krb5p -n -o TARGET
      register: points_register
      check_mode: false
      changed_when: false
      tags:
        - mount_option_krb_sec_remote_filesystems
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-53-AC-14(1)

    - name: Add Kerberos security to nfs and nfs4 mount points
      mount:
        path: '{{ item.split()[0] }}'
        src: '{{ item.split()[1] }}'
        fstype: '{{ item.split()[2] }}'
        state: mounted
        opts: '{{ item.split()[3] }},sec=krb5:krb5i:krb5p'
      when: (points_register.stdout | length > 0)
      tags:
        - mount_option_krb_sec_remote_filesystems
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-53-AC-14(1)

    - name: Get nfs and nfs4 mount points, that don't have noexec
      command: findmnt --fstab --types nfs,nfs4 -O nonoexec -n
      register: points_register
      check_mode: false
      changed_when: false
      tags:
        - mount_option_noexec_remote_filesystems
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6

    - name: Add noexec to nfs and nfs4 mount points
      mount:
        path: '{{ item.split()[0] }}'
        src: '{{ item.split()[1] }}'
        fstype: '{{ item.split()[2] }}'
        state: mounted
        opts: '{{ item.split()[3] }},noexec'
      when: (points_register.stdout | length > 0)
      tags:
        - mount_option_noexec_remote_filesystems
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6

    - name: Get nfs and nfs4 mount points, that don't have nosuid
      command: findmnt --fstab --types nfs,nfs4 -O nonosuid -n
      register: points_register
      check_mode: false
      changed_when: false
      tags:
        - mount_option_nosuid_remote_filesystems
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6

    - name: Add nosuid to nfs and nfs4 mount points
      mount:
        path: '{{ item.split()[0] }}'
        src: '{{ item.split()[1] }}'
        fstype: '{{ item.split()[2] }}'
        state: mounted
        opts: '{{ item.split()[3] }},nosuid'
      when: (points_register.stdout | length > 0)
      tags:
        - mount_option_nosuid_remote_filesystems
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6

    - name: Ensure openssh-server is installed
      package:
        name: openssh-server
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_openssh-server_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-SC-8

    - name: Enable service sshd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service sshd
          service:
            name: sshd
            enabled: 'yes'
            state: started
          when:
            - '"openssh-server" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_sshd_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.13
        - NIST-800-171-3.5.4
        - NIST-800-171-3.13.8
        - NIST-800-53-SC-8

    - name: Find /etc/ssh/ file(s)
      find:
        paths: /etc/ssh/
        patterns: ^.*.pub$
        use_regex: true
      register: files_found
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_pub_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - NIST-800-53-AC-6

    - name: Set permissions for /etc/ssh/ file(s)
      file:
        path: '{{ item.path }}'
        mode: '0644'
      with_items:
        - '{{ files_found.files }}'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_pub_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - NIST-800-53-AC-6

    - name: Find /etc/ssh/ file(s)
      find:
        paths: /etc/ssh/
        patterns: ^.*_key$
        use_regex: true
      register: files_found
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_private_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17

    - name: Set permissions for /etc/ssh/ file(s)
      file:
        path: '{{ item.path }}'
        mode: '0640'
      with_items:
        - '{{ files_found.files }}'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_private_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17

    - name: Disable SSH Access via Empty Passwords
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitEmptyPasswords no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_empty_passwords
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(b)
        - CJIS-5.5.6

    - name: Enable SSH Warning Banner
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Banner\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Banner /etc/issue
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_enable_warning_banner
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - CJIS-5.5.6

    - name: Do Not Allow SSH Environment Options
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitUserEnvironment yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_do_not_permit_user_env
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(b)
        - CJIS-5.5.6

    - name: Disable Kerberos Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*KerberosAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: KerberosAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_kerb_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-CM-6(c)

    - name: Allow Only SSH Protocol 2
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Protocol\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Protocol 2
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_allow_only_protocol2
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.13
        - NIST-800-171-3.5.4
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-AC-17(8).1(ii)
        - NIST-800-53-IA-5(1)(c)
        - CJIS-5.5.6

    - name: Enable Encrypted X11 Forwarding
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*X11Forwarding\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: X11Forwarding yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_enable_x11_forwarding
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.13
        - NIST-800-53-CM-2(1)(b)

    - name: Disable Host-Based Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*HostbasedAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: HostbasedAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - disable_host_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-3
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(b)
        - CJIS-5.5.6

    - name: Enable Use of Strict Mode Checking
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*StrictModes\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: StrictModes yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_enable_strictmodes
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-AC-17(b)

    - name: Enable Use of Privilege Separation
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*UsePrivilegeSeparation\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: UsePrivilegeSeparation sandbox
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_use_priv_separation
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)

    - name: Enable SSH Print Last Log
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PrintLastLog\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PrintLastLog yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_print_last_log
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-9
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)

    - name: Disable GSSAPI Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*GSSAPIAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: GSSAPIAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_gssapi_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(c)

    - name: Disable SSH Root Login
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_root_login
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(5)
        - CJIS-5.5.6

