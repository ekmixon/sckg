---
###############################################################################
#
# Ansible remediation role for profile ospp
# Profile Title:  [DRAFT] OSPP - Protection Profile for General Purpose Operating Systems
# Profile Description:
# This profile reflects mandatory configuration controls identified in the
# NIAP Configuration Annex to the Protection Profile for General Purpose
# Operating Systems (Protection Profile Version 4.2).
#
# This profile is currently under review. Use of this profile does not
# denote or guarantee NIAP approval or certification until this profile
# has been approved by NIAP.
#
# Benchmark ID:  OL-8
# Benchmark Version:  0.1.47
#
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.2.17 using:
# 	$ oscap xccdf generate fix --profile ospp --template urn:xccdf:fix:script:ansible xccdf-file.xml
#
# This script is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this remediation role:
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################

 - hosts: all
   pre_tasks:
     - name: Verify Ansible meets SCAP-Security-Guide version requirements.
       assert:
         that: "ansible_version.full is version_compare('2.5', '>=')"
         msg: >
           "You must update Ansible to at least version 2.5 to use this role."

   vars:
      var_system_crypto_policy: !!str FIPS
      inactivity_timeout_value: !!str 900
      rsyslog_remote_loghost_address: !!str logcollector
      var_selinux_policy_name: !!str targeted
      var_selinux_state: !!str enforcing
      var_accounts_passwords_pam_faillock_unlock_time: !!str 0
      var_accounts_passwords_pam_faillock_fail_interval: !!str 900
      var_accounts_passwords_pam_faillock_deny: !!str 3
      var_password_pam_minlen: !!str 12
      var_password_pam_dcredit: !!str -1
      var_password_pam_ocredit: !!str -1
      var_password_pam_lcredit: !!str -1
      var_password_pam_ucredit: !!str -1
      var_password_pam_retry: !!str 3
      var_accounts_tmout: !!str 1800
      login_banner_text: !!str --[\s\n]+WARNING[\s\n]+--[\s\n]*This[\s\n]+system[\s\n]+is[\s\n]+for[\s\n]+the[\s\n]+use[\s\n]+of[\s\n]+authorized[\s\n]+users[\s\n]+only.[\s\n]+Individuals[\s\n]*using[\s\n]+this[\s\n]+computer[\s\n]+system[\s\n]+without[\s\n]+authority[\s\n]+or[\s\n]+in[\s\n]+excess[\s\n]+of[\s\n]+their[\s\n]*authority[\s\n]+are[\s\n]+subject[\s\n]+to[\s\n]+having[\s\n]+all[\s\n]+their[\s\n]+activities[\s\n]+on[\s\n]+this[\s\n]+system[\s\n]*monitored[\s\n]+and[\s\n]+recorded[\s\n]+by[\s\n]+system[\s\n]+personnel.[\s\n]+Anyone[\s\n]+using[\s\n]+this[\s\n]*system[\s\n]+expressly[\s\n]+consents[\s\n]+to[\s\n]+such[\s\n]+monitoring[\s\n]+and[\s\n]+is[\s\n]+advised[\s\n]+that[\s\n]*if[\s\n]+such[\s\n]+monitoring[\s\n]+reveals[\s\n]+possible[\s\n]+evidence[\s\n]+of[\s\n]+criminal[\s\n]+activity[\s\n]*system[\s\n]+personal[\s\n]+may[\s\n]+provide[\s\n]+the[\s\n]+evidence[\s\n]+of[\s\n]+such[\s\n]+monitoring[\s\n]+to[\s\n]+law[\s\n]*enforcement[\s\n]+officials.
      var_accounts_password_minlen_login_defs: !!str 15
   tasks:
    - name: enable fips mode
      command: /usr/bin/fips-mode-setup --enable
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - enable_fips_mode
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-53-SC-13
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(2)
        - NIST-800-53-IA-7

    - name: Configure Kerberos to use System Crypto Policy
      file:
        src: /etc/crypto-policies/back-ends/krb5.config
        path: /etc/krb5.conf.d/crypto-policies
        state: link
      tags:
        - configure_kerberos_crypto_policy
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - reboot_required

    - name: Configure System Cryptography Policy
      lineinfile:
        path: /etc/crypto-policies/config
        regexp: ^(?!#)(\S+)$
        line: '{{ var_system_crypto_policy }}'
        create: true
      tags:
        - configure_crypto_policy
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(2)

    - name: Verify that Crypto Policy is Set (runtime)
      command: /usr/bin/update-crypto-policies --set {{ var_system_crypto_policy }}
      tags:
        - configure_crypto_policy
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(2)

    - name: Configure SSH to use System Crypto Policy
      lineinfile:
        dest: /etc/sysconfig/sshd
        state: absent
        regexp: ^\s*CRYPTO_POLICY.*$
      tags:
        - configure_ssh_crypto_policy
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: Configure Libreswan to use System Crypto Policy
      lineinfile:
        path: /etc/ipsec.conf
        line: include /etc/crypto-policies/back-ends/libreswan.config
        create: true
      tags:
        - configure_libreswan_crypto_policy
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: 'Set fact: Package manager reinstall command (dnf)'
      set_fact:
        package_manager_reinstall_cmd: dnf reinstall -y
      when: ansible_distribution == "Fedora"
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-11.5
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - CJIS-5.10.4.1

    - name: 'Set fact: Package manager reinstall command (yum)'
      set_fact:
        package_manager_reinstall_cmd: yum reinstall -y
      when: (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-11.5
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - CJIS-5.10.4.1

    - name: Read files with incorrect hash
      command: rpm -Va --nodeps --nosize --nomtime --nordev --nocaps --nolinkto --nouser
        --nogroup --nomode --noconfig --noghost
      args:
        warn: false
      register: files_with_incorrect_hash
      changed_when: false
      failed_when: files_with_incorrect_hash.rc > 1
      when: (package_manager_reinstall_cmd is defined)
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-11.5
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - CJIS-5.10.4.1

    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_hash.stdout_lines | map(''regex_findall'',
        ''^[.]+[5]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      when:
        - files_with_incorrect_hash.stdout_lines is defined
        - (files_with_incorrect_hash.stdout_lines | length > 0)
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-11.5
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - CJIS-5.10.4.1

    - name: Reinstall packages of files with incorrect hash
      command: '{{ package_manager_reinstall_cmd }} ''{{ item }}'''
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when:
        - files_with_incorrect_hash.stdout_lines is defined
        - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines
          | length > 0))
      tags:
        - rpm_verify_hashes
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-11.5
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-53-AU-9(3)
        - CJIS-5.10.4.1

    - name: Security patches are up to date
      package:
        name: '*'
        state: latest
      tags:
        - security_patches_up_to_date
        - high_severity
        - skip_ansible_lint
        - patch_strategy
        - low_complexity
        - high_disruption
        - reboot_required
        - PCI-DSS-Req-6.2
        - NIST-800-53-SI-2
        - NIST-800-53-SI-2(c)
        - NIST-800-53-MA-1(b)
        - CJIS-5.10.4.1

    - name: Find All yum Repositories
      find:
        paths: /etc/yum.repos.d/
        patterns: '*.repo'
        contains: ^\[.+]$
      register: yum_find
      tags:
        - ensure_gpgcheck_never_disabled
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-6.2
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - CJIS-5.10.4.1

    - name: Ensure gpgcheck Enabled For All yum Package Repositories
      with_items: '{{ yum_find.files }}'
      lineinfile:
        create: true
        dest: '{{ item.path }}'
        regexp: ^gpgcheck
        line: gpgcheck=1
      tags:
        - ensure_gpgcheck_never_disabled
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-6.2
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - CJIS-5.10.4.1

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-6.2
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - CJIS-5.10.4.1

    - name: Ensure GPG check is globally activated (yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: gpgcheck
        value: 1
        create: false
      when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-6.2
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - CJIS-5.10.4.1

    - name: Ensure GPG check is globally activated (dnf)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: gpgcheck
        value: 1
        create: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-6.2
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - CJIS-5.10.4.1

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11

    - name: Ensure GPG check Enabled for Local Packages (Yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: true
      when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11

    - name: Ensure GPG check Enabled for Local Packages (DNF)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: true
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-11

    - name: Prevent user modification of GNOME Session idle-delay
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/session/idle-delay
        line: /org/gnome/desktop/session/idle-delay
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_session_idle_user_locks
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)

    - name: Set GNOME3 Screensaver Lock Delay After Activation Period
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/screensaver
        option: lock-delay
        value: uint32 5
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_lock_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)

    - name: Prevent user modification of GNOME lock-delay
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/screensaver/lock-delay
        line: /org/gnome/desktop/screensaver/lock-delay
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_lock_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)

    - name: Disable Full Username on Splash Screen
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/screensaver
        option: show-full-name-in-top-bar
        value: 'false'
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_user_info
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed

    - name: Prevent user modification of GNOME show-full-name-in-top-bar
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/screensaver/show-full-name-in-top-bar
        line: /org/gnome/desktop/screensaver/show-full-name-in-top-bar
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_user_info
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed

    - name: Prevent user modification of GNOME lock-delay
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/screensaver/lock-delay
        line: /org/gnome/desktop/screensaver/lock-delay
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_user_locks
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)

    - name: Enable GNOME3 Screensaver Idle Activation
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/screensaver
        option: idle_activation_enabled
        value: 'true'
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_idle_activation_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)
        - CJIS-5.5.5

    - name: Prevent user modification of GNOME idle_activation_enabled
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/screensaver/idle-activation-enabled
        line: /org/gnome/desktop/screensaver/idle-activation-enabled
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_idle_activation_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)
        - CJIS-5.5.5

    - name: Implement Blank Screensaver
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/screensaver
        option: picture-uri
        value: string ''
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_mode_blank
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(b)
        - CJIS-5.5.5

    - name: Prevent user modification of GNOME picture-uri
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/screensaver/picture-uri
        line: /org/gnome/desktop/screensaver/picture-uri
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_mode_blank
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(b)
        - CJIS-5.5.5

    - name: Set GNOME3 Screensaver Inactivity Timeout
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/screensaver
        option: idle-delay
        value: '{{ inactivity_timeout_value }}'
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_idle_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)
        - CJIS-5.5.5

    - name: Prevent user modification of GNOME idle-delay
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/screensaver/idle-delay
        line: /org/gnome/desktop/screensaver/idle-delay
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_idle_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)
        - CJIS-5.5.5

    - name: Enable GNOME3 Screensaver Lock After Idle Period
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/screensaver
        option: lock-enabled
        value: 'true'
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_lock_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(b)
        - CJIS-5.5.5

    - name: Prevent user modification of GNOME lock-enabled
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/screensaver/lock-enabled
        line: /org/gnome/desktop/screensaver/lock-enabled
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_screensaver_lock_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.8
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(b)
        - CJIS-5.5.5

    - name: Disable User Administration in GNOME3
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/lockdown
        option: user-administration-disabled
        value: 'true'
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_disable_user_admin
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.5

    - name: Prevent user modification of GNOME3 Thumbnailers
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/desktop/lockdown/user-administration-disabled
        line: /org/gnome/desktop/lockdown/user-administration-disabled
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_disable_user_admin
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.5

    - name: Disable GDM Automatic Login
      ini_file:
        dest: /etc/gdm/custom.conf
        section: daemon
        option: AutomaticLoginEnable
        value: 'false'
        no_extra_spaces: true
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - gnome_gdm_disable_automatic_login
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.1
        - NIST-800-53-CM-6(b)

    - name: Enable the GNOME3 Login Number of Failures
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: allowed-failures
        value: '3'
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_login_retries
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.8

    - name: Prevent user modification of GNOME3 Login Number of Failures
      lineinfile:
        path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/login-screen/allowed-failures
        line: /org/gnome/login-screen/allowed-failures
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - dconf_gnome_login_retries
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.8

    - name: Disable GDM Guest Login
      ini_file:
        dest: /etc/gdm/custom.conf
        section: daemon
        option: TimedLoginEnable
        value: 'false'
        no_extra_spaces: true
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - gnome_gdm_disable_guest_login
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.1
        - NIST-800-53-CM-6(b)

    - name: Set rsyslog remote loghost
      lineinfile:
        dest: /etc/rsyslog.conf
        regexp: ^\*\.\*
        line: '*.* @@{{ rsyslog_remote_loghost_address }}'
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - rsyslog_remote_loghost
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-3(2)
        - NIST-800-53-AU-4(1)
        - NIST-800-53-AU-9

    - name: Enable service firewalld
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: 'yes'
            state: started
          when:
            - '"firewalld" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_firewalld_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7
        - NIST-800-53-CM-6(b)

    - name: Ensure kernel module 'atm' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/atm.conf
        regexp: atm
        line: install atm /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_atm_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: Ensure kernel module 'firewire-core' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/firewire-core.conf
        regexp: firewire-core
        line: install firewire-core /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_firewire-core_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: Ensure kernel module 'tipc' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/tipc.conf
        regexp: tipc
        line: install tipc /bin/true
      tags:
        - kernel_module_tipc_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-53-CM-7

    - name: Ensure kernel module 'can' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/can.conf
        regexp: can
        line: install can /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_can_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_pti_argument
        - high_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} pti=on"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_pti_argument
        - high_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: Configure SELinux Policy
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: ^SELINUXTYPE=
        line: SELINUXTYPE={{ var_selinux_policy_name }}
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - selinux_policytype
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)
        - NIST-800-53-AC-3(4)
        - NIST-800-53-AC-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9
        - NIST-800-53-SI-6(a)

    - name: Ensure SELinux State is Enforcing
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: ^SELINUX=
        line: SELINUX={{ var_selinux_state }}
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - selinux_state
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)
        - NIST-800-53-AC-3(4)
        - NIST-800-53-AC-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9
        - NIST-800-53-SI-6(a)

    - name: Add auth pam_faillock preauth even_deny_root before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent even_deny_root
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny_root
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(b)

    - name: Add even_deny_root argument to auth pam_faillock preauth
      pamd:
        name: '{{ item }}'
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent even_deny_root
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny_root
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(b)

    - name: Add auth pam_faillock authfail even_deny_root after pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: authfail even_deny_root
        state: after
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny_root
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(b)

    - name: Add even_deny_root argument to auth pam_faillock authfail
      pamd:
        name: '{{ item }}'
        type: auth
        control: '[default=die]'
        module_path: pam_faillock.so
        module_arguments: authfail even_deny_root
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny_root
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(b)

    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny_root
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(b)

    - name: Add auth pam_faillock preauth unlock_time before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
          }}
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.7
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(b)
        - CJIS-5.5.3

    - name: Add unlock_time argument to pam_faillock preauth
      pamd:
        name: '{{ item }}'
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.7
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(b)
        - CJIS-5.5.3

    - name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
          }}
        state: after
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.7
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(b)
        - CJIS-5.5.3

    - name: Add unlock_time argument to auth pam_faillock authfail
      pamd:
        name: '{{ item }}'
        type: auth
        control: '[default=die]'
        module_path: pam_faillock.so
        module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.7
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(b)
        - CJIS-5.5.3

    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_unlock_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.7
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(b)
        - CJIS-5.5.3

    - name: Add auth pam_faillock preauth fail_interval before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
          }}
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(a)

    - name: Add fail_interval argument to auth pam_faillock preauth
      pamd:
        name: '{{ item }}'
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(a)

    - name: Add auth pam_faillock aufthfail fail_interval after pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
          }}
        state: after
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(a)

    - name: Add fail_interval argument to auth pam_faillock authfail
      pamd:
        name: '{{ item }}'
        type: auth
        control: '[default=die]'
        module_path: pam_faillock.so
        module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(a)

    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_interval
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-7(a)

    - name: Add auth pam_faillock preauth deny before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny
          }}
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.6
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - CJIS-5.5.3

    - name: Add deny argument to auth pam_faillock preauth
      pamd:
        name: '{{ item }}'
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny
          }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.6
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - CJIS-5.5.3

    - name: Add auth pam_faillock authfail deny after pam_unix.so
      pamd:
        name: '{{ item }}'
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: after
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.6
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - CJIS-5.5.3

    - name: Add deny argument to auth pam_faillock authfail
      pamd:
        name: '{{ item }}'
        type: auth
        new_type: auth
        control: '[default=die]'
        module_path: pam_faillock.so
        module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
        state: args_present
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.6
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - CJIS-5.5.3

    - name: Add account pam_faillock before pam_unix.so
      pamd:
        name: '{{ item }}'
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      loop:
        - system-auth
        - password-auth
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.1.6
        - NIST-800-171-3.1.8
        - NIST-800-53-AC-7(a)
        - CJIS-5.5.3

    - name: Ensure PAM variable minlen is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minlen
        line: minlen = {{ var_password_pam_minlen }}
      tags:
        - accounts_password_pam_minlen
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.2.3
        - NIST-800-53-IA-5(1)(a)
        - CJIS-5.6.2.1.1

    - name: Ensure PAM variable dcredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*dcredit
        line: dcredit = {{ var_password_pam_dcredit }}
      tags:
        - accounts_password_pam_dcredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.2.3
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-194

    - name: Ensure PAM variable ocredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*ocredit
        line: ocredit = {{ var_password_pam_ocredit }}
      tags:
        - accounts_password_pam_ocredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)

    - name: Ensure PAM variable lcredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*lcredit
        line: lcredit = {{ var_password_pam_lcredit }}
      tags:
        - accounts_password_pam_lcredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.2.3
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)

    - name: Ensure PAM variable ucredit is set accordingly
      lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*ucredit
        line: ucredit = {{ var_password_pam_ucredit }}
      tags:
        - accounts_password_pam_ucredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.2.3
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)

    - name: Set Password Retry Prompts Permitted Per-Session - system-auth (change)
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: (^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)
        replace: \g<1>{{ var_password_pam_retry }}\g<3>
      tags:
        - accounts_password_pam_retry
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-53-CM-6(b)
        - NIST-800-53-IA-5(c)
        - CJIS-5.5.3

    - name: Set Password Retry Prompts Permitted Per-Session - system-auth (add)
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: ^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$
        replace: \g<0> retry={{ var_password_pam_retry }}
      tags:
        - accounts_password_pam_retry
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-53-CM-6(b)
        - NIST-800-53-IA-5(c)
        - CJIS-5.5.3

    - name: Unit Service Exists - debug-shell.service
      command: systemctl list-unit-files debug-shell.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_debug-shell_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.5

    - name: Disable service debug-shell
      systemd:
        name: debug-shell.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"debug-shell.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_debug-shell_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.5

    - name: Unit Socket Exists - debug-shell.socket
      command: systemctl list-unit-files debug-shell.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_debug-shell_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.5

    - name: Disable socket debug-shell
      systemd:
        name: debug-shell.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"debug-shell.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_debug-shell_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.4.5

    - name: require single user mode password
      lineinfile:
        create: true
        dest: /usr/lib/systemd/system/rescue.service
        regexp: ^#?ExecStart=
        line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block
          default"
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - require_singleuser_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.1
        - NIST-800-171-3.4.5
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(1)
        - NIST-800-53-AC-3

    - name: Verify that Interactive Boot is Disabled in /etc/default/grub
      replace:
        dest: /etc/default/grub
        regexp: systemd.confirm_spawn=(1|yes|true|on)
        replace: systemd.confirm_spawn=no
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_disable_interactive_boot
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-171-3.1.2
        - NIST-800-171-3.4.5
        - NIST-800-53-SC-2
        - NIST-800-53-AC-3

    - name: Verify that Interactive Boot is Disabled (runtime)
      command: /sbin/grubby --update-kernel=ALL --remove-args="systemd.confirm_spawn"
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_disable_interactive_boot
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-171-3.1.2
        - NIST-800-171-3.4.5
        - NIST-800-53-SC-2
        - NIST-800-53-AC-3

    - name: Ensure tmux is installed
      package:
        name: tmux
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_tmux_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.10
        - NIST-800-53-AC-11(a)

    - name: Configure tmux to lock session after inactivity
      block:

        - name: Deduplicate values from /etc/tmux.conf
          lineinfile:
            path: /etc/tmux.conf
            create: false
            regexp: ^\s*set -g lock-after-time\s+
            state: absent

        - name: Insert correct line to /etc/tmux.conf
          lineinfile:
            path: /etc/tmux.conf
            create: true
            line: set -g lock-after-time 900
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - configure_tmux_lock_after_time
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Configure the tmux Lock Command
      block:

        - name: Deduplicate values from /etc/tmux.conf
          lineinfile:
            path: /etc/tmux.conf
            create: false
            regexp: ^\s*set -g lock-command\s+
            state: absent

        - name: Insert correct line to /etc/tmux.conf
          lineinfile:
            path: /etc/tmux.conf
            create: true
            line: set -g lock-command vlock
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - configure_tmux_lock_command
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-11(a)
        - NIST-800-53-AC-11(b)

    - name: Set Interactive Session Timeout
      block:

        - name: Deduplicate values from /etc/profile
          lineinfile:
            path: /etc/profile
            create: false
            regexp: ^\s*TMOUT=
            state: absent

        - name: Check if /etc/profile.d exists
          stat:
            path: /etc/profile.d
          register: _etc_profile_d_exists

        - name: Check if the parameter TMOUT is present in /etc/profile.d
          find:
            paths: /etc/profile.d
            recurse: 'yes'
            follow: 'no'
            contains: ^\s*TMOUT=
          register: _etc_profile_d_has_parameter
          when: _etc_profile_d_exists.stat.isdir is defined and _etc_profile_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/profile.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: ^\s*TMOUT=
            state: absent
          with_items: '{{ _etc_profile_d_has_parameter.files }}'
          when: _etc_profile_d_has_parameter.matched

        - name: Insert correct line to /etc/profile
          lineinfile:
            path: /etc/profile
            create: true
            line: TMOUT={{ var_accounts_tmout }}
            state: present
            validate: bash -n %s
      tags:
        - accounts_tmout
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.11
        - NIST-800-53-AC-12
        - NIST-800-53-SC-10
        - NIST-800-53-AC-2(5)

    - name: Enable GNOME3 Login Warning Banner
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/login-screen
        option: banner-message-enable
        value: 'true'
        create: true
      tags:
        - dconf_gnome_banner_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)

    - name: Prevent user modification of GNOME banner-message-enabled
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/login-screen/banner-message-enable
        line: /org/gnome/login-screen/banner-message-enable
        create: true
      tags:
        - dconf_gnome_banner_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)

    - name: Set the GNOME3 Login Warning Banner Text
      file:
        path: /etc/dconf/db/{{ item }}
        owner: root
        group: root
        mode: 493
        state: directory
      with_items:
        - gdm.d
        - gdm.d/locks
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)

    - name: Set the GNOME3 Login Warning Banner Text
      file:
        path: /etc/dconf/db/gdm.d/{{ item }}
        owner: root
        group: root
        mode: 420
        state: touch
      with_items:
        - 00-security-settings
        - locks/00-security-settings-lock
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)

    - name: Set the GNOME3 Login Warning Banner Text
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: banner-message-text
        value: '{{ login_banner_text }}'
        create: true
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)

    - name: Prevent user modification of the GNOME3 Login Warning Banner Text
      lineinfile:
        path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
        regexp: ^org/gnome/login-screen/banner-message-text$
        line: org/gnome/login-screen/banner-message-text
        create: true
        state: present
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)

    - name: Set Password Minimum Length in login.defs
      lineinfile:
        dest: /etc/login.defs
        regexp: ^PASS_MIN_LEN *[0-9]*
        state: present
        line: PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}
        create: true
      tags:
        - accounts_password_minlen_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.5.7
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(a)
        - CJIS-5.6.2.1

    - name: Prevent Log In to Accounts With Empty Password - system-auth
      replace:
        dest: /etc/pam.d/system-auth
        follow: true
        regexp: nullok
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.2.3
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-6
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - CJIS-5.5.2

    - name: Prevent Log In to Accounts With Empty Password - password-auth
      replace:
        dest: /etc/pam.d/password-auth
        follow: true
        regexp: nullok
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - PCI-DSS-Req-8.2.3
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-6
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - CJIS-5.5.2

    - name: Enable service auditd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service auditd
          service:
            name: auditd
            enabled: 'yes'
            state: started
          when:
            - '"audit" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_auditd_enabled
        - high_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.1
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - NIST-800-53-AC-2(g)
        - NIST-800-53-AU-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-IR-5
        - NIST-800-53-AU-12(1)
        - CJIS-5.4.1.1

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_backlog_limit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} audit_backlog_limit=8192"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_backlog_limit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.3
        - NIST-800-171-3.3.1
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12
        - NIST-800-53-IR-5
        - NIST-800-53-AU-12(1)
        - CJIS-5.4.1.1

    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} audit=1"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.3
        - NIST-800-171-3.3.1
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12
        - NIST-800-53-IR-5
        - NIST-800-53-AU-12(1)
        - CJIS-5.4.1.1

    - name: Set hostname as computer node name in audit logs
      block:

        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*name_format\s*=\s*
            state: absent

        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: name_format = hostname
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_name_format
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: enable syslog plugin
      lineinfile:
        dest: /etc/audit/plugins.d/syslog.conf
        regexp: ^active
        line: active = yes
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_audispd_syslog_plugin_activated
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.5.3
        - NIST-800-171-3.3.1
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-3(2)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Resolve information before writing to audit logs
      block:

        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*log_format\s*=\s*
            state: absent

        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: log_format = ENRICHED
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_log_format
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Set number of records to cause an explicit flush to audit logs
      block:

        - name: Deduplicate values from /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: false
            regexp: (?i)^\s*freq\s*=\s*
            state: absent

        - name: Insert correct line to /etc/audit/auditd.conf
          lineinfile:
            path: /etc/audit/auditd.conf
            create: true
            line: freq = 50
            state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_freq
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Set architecture for audit openat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/gshadow.*
        patterns: '*.rules'
      register: find_openat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_openat.matched is defined and find_openat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_openat.matched is defined and find_openat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/gshadow -F
          auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/gshadow -F
          auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/gshadow -F
          auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/gshadow -F
          auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit open_by_handle_at tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/passwd.*
        patterns: '*.rules'
      register: find_open_by_handle_at
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd
          -F auid>=1000 -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd
          -F auid>=1000 -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
        on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/passwd
          -F auid>=1000 -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/passwd
          -F auid>=1000 -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit open_by_handle_at tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/group.*
        patterns: '*.rules'
      register: find_open_by_handle_at
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/group
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/group
          -F auid>=1000 -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/group
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/group
          -F auid>=1000 -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
        on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/group
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/group
          -F auid>=1000 -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/group
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/group
          -F auid>=1000 -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit open_by_handle_at tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/gshadow.*
        patterns: '*.rules'
      register: find_open_by_handle_at
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow
          -F auid>=1000 -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow
          -F auid>=1000 -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
        on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow
          -F auid>=1000 -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/gshadow
          -F auid>=1000 -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit open tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/passwd.*
        patterns: '*.rules'
      register: find_open
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_open.matched is defined and find_open.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open.files | map(attribute=''path'') | list | first }}'
      when:
        - find_open.matched is defined and find_open.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit open_by_handle_at tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/shadow.*
        patterns: '*.rules'
      register: find_open_by_handle_at
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow
          -F auid>=1000 -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow
          -F auid>=1000 -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
        on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&03 -F path=/etc/shadow
          -F auid>=1000 -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow
          -F auid>=1000 -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&03 -F path=/etc/shadow
          -F auid>=1000 -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit openat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/group.*
        patterns: '*.rules'
      register: find_openat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_openat.matched is defined and find_openat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_openat.matched is defined and find_openat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit open tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/group.*
        patterns: '*.rules'
      register: find_open
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_open.matched is defined and find_open.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open.files | map(attribute=''path'') | list | first }}'
      when:
        - find_open.matched is defined and find_open.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/group -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_group_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit shadow tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: '*.rules'
      register: find_shadow
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_shadow.matched is defined and find_shadow.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
      when:
        - find_shadow.matched is defined and find_shadow.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the shadow rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Set architecture for audit openat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/passwd.*
        patterns: '*.rules'
      register: find_openat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_openat.matched is defined and find_openat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_openat.matched is defined and find_openat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/passwd -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_passwd_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit open tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/shadow.*
        patterns: '*.rules'
      register: find_open
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_open.matched is defined and find_open.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open.files | map(attribute=''path'') | list | first }}'
      when:
        - find_open.matched is defined and find_open.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*dir=/var/log/audit/.*$
        patterns: '*.rules'
      register: find_var_log_audit
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - directory_access_var_log_audit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/access-audit-trail.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access-audit-trail.rules
      when:
        - find_var_log_audit.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - directory_access_var_log_audit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_var_log_audit.files | map(attribute=''path'') | list | first }}'
      when:
        - find_var_log_audit.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - directory_access_var_log_audit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the /var/log/audit/ rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid>=1000 -F auid!=unset
          -F key=access-audit-trail
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - directory_access_var_log_audit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the /var/log/audit/ rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid>=1000 -F auid!=unset
          -F key=access-audit-trail
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - directory_access_var_log_audit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit opasswd tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: '*.rules'
      register: find_opasswd
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_opasswd.matched is defined and find_opasswd.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_opasswd.files | map(attribute=''path'') | list | first }}'
      when:
        - find_opasswd.matched is defined and find_opasswd.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the opasswd rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Set architecture for audit gshadow tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: '*.rules'
      register: find_gshadow
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_gshadow.matched is defined and find_gshadow.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
      when:
        - find_gshadow.matched is defined and find_gshadow.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the gshadow rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Set architecture for audit open tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&03[\s]+-F[\s]+path=/etc/gshadow.*
        patterns: '*.rules'
      register: find_open
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_open.matched is defined and find_open.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open.files | map(attribute=''path'') | list | first }}'
      when:
        - find_open.matched is defined and find_open.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the open rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S open -F a1&03 -F path=/etc/gshadow -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_gshadow_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit openat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&03[\s]+-F[\s]+path=/etc/shadow.*
        patterns: '*.rules'
      register: find_openat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/modify.rules
      when:
        - find_openat.matched is defined and find_openat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_openat.matched is defined and find_openat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
        regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b32 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=modify
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the openat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
        regexp: -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=[\S]+
      with_items:
        - -a always,exit -F arch=b64 -S openat -F a2&03 -F path=/etc/shadow -F auid>=1000
          -F auid!=unset -F key=modify
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_etc_shadow_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit passwd tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: '*.rules'
      register: find_passwd
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_passwd.matched is defined and find_passwd.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
      when:
        - find_passwd.matched is defined and find_passwd.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the passwd rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Set architecture for audit group tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k audit_rules_usergroup_modification$
        patterns: '*.rules'
      register: find_group
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_group.matched is defined and find_group.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_group.files | map(attribute=''path'') | list | first }}'
      when:
        - find_group.matched is defined and find_group.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the group rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/group -p wa -k audit_rules_usergroup_modification
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Inserts/replaces the group rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/group -p wa -k audit_rules_usergroup_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)
        - CJIS-5.4.1.1

    - name: Set architecture for audit lastlog tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_lastlog
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_lastlog.matched is defined and find_lastlog.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lastlog.matched is defined and find_lastlog.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the lastlog rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/lastlog -p wa -k logins
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/lastlog -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit faillock tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_faillock
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_faillock.matched is defined and find_faillock.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
      when:
        - find_faillock.matched is defined and find_faillock.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the faillock rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/run/faillock -p wa -k logins
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/run/faillock -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit tallylog tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_tallylog
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_tallylog.matched is defined and find_tallylog.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
      when:
        - find_tallylog.matched is defined and find_tallylog.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the tallylog rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/tallylog -p wa -k logins
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/tallylog -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.3
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit fchown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchown
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchown.matched is defined and find_fchown.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchown.matched is defined and find_fchown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchown rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit setxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_setxattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_setxattr.matched is defined and find_setxattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_setxattr.matched is defined and find_setxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the setxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the setxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit chown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chown
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chown.matched is defined and find_chown.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chown.matched is defined and find_chown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the chown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit removexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_removexattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_removexattr.matched is defined and find_removexattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_removexattr.matched is defined and find_removexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the removexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the removexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit fchownat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchownat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchownat.matched is defined and find_fchownat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchownat.matched is defined and find_fchownat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchownat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchownat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit chmod tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chmod
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chmod.matched is defined and find_chmod.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chmod.matched is defined and find_chmod.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the chmod rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit fsetxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fsetxattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit fchmod tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchmod
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchmod.matched is defined and find_fchmod.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchmod.matched is defined and find_fchmod.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchmod rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchmod rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit lsetxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lsetxattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F
          key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit fremovexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fremovexattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit lchown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lchown
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_lchown.matched is defined and find_lchown.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lchown.matched is defined and find_lchown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lchown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lchown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lchown rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit fchmodat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchmodat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_fchmodat.matched is defined and find_fchmodat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchmodat.matched is defined and find_fchmodat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Set architecture for audit lremovexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lremovexattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset
          -F key=perm_mod
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.5.5
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - CJIS-5.4.1.1

    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: |-
          ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
          ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_o_trunc_write
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit fchownat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchownat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_fchownat.matched is defined and find_fchownat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchownat.matched is defined and find_fchownat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchownat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchownat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchownat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: |-
          ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
          ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat_o_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit lchown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lchown
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_lchown.matched is defined and find_lchown.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lchown.matched is defined and find_lchown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lchown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lchown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lchown rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit fchmodat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchmodat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_fchmodat.matched is defined and find_fchmodat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchmodat.matched is defined and find_fchmodat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fchmodat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fchmodat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fchmodat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fchmodat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fchmodat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fchmodat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fchmodat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fchmodat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmodat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit removexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_removexattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_removexattr.matched is defined and find_removexattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_removexattr.matched is defined and find_removexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the removexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S removexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S removexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the removexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S removexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S removexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S removexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S removexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S removexattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S removexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit chown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chown
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_chown.matched is defined and find_chown.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chown.matched is defined and find_chown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the chown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit fchown tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchown
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_fchown.matched is defined and find_fchown.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchown.matched is defined and find_fchown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchown rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchown rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchown rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit truncate tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_truncate
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_truncate.matched is defined and find_truncate.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
      when:
        - find_truncate.matched is defined and find_truncate.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the truncate rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the truncate rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the truncate rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit setxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_setxattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_setxattr.matched is defined and find_setxattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_setxattr.matched is defined and find_setxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the setxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S setxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S setxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the setxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S setxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S setxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S setxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S setxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S setxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S setxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_setxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit openat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_openat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_openat.matched is defined and find_openat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_openat.matched is defined and find_openat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the openat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the openat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the openat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: |-
          ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
          ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_openat_o_trunc_write
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit renameat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_renameat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_renameat.matched is defined and find_renameat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_renameat.matched is defined and find_renameat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the renameat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the renameat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the renameat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit lremovexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lremovexattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: |-
          ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
          ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_o_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit fremovexattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fremovexattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EACCES -F auid>=1000 -F
          auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit unlink tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_unlink
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_unlink.matched is defined and find_unlink.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
      when:
        - find_unlink.matched is defined and find_unlink.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the unlink rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the unlink rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the unlink rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: |-
          ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
          ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit fsetxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fsetxattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit lsetxattr tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_lsetxattr
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_lsetxattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit open tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_open
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_open.matched is defined and find_open.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open.files | map(attribute=''path'') | list | first }}'
      when:
        - find_open.matched is defined and find_open.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the open rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the open rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the open rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit chmod tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_chmod
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_chmod.matched is defined and find_chmod.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chmod.matched is defined and find_chmod.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the chmod rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S chmod -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S chmod -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S chmod -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S chmod -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S chmod -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S chmod -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S chmod -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S chmod -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_chmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Set architecture for audit open_by_handle_at tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_open_by_handle_at
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
          > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000
          -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000
          -F auid!=unset -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000
          -F auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000
          -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
        on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000
          -F auid!=unset -F key=access
        - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000
          -F auid!=unset -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000
          -F auid!=unset -F key=access
        - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000
          -F auid!=unset -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit ftruncate tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_ftruncate
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_ftruncate.matched is defined and find_ftruncate.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
      when:
        - find_ftruncate.matched is defined and find_ftruncate.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the ftruncate rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit unlinkat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_unlinkat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_unlinkat.matched is defined and find_unlinkat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_unlinkat.matched is defined and find_unlinkat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the unlinkat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: |-
          ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
          ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit fchmod tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_fchmod
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_fchmod.matched is defined and find_fchmod.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
      when:
        - find_fchmod.matched is defined and find_fchmod.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchmod rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fchmod -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fchmod -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchmod rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fchmod -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fchmod -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S fchmod -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S fchmod -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S fchmod -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S fchmod -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_fchmod
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - NIST-800-53-AU-12(c)

    - name: Add unsuccessful file operations audit rules
      blockinfile:
        path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
        create: true
        block: |-
          ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
          ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

          ## The purpose of these rules is to meet the requirements for Operating
          ## System Protection Profile (OSPP)v4.2. These rules depends on having
          ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

          ## Unsuccessful file creation (open with O_CREAT)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
          -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

          ## Unsuccessful file modifications (open for write or truncate)
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
          -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

          ## Unsuccessful file access (any other opens) This has to go last.
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
          -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Set architecture for audit rename tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=perm_mod$
        patterns: '*.rules'
      register: find_rename
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when:
        - find_rename.matched is defined and find_rename.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
      when:
        - find_rename.matched is defined and find_rename.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the rename rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the rename rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: '{{ item }}'
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Inserts/replaces the rename rule in audit.rules when on x86_64
      lineinfile:
        line: '{{ item }}'
        state: present
        dest: /etc/audit/audit.rules
        create: true
      with_items:
        - -a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid>=1000 -F auid!=unset
          -F key=access
        - -a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid>=1000 -F auid!=unset
          -F key=access
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_unsuccessful_file_modification_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/seunshare.*$
        patterns: '*.rules'
      register: find_seunshare
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_seunshare.matched is defined and find_seunshare.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_seunshare.files | map(attribute=''path'') | list | first }}'
      when:
        - find_seunshare.matched is defined and find_seunshare.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the seunshare rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the seunshare rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_seunshare
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/setsebool.*$
        patterns: '*.rules'
      register: find_setsebool
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_setsebool.matched is defined and find_setsebool.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_setsebool.files | map(attribute=''path'') | list | first }}'
      when:
        - find_setsebool.matched is defined and find_setsebool.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the setsebool rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the setsebool rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/semanage.*$
        patterns: '*.rules'
      register: find_semanage
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_semanage.matched is defined and find_semanage.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_semanage.files | map(attribute=''path'') | list | first }}'
      when:
        - find_semanage.matched is defined and find_semanage.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the semanage rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the semanage rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/chcon.*$
        patterns: '*.rules'
      register: find_chcon
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chcon.matched is defined and find_chcon.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chcon.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chcon.matched is defined and find_chcon.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the chcon rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the chcon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/restorecon.*$
        patterns: '*.rules'
      register: find_restorecon
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_restorecon.matched is defined and find_restorecon.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_restorecon.files | map(attribute=''path'') | list | first }}'
      when:
        - find_restorecon.matched is defined and find_restorecon.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the restorecon rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the restorecon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Set architecture for audit rmdir tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rmdir
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: '*.rules'
      register: find_rmdir
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rmdir
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_rmdir.matched is defined and find_rmdir.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rmdir
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_rmdir.files | map(attribute=''path'') | list | first }}'
      when:
        - find_rmdir.matched is defined and find_rmdir.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rmdir
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the rmdir rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rmdir
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the rmdir rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rmdir
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the rmdir rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rmdir
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the rmdir rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rmdir
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Set architecture for audit unlinkat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: '*.rules'
      register: find_unlinkat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_unlinkat.matched is defined and find_unlinkat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_unlinkat.matched is defined and find_unlinkat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the unlinkat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlinkat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Set architecture for audit rename tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: '*.rules'
      register: find_rename
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_rename.matched is defined and find_rename.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
      when:
        - find_rename.matched is defined and find_rename.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the rename rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the rename rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the rename rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_rename
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Set architecture for audit renameat tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: '*.rules'
      register: find_renameat
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_renameat.matched is defined and find_renameat.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
      when:
        - find_renameat.matched is defined and find_renameat.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the renameat rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the renameat rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the renameat rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_renameat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Set architecture for audit unlink tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -F key=delete$
        patterns: '*.rules'
      register: find_unlink
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
        the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/delete.rules
      when:
        - find_unlink.matched is defined and find_unlink.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
      when:
        - find_unlink.matched is defined and find_unlink.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the unlink rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the unlink rule in rules.d when on x86_64
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Inserts/replaces the unlink rule in audit.rules when on x86_64
      lineinfile:
        line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - audit_arch is defined and audit_arch == 'b64'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_file_deletion_events_unlink
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - PCI-DSS-Req-10.2.7
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-53-MA-4(1)(a)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/passwd.*$
        patterns: '*.rules'
      register: find_passwd
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_passwd.matched is defined and find_passwd.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
      when:
        - find_passwd.matched is defined and find_passwd.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the passwd rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the passwd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/sudo.*$
        patterns: '*.rules'
      register: find_sudo
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_sudo.matched is defined and find_sudo.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_sudo.files | map(attribute=''path'') | list | first }}'
      when:
        - find_sudo.matched is defined and find_sudo.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the sudo rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the sudo rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/usernetctl.*$
        patterns: '*.rules'
      register: find_usernetctl
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_usernetctl
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_usernetctl.matched is defined and find_usernetctl.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_usernetctl
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_usernetctl.files | map(attribute=''path'') | list | first }}'
      when:
        - find_usernetctl.matched is defined and find_usernetctl.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_usernetctl
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the usernetctl rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/usernetctl -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_usernetctl
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the usernetctl rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/usernetctl -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_usernetctl
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/chsh.*$
        patterns: '*.rules'
      register: find_chsh
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chsh.matched is defined and find_chsh.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chsh.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chsh.matched is defined and find_chsh.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the chsh rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the chsh rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/newgidmap.*$
        patterns: '*.rules'
      register: find_newgidmap
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_newgidmap.matched is defined and find_newgidmap.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_newgidmap.files | map(attribute=''path'') | list | first }}'
      when:
        - find_newgidmap.matched is defined and find_newgidmap.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the newgidmap rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the newgidmap rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/gpasswd.*$
        patterns: '*.rules'
      register: find_gpasswd
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_gpasswd.matched is defined and find_gpasswd.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_gpasswd.files | map(attribute=''path'') | list | first }}'
      when:
        - find_gpasswd.matched is defined and find_gpasswd.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the gpasswd rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the gpasswd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/chage.*$
        patterns: '*.rules'
      register: find_chage
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_chage.matched is defined and find_chage.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_chage.files | map(attribute=''path'') | list | first }}'
      when:
        - find_chage.matched is defined and find_chage.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the chage rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the chage rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/userhelper.*$
        patterns: '*.rules'
      register: find_userhelper
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_userhelper.matched is defined and find_userhelper.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_userhelper.files | map(attribute=''path'') | list | first }}'
      when:
        - find_userhelper.matched is defined and find_userhelper.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the userhelper rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the userhelper rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/at.*$
        patterns: '*.rules'
      register: find_at
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_at.matched is defined and find_at.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_at.files | map(attribute=''path'') | list | first }}'
      when:
        - find_at.matched is defined and find_at.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the at rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/at -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the at rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/at -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/crontab.*$
        patterns: '*.rules'
      register: find_crontab
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_crontab.matched is defined and find_crontab.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_crontab.files | map(attribute=''path'') | list | first }}'
      when:
        - find_crontab.matched is defined and find_crontab.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the crontab rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the crontab rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/umount.*$
        patterns: '*.rules'
      register: find_umount
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_umount.matched is defined and find_umount.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_umount.files | map(attribute=''path'') | list | first }}'
      when:
        - find_umount.matched is defined and find_umount.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the umount rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the umount rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/sbin/unix_chkpwd.*$
        patterns: '*.rules'
      register: find_unix_chkpwd
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_unix_chkpwd.files | map(attribute=''path'') | list | first }}'
      when:
        - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the unix_chkpwd rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F
          auid!=unset -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the unix_chkpwd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F
          auid!=unset -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/libexec/pt_chown.*$
        patterns: '*.rules'
      register: find_pt_chown
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_pt_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_pt_chown.matched is defined and find_pt_chown.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_pt_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_pt_chown.files | map(attribute=''path'') | list | first }}'
      when:
        - find_pt_chown.matched is defined and find_pt_chown.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_pt_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the pt_chown rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/libexec/pt_chown -F perm=x -F auid>=1000 -F
          auid!=unset -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_pt_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the pt_chown rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/libexec/pt_chown -F perm=x -F auid>=1000 -F
          auid!=unset -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_pt_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/libexec/openssh/ssh-keysign.*$
        patterns: '*.rules'
      register: find_ssh_keysign
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_ssh_keysign.matched is defined and find_ssh_keysign.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_ssh_keysign.files | map(attribute=''path'') | list | first }}'
      when:
        - find_ssh_keysign.matched is defined and find_ssh_keysign.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the ssh_keysign rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000
          -F auid!=unset -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the ssh_keysign rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000
          -F auid!=unset -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/sudoedit.*$
        patterns: '*.rules'
      register: find_sudoedit
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_sudoedit.matched is defined and find_sudoedit.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_sudoedit.files | map(attribute=''path'') | list | first }}'
      when:
        - find_sudoedit.matched is defined and find_sudoedit.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the sudoedit rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the sudoedit rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/mount.*$
        patterns: '*.rules'
      register: find_mount
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_mount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_mount.matched is defined and find_mount.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_mount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_mount.files | map(attribute=''path'') | list | first }}'
      when:
        - find_mount.matched is defined and find_mount.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_mount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the mount rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/mount -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_mount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the mount rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/mount -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_mount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/newuidmap.*$
        patterns: '*.rules'
      register: find_newuidmap
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newuidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_newuidmap.matched is defined and find_newuidmap.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newuidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_newuidmap.files | map(attribute=''path'') | list | first }}'
      when:
        - find_newuidmap.matched is defined and find_newuidmap.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newuidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the newuidmap rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newuidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the newuidmap rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newuidmap
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/su.*$
        patterns: '*.rules'
      register: find_su
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_su.matched is defined and find_su.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_su.files | map(attribute=''path'') | list | first }}'
      when:
        - find_su.matched is defined and find_su.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the su rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the su rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*path=/usr/bin/newgrp.*$
        patterns: '*.rules'
      register: find_newgrp
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when:
        - find_newgrp.matched is defined and find_newgrp.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_newgrp.files | map(attribute=''path'') | list | first }}'
      when:
        - find_newgrp.matched is defined and find_newgrp.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the newgrp rule in rules.d
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Inserts/replaces the newgrp rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset
          -F key=privileged
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)

    - name: Ensure sysctl user.max_user_namespaces is set to 0
      sysctl:
        name: user.max_user_namespaces
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_user_max_user_namespaces
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-53-SC-39

    - name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
      sysctl:
        name: kernel.yama.ptrace_scope
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_yama_ptrace_scope
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: Ensure sysctl net.core.bpf_jit_harden is set to 2
      sysctl:
        name: net.core.bpf_jit_harden
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_core_bpf_jit_harden
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: Ensure sysctl kernel.dmesg_restrict is set to 1
      sysctl:
        name: kernel.dmesg_restrict
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_dmesg_restrict
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-171-3.1.5
        - NIST-800-53-SI-11

    - name: Ensure sysctl kernel.kexec_load_disabled is set to 1
      sysctl:
        name: kernel.kexec_load_disabled
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_kexec_load_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: Ensure sysctl kernel.perf_event_paranoid is set to 2
      sysctl:
        name: kernel.perf_event_paranoid
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_perf_event_paranoid
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_vsyscall_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} vsyscall=none"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_vsyscall_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: Ensure sysctl kernel.core_pattern is set to |/bin/false
      sysctl:
        name: kernel.core_pattern
        value: '|/bin/false'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_core_pattern
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: Ensure sysctl kernel.unprivileged_bpf_disabled is set to 1
      sysctl:
        name: kernel.unprivileged_bpf_disabled
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_unprivileged_bpf_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required

    - name: Unit Service Exists - systemd-coredump.service
      command: systemctl list-unit-files systemd-coredump.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      tags:
        - service_systemd-coredump_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Disable service systemd-coredump
      systemd:
        name: systemd-coredump.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when: '"systemd-coredump.service" in service_file_exists.stdout_lines[1]'
      tags:
        - service_systemd-coredump_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Unit Socket Exists - systemd-coredump.socket
      command: systemctl list-unit-files systemd-coredump.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      tags:
        - service_systemd-coredump_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Disable socket systemd-coredump
      systemd:
        name: systemd-coredump.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when: '"systemd-coredump.socket" in socket_file_exists.stdout_lines[1]'
      tags:
        - service_systemd-coredump_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Disable core dump backtraces
      block:

        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            state: absent

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            line: ProcessSizeMax=0
            state: present
      tags:
        - coredump_disable_backtraces
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Disable storing core dump
      block:

        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            state: absent

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            line: Storage=none
            state: present
      tags:
        - coredump_disable_storage
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Ensure sysctl kernel.kptr_restrict is set to 1
      sysctl:
        name: kernel.kptr_restrict
        value: '1'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_kptr_restrict
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - NIST-800-53-SC-39

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_slub_debug_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} slub_debug=P"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_slub_debug_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_page_poison_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} page_poison=1"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_page_poison_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: Ensure permission noexec are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: Ensure permission nosuid are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: get back mount information associated to mountpoint
      command: findmnt --fstab '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: Ensure permission nodev are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2

    - name: Enable service rngd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service rngd
          service:
            name: rngd
            enabled: 'yes'
            state: started
          when:
            - '"rng-tools" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rngd_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Ensure fapolicyd is installed
      package:
        name: fapolicyd
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_fapolicyd_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Ensure abrt is removed
      package:
        name: abrt
        state: absent
      tags:
        - package_abrt_removed
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Disable SSH Access via Empty Passwords
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitEmptyPasswords no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_empty_passwords
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(b)
        - CJIS-5.5.6

    - name: Enable SSH Warning Banner
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Banner\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Banner /etc/issue
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_enable_warning_banner
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - CJIS-5.5.6

    - name: Force frequent session key renegotiation
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*RekeyLimit\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: RekeyLimit 512M 1h
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_rekey_limit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed

    - name: Disable Kerberos Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*KerberosAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: KerberosAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_kerb_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-CM-6(c)

    - name: Disable Host-Based Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*HostbasedAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: HostbasedAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - disable_host_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-3
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(b)
        - CJIS-5.5.6

    - name: Disable GSSAPI Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*GSSAPIAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: GSSAPIAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_gssapi_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-CM-6(c)

    - name: Disable SSH Root Login
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_root_login
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(b)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(5)
        - CJIS-5.5.6

