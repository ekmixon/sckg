# platform = Red Hat Enterprise Linux 7,multi_platform_fedora,multi_platform_rhv,Oracle Linux 7
# complexity = low
# reboot = false
# disruption = low
# strategy = configure
- name: Check existence of pkcs11-switch
  stat:
    path: /usr/bin/pkcs11-switch
  register: pkcs11switch
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - configure_opensc_nss_db
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - CCE-80567-1
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)

- name: Get NSS database smart card configuration
  command: /usr/bin/pkcs11-switch
  changed_when: true
  register: pkcsw_output
  when:
    - pkcs11switch.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - configure_opensc_nss_db
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - CCE-80567-1
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)

- name: Configure NSS DB To Use opensc
  command: /usr/bin/pkcs11-switch opensc
  when:
    - pkcs11switch.stat.exists and pkcsw_output.stdout != "opensc"
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - configure_opensc_nss_db
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - CCE-80567-1
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)
