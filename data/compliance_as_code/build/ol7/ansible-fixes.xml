<fix-content system="urn:xccdf:fix:script:sh" xmlns="http://checklists.nist.gov/xccdf/1.1"><fix-group id="ansible" system="urn:xccdf:fix:script:ansible" xmlns="http://checklists.nist.gov/xccdf/1.1"><fix complexity="low" disruption="low" reboot="false" rule="package_abrt_removed" strategy="disable">- name: Ensure abrt is removed
  package:
    name: abrt
    state: absent
  tags:
    - package_abrt_removed
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="disable_host_auth" strategy="restrict">- name: Disable Host-Based Authentication
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*HostbasedAuthentication\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: HostbasedAuthentication no
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - disable_host_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-3
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(b)
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_unsuccessful_file_modification_open_o_trunc_write" strategy="restrict">- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: |-
      ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating
      ## System Protection Profile (OSPP)v4.2. These rules depends on having
      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_o_trunc_write
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_fchownat" strategy="restrict">- name: Set architecture for audit fchownat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchownat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_fchownat.matched is defined and find_fchownat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fchownat.matched is defined and find_fchownat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fchownat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fchownat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fchownat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fchownat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_ntp_installed" strategy="enable">- name: Ensure ntp is installed
  package:
    name: ntp
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_ntp_installed
    - high_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.4
    - NIST-800-53-AU-8(1)
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_groupowner_etc_shadow" strategy="configure">- name: Test for existence /etc/shadow
  stat:
    path: /etc/shadow
  register: file_exists
  tags:
    - file_groupowner_etc_shadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure group owner 0 on /etc/shadow
  file:
    path: /etc/shadow
    group: '0'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_groupowner_etc_shadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="sebool_selinuxuser_execstack" strategy="enable">- name: XCCDF Value var_selinuxuser_execstack # promote to variable
  set_fact:
    var_selinuxuser_execstack: !!str <sub idref="var_selinuxuser_execstack" />
  tags:
    - always

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sebool_selinuxuser_execstack
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Set SELinux boolean selinuxuser_execstack accordingly
  seboolean:
    name: selinuxuser_execstack
    state: '{{ var_selinuxuser_execstack }}'
    persistent: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sebool_selinuxuser_execstack
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_screensaver_user_info" strategy="unknown">- name: Disable Full Username on Splash Screen
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: show-full-name-in-top-bar
    value: 'false'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_user_info
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed

- name: Prevent user modification of GNOME show-full-name-in-top-bar
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/show-full-name-in-top-bar
    line: /org/gnome/desktop/screensaver/show-full-name-in-top-bar
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_user_info
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_group_openat" strategy="restrict">- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&amp;03[\s]+-F[\s]+path=/etc/group.*
    patterns: '*.rules'
  register: find_openat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_openat.matched is defined and find_openat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_openat.matched is defined and find_openat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_ocredit" strategy="restrict">- name: XCCDF Value var_password_pam_ocredit # promote to variable
  set_fact:
    var_password_pam_ocredit: !!str <sub idref="var_password_pam_ocredit" />
  tags:
    - always

- name: Ensure PAM variable ocredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ocredit
    line: ocredit = {{ var_password_pam_ocredit }}
  tags:
    - accounts_password_pam_ocredit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="selinux_policytype" strategy="restrict">- name: XCCDF Value var_selinux_policy_name # promote to variable
  set_fact:
    var_selinux_policy_name: !!str <sub idref="var_selinux_policy_name" />
  tags:
    - always

- name: Configure SELinux Policy
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUXTYPE=
    line: SELINUXTYPE={{ var_selinux_policy_name }}
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - selinux_policytype
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.2
    - NIST-800-171-3.7.2
    - NIST-800-53-AC-3
    - NIST-800-53-AC-3(3)
    - NIST-800-53-AC-3(4)
    - NIST-800-53-AC-4
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9
    - NIST-800-53-SI-6(a)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_lremovexattr" strategy="restrict">- name: Set architecture for audit lremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lremovexattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_lremovexattr.matched is defined and find_lremovexattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EACCES -F auid&gt;=1000 -F
      auid!=unset -F key=access
    - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EACCES -F auid&gt;=1000 -F
      auid!=unset -F key=access
    - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EACCES -F auid&gt;=1000 -F
      auid!=unset -F key=access
    - -a always,exit -F arch=b32 -S lremovexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EACCES -F auid&gt;=1000 -F
      auid!=unset -F key=access
    - -a always,exit -F arch=b64 -S lremovexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="medium" disruption="low" reboot="true" rule="grub2_vsyscall_argument" strategy="restrict">- name: check vsyscall argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*vsyscall=' /etc/default/grub
  failed_when: false
  register: argcheck
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_vsyscall_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: replace existing vsyscall argument
  replace:
    path: /etc/default/grub
    regexp: vsyscall=.
    replace: vsyscall=none
  when:
    - argcheck.rc == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_vsyscall_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: add vsyscall argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 vsyscall=none"
  when:
    - argcheck.rc != 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_vsyscall_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="vsyscall=none"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_vsyscall_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
</fix><fix complexity="low" disruption="medium" reboot="false" rule="ensure_gpgcheck_local_packages" strategy="unknown">- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when: ansible_distribution == "Fedora"
  tags:
    - ensure_gpgcheck_local_packages
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.8
    - NIST-800-53-CM-5(3)
    - NIST-800-53-CM-11

- name: Ensure GPG check Enabled for Local Packages (Yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  tags:
    - ensure_gpgcheck_local_packages
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.8
    - NIST-800-53-CM-5(3)
    - NIST-800-53-CM-11

- name: Ensure GPG check Enabled for Local Packages (DNF)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when: ansible_distribution == "Fedora"
  tags:
    - ensure_gpgcheck_local_packages
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.8
    - NIST-800-53-CM-5(3)
    - NIST-800-53-CM-11
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_login_banner_text" strategy="unknown">- name: XCCDF Value login_banner_text # promote to variable
  set_fact:
    login_banner_text: !!str <sub idref="login_banner_text" />
  tags:
    - always

- name: Set the GNOME3 Login Warning Banner Text
  file:
    path: /etc/dconf/db/{{ item }}
    owner: root
    group: root
    mode: 493
    state: directory
  with_items:
    - gdm.d
    - gdm.d/locks
  tags:
    - dconf_gnome_login_banner_text
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)

- name: Set the GNOME3 Login Warning Banner Text
  file:
    path: /etc/dconf/db/gdm.d/{{ item }}
    owner: root
    group: root
    mode: 420
    state: touch
  with_items:
    - 00-security-settings
    - locks/00-security-settings-lock
  tags:
    - dconf_gnome_login_banner_text
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)

- name: Set the GNOME3 Login Warning Banner Text
  ini_file:
    dest: /etc/dconf/db/gdm.d/00-security-settings
    section: org/gnome/login-screen
    option: banner-message-text
    value: '{{ login_banner_text }}'
    create: true
  tags:
    - dconf_gnome_login_banner_text
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)

- name: Prevent user modification of the GNOME3 Login Warning Banner Text
  lineinfile:
    path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
    regexp: ^org/gnome/login-screen/banner-message-text$
    line: org/gnome/login-screen/banner-message-text
    create: true
    state: present
  tags:
    - dconf_gnome_login_banner_text
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_file_deletion_events_rmdir" strategy="restrict">- name: Set architecture for audit rmdir tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rmdir
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rmdir
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rmdir
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/delete.rules
  when:
    - find_rmdir.matched is defined and find_rmdir.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rmdir
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_rmdir.files | map(attribute=''path'') | list | first }}'
  when:
    - find_rmdir.matched is defined and find_rmdir.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rmdir
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the rmdir rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rmdir -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rmdir
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the rmdir rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rmdir -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rmdir
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the rmdir rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rmdir -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rmdir
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the rmdir rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rmdir -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rmdir
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_default_rp_filter" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_default_rp_filter_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_default_rp_filter_value: !!str <sub idref="sysctl_net_ipv4_conf_default_rp_filter_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
  sysctl:
    name: net.ipv4.conf.default.rp_filter
    value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_default_rp_filter
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_enable_strictmodes" strategy="restrict">- name: Enable Use of Strict Mode Checking
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*StrictModes\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: StrictModes yes
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_enable_strictmodes
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-6
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-17(b)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_unsuccessful_file_modification_openat_o_trunc_write" strategy="restrict">- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: |-
      ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating
      ## System Protection Profile (OSPP)v4.2. These rules depends on having
      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat_o_trunc_write
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_libreswan_installed" strategy="enable">- name: Ensure libreswan is installed
  package:
    name: libreswan
    state: present
  tags:
    - package_libreswan_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-4.1
    - NIST-800-53-AC-17(a)
    - NIST-800-53-MA-4
    - NIST-800-53-SC-9
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_opensc_installed" strategy="enable">- name: Ensure opensc is installed
  package:
    name: opensc
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_opensc_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_gssapi_auth" strategy="restrict">- name: Disable GSSAPI Authentication
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*GSSAPIAuthentication\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: GSSAPIAuthentication no
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_gssapi_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-CM-6(c)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_removexattr" strategy="restrict">- name: Set architecture for audit removexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_removexattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_removexattr.matched is defined and find_removexattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_removexattr.matched is defined and find_removexattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S removexattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S removexattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S removexattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S removexattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_ntpdate_removed" strategy="disable">- name: Ensure ntpdate is removed
  package:
    name: ntpdate
    state: absent
  tags:
    - package_ntpdate_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_passwords_pam_faillock_interval" strategy="restrict">- name: XCCDF Value var_accounts_passwords_pam_faillock_fail_interval # promote to variable
  set_fact:
    var_accounts_passwords_pam_faillock_fail_interval: !!str <sub idref="var_accounts_passwords_pam_faillock_fail_interval" />
  tags:
    - always

- name: Add auth pam_faillock preauth fail_interval before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
      }}
    state: before
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_interval
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(a)

- name: Add fail_interval argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
      }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_interval
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(a)

- name: Add auth pam_faillock aufthfail fail_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
      }}
    state: after
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_interval
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(a)

- name: Add fail_interval argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval
      }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_interval
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(a)

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_interval
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(a)
</fix><fix complexity="medium" disruption="low" reboot="true" rule="grub2_page_poison_argument" strategy="restrict">- name: check page_poison argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*page_poison=' /etc/default/grub
  failed_when: false
  register: argcheck
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_page_poison_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: replace existing page_poison argument
  replace:
    path: /etc/default/grub
    regexp: page_poison=.
    replace: page_poison=1
  when:
    - argcheck.rc == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_page_poison_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: add page_poison argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 page_poison=1"
  when:
    - argcheck.rc != 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_page_poison_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="page_poison=1"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_page_poison_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_setxattr" strategy="restrict">- name: Set architecture for audit setxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_setxattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_setxattr.matched is defined and find_setxattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_setxattr.matched is defined and find_setxattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the setxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S setxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S setxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the setxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S setxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S setxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S setxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S setxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S setxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S setxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_execution_setsebool" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/setsebool.*$
    patterns: '*.rules'
  register: find_setsebool
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setsebool
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_setsebool.matched is defined and find_setsebool.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setsebool
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_setsebool.files | map(attribute=''path'') | list | first }}'
  when:
    - find_setsebool.matched is defined and find_setsebool.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setsebool
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the setsebool rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setsebool
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the setsebool rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setsebool
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_gshadow_open_by_handle_at" strategy="restrict">- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&amp;03[\s]+-F[\s]+path=/etc/gshadow.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
        }}'
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/gshadow
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/gshadow
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/gshadow
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/gshadow
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
    on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/gshadow
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/gshadow
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/gshadow
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/gshadow
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_usergroup_modification_shadow" strategy="restrict">- name: Set architecture for audit shadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_shadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_shadow
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_shadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_shadow.matched is defined and find_shadow.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_shadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
  when:
    - find_shadow.matched is defined and find_shadow.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_shadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_shadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_shadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_local_events" strategy="restrict">- name: Include Local Events in Audit Logs
  block:

    - name: Deduplicate values from /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: false
        regexp: (?i)^\s*local_events\s*=\s*
        state: absent

    - name: Insert correct line to /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: true
        line: local_events = yes
        state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_local_events
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="true" rule="kernel_module_tipc_disabled" strategy="disable">- name: Ensure kernel module 'tipc' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/tipc.conf
    regexp: tipc
    line: install tipc /bin/true
  tags:
    - kernel_module_tipc_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_lcredit" strategy="restrict">- name: XCCDF Value var_password_pam_lcredit # promote to variable
  set_fact:
    var_password_pam_lcredit: !!str <sub idref="var_password_pam_lcredit" />
  tags:
    - always

- name: Ensure PAM variable lcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*lcredit
    line: lcredit = {{ var_password_pam_lcredit }}
  tags:
    - accounts_password_pam_lcredit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.3
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(a)
</fix><fix complexity="high" disruption="medium" reboot="true" rule="grub2_enable_fips_mode" strategy="restrict">- name: check prelink binary installed
  stat:
    path: /usr/sbin/prelink
  register: prelink_exists
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: disable prelink
  lineinfile:
    dest: /etc/sysconfig/prelink
    regexp: ^#?PRELINKING
    line: PRELINKING=no
  when:
    - prelink_exists.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: revert prelinking binaries
  command: /usr/sbin/prelink -ua
  when:
    - prelink_exists.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: Check if system supports AES-NI
  command: grep -q -m1 -o aes /proc/cpuinfo
  failed_when: aesni_supported.rc &gt; 1
  register: aesni_supported
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: Ensure dracut-fips-aesni is installed
  package:
    name: dracut-fips-aesni
    state: present
  when:
    - aesni_supported.rc == 0
    - ansible_distribution == 'RedHat'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: install dracut-fips
  package:
    name: dracut-fips
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: Rebuild initramfs
  command: dracut -f
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: check fips argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*fips=' /etc/default/grub
  failed_when: false
  register: fipsargcheck
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: replace existing fips argument
  replace:
    path: /etc/default/grub
    regexp: fips=.
    replace: fips=1
  when:
    - fipsargcheck.rc == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: add fips argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 fips=1"
  when:
    - fipsargcheck.rc != 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: get boot device uuid
  command: findmnt --noheadings --output uuid --target /boot
  register: bootuuid
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: check boot argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*boot=' /etc/default/grub
  failed_when: false
  register: bootargcheck
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: replace existing boot argument
  replace:
    path: /etc/default/grub
    regexp: boot=\w*-\w*-\w*-\w*-\w*
    replace: boot={{ bootuuid.stdout }}
  when:
    - bootargcheck.rc == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: add boot argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 boot=UUID={{ bootuuid.stdout }}"
  when:
    - bootargcheck.rc != 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="fips=1 boot=UUID={{ bootuuid.stdout
    }}"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_enable_fips_mode
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.13.8
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5
    - NIST-800-53-SC-13
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - CJIS-5.10.1.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_ip6tables_enabled" strategy="enable">- name: Enable service ip6tables
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service ip6tables
      service:
        name: ip6tables
        enabled: 'yes'
        state: started
      when:
        - '"iptables-ipv6" in ansible_facts.packages'
  tags:
    - service_ip6tables_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-4
    - NIST-800-53-CA-3(c)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_rsh_removed" strategy="disable">- name: Ensure rsh is removed
  package:
    name: rsh
    state: absent
  tags:
    - package_rsh_removed
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_chown" strategy="restrict">- name: Set architecture for audit chown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chown
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_chown.matched is defined and find_chown.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
  when:
    - find_chown.matched is defined and find_chown.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_newuidmap" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newuidmap.*$
    patterns: '*.rules'
  register: find_newuidmap
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newuidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_newuidmap.matched is defined and find_newuidmap.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newuidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_newuidmap.files | map(attribute=''path'') | list | first }}'
  when:
    - find_newuidmap.matched is defined and find_newuidmap.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newuidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the newuidmap rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newuidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the newuidmap rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newuidmap -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newuidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_screensaver_lock_delay" strategy="unknown">- name: Set GNOME3 Screensaver Lock Delay After Activation Period
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: lock-delay
    value: uint32 5
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_lock_delay
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)

- name: Prevent user modification of GNOME lock-delay
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/lock-delay
    line: /org/gnome/desktop/screensaver/lock-delay
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_lock_delay
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_fchmod" strategy="restrict">- name: Set architecture for audit fchmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmod
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_fchmod.matched is defined and find_fchmod.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fchmod.matched is defined and find_fchmod.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fchmod -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fchmod -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fchmod -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fchmod -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fchmod -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fchmod -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fchmod -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fchmod -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_su" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/su.*$
    patterns: '*.rules'
  register: find_su
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_su
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_su.matched is defined and find_su.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_su
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_su.files | map(attribute=''path'') | list | first }}'
  when:
    - find_su.matched is defined and find_su.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_su
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the su rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_su
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the su rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_su
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_uuidd_installed" strategy="enable">- name: Ensure uuidd is installed
  package:
    name: uuidd
    state: present
  tags:
    - package_uuidd_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_auditd_enabled" strategy="enable">- name: Enable service auditd
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service auditd
      service:
        name: auditd
        enabled: 'yes'
        state: started
      when:
        - '"audit" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_auditd_enabled
    - high_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.1
    - NIST-800-171-3.3.1
    - NIST-800-171-3.3.2
    - NIST-800-171-3.3.6
    - NIST-800-53-AC-2(g)
    - NIST-800-53-AU-3
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-10
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AU-14(1)
    - NIST-800-53-IR-5
    - NIST-800-53-AU-12(1)
    - CJIS-5.4.1.1
</fix><fix complexity="medium" disruption="low" reboot="true" rule="grub2_audit_argument" strategy="restrict">- name: check audit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_audit_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.3
    - NIST-800-171-3.3.1
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AU-14(1)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-10
    - NIST-800-53-AU-12
    - NIST-800-53-IR-5
    - NIST-800-53-AU-12(1)
    - CJIS-5.4.1.1

- name: replace existing audit argument
  replace:
    path: /etc/default/grub
    regexp: audit=.
    replace: audit=1
  when:
    - argcheck.rc == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_audit_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.3
    - NIST-800-171-3.3.1
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AU-14(1)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-10
    - NIST-800-53-AU-12
    - NIST-800-53-IR-5
    - NIST-800-53-AU-12(1)
    - CJIS-5.4.1.1

- name: add audit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit=1"
  when:
    - argcheck.rc != 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_audit_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.3
    - NIST-800-171-3.3.1
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AU-14(1)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-10
    - NIST-800-53-AU-12
    - NIST-800-53-IR-5
    - NIST-800-53-AU-12(1)
    - CJIS-5.4.1.1

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit=1"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_audit_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.3
    - NIST-800-171-3.3.1
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AU-14(1)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-10
    - NIST-800-53-AU-12
    - NIST-800-53-IR-5
    - NIST-800-53-AU-12(1)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_chmod" strategy="restrict">- name: Set architecture for audit chmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chmod
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_chmod.matched is defined and find_chmod.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
  when:
    - find_chmod.matched is defined and find_chmod.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S chmod -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S chmod -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S chmod -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S chmod -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S chmod -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S chmod -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chmod rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S chmod -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S chmod -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_dracut-fips_installed" strategy="enable">- name: Ensure dracut-fips is installed
  package:
    name: dracut-fips
    state: present
  when:
    - ansible_distribution == 'RedHat'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_dracut-fips_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.13.11
    - NIST-800-171-3.13.8
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - NIST-800-53-SC-13
    - CJIS-5.10.1.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="aide_periodic_cron_checking" strategy="restrict">- name: Ensure AIDE is installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - aide
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - aide_periodic_cron_checking
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-3(5)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - CJIS-5.10.1.3

- name: Configure Periodic Execution of AIDE
  cron:
    name: run AIDE check
    minute: 5
    hour: 4
    weekday: 0
    user: root
    job: /usr/sbin/aide --check
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - aide_periodic_cron_checking
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-3(5)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - CJIS-5.10.1.3
</fix><fix complexity="low" disruption="medium" reboot="false" rule="no_empty_passwords" strategy="configure">- name: Prevent Log In to Accounts With Empty Password - system-auth
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: nullok
  tags:
    - no_empty_passwords
    - high_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.3
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-6
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(a)
    - CJIS-5.5.2

- name: Prevent Log In to Accounts With Empty Password - password-auth
  replace:
    dest: /etc/pam.d/password-auth
    follow: true
    regexp: nullok
  tags:
    - no_empty_passwords
    - high_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.3
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-6
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(a)
    - CJIS-5.5.2
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_shadow_open_by_handle_at" strategy="restrict">- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&amp;03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
        }}'
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/shadow
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/shadow
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/shadow
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/shadow
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
    on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/shadow
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/shadow
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/shadow
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/shadow
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_rsyslog_installed" strategy="enable">- name: Ensure rsyslog is installed
  package:
    name: rsyslog
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_rsyslog_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-9(2)
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_retention_action_mail_acct" strategy="restrict">- name: XCCDF Value var_auditd_action_mail_acct # promote to variable
  set_fact:
    var_auditd_action_mail_acct: !!str <sub idref="var_auditd_action_mail_acct" />
  tags:
    - always

- name: Configure auditd mail_acct Action on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: action_mail_acct = {{ var_auditd_action_mail_acct }}
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_retention_action_mail_acct
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.7.a
    - NIST-800-171-3.3.1
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-4
    - NIST-800-53-AU-5(1)
    - NIST-800-53-AU-5(a)
    - NIST-800-53-IR-5
    - NIST-800-53-AU-5(2)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_rsh-server_removed" strategy="disable">- name: Ensure rsh-server is removed
  package:
    name: rsh-server
    state: absent
  tags:
    - package_rsh-server_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_openssh-server_installed" strategy="enable">- name: Ensure openssh-server is installed
  package:
    name: openssh-server
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_openssh-server_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-SC-8
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_rng-tools_installed" strategy="enable">- name: Ensure rng-tools is installed
  package:
    name: rng-tools
    state: present
  tags:
    - package_rng-tools_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_dracut-fips-aesni_installed" strategy="enable">- name: Check if system supports AES-NI
  command: grep -q -m1 -o aes /proc/cpuinfo
  failed_when: aesni_supported.rc &gt; 1
  register: aesni_supported
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_dracut-fips-aesni_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.13.11
    - NIST-800-171-3.13.8
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - NIST-800-53-SC-13
    - CJIS-5.10.1.2

- name: Ensure dracut-fips-aesni is installed
  package:
    name: dracut-fips-aesni
    state: present
  when:
    - aesni_supported.rc == 0
    - ansible_distribution == 'RedHat'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_dracut-fips-aesni_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.13.11
    - NIST-800-171-3.13.8
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - NIST-800-53-SC-13
    - CJIS-5.10.1.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_gssproxy_removed" strategy="disable">- name: Ensure gssproxy is removed
  package:
    name: gssproxy
    state: absent
  tags:
    - package_gssproxy_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv6_conf_all_disable_ipv6" strategy="disable">- name: Ensure sysctl net.ipv6.conf.all.disable_ipv6 is set to 1
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: '1'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv6_conf_all_disable_ipv6
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_abrt-addon-ccpp_removed" strategy="disable">- name: Ensure abrt-addon-ccpp is removed
  package:
    name: abrt-addon-ccpp
    state: absent
  tags:
    - package_abrt-addon-ccpp_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_permissions_efi_grub2_cfg" strategy="configure">- name: Test for existence /boot/efi/EFI/redhat/grub.cfg
  stat:
    path: /boot/efi/EFI/redhat/grub.cfg
  register: file_exists
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_permissions_efi_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)

- name: Ensure permission 0700 on /boot/efi/EFI/redhat/grub.cfg
  file:
    path: /boot/efi/EFI/redhat/grub.cfg
    mode: '0700'
  when:
    - file_exists.stat is defined and file_exists.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_permissions_efi_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="accounts_password_pam_unix_remember" strategy="configure">- name: XCCDF Value var_password_pam_unix_remember # promote to variable
  set_fact:
    var_password_pam_unix_remember: !!str <sub idref="var_password_pam_unix_remember" />
  tags:
    - always

- name: Do not allow users to reuse recent passwords - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
    replace: \g&lt;1&gt;{{ var_password_pam_unix_remember }}\g&lt;3&gt;
  tags:
    - accounts_password_pam_unix_remember
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.5
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(f)
    - NIST-800-53-IA-5(1)(e)
    - CJIS-5.6.2.1.1

- name: Do not allow users to reuse recent passwords - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
    replace: \g&lt;0&gt; remember={{ var_password_pam_unix_remember }}
  tags:
    - accounts_password_pam_unix_remember
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.5
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(f)
    - NIST-800-53-IA-5(1)(e)
    - CJIS-5.6.2.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_telnetd_removed" strategy="disable">- name: Ensure telnetd is removed
  package:
    name: telnetd
    state: absent
  tags:
    - package_telnetd_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_syslogng_installed" strategy="enable">- name: Ensure syslogng is installed
  package:
    name: syslogng
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_syslogng_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-9(2)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_shadow_openat" strategy="restrict">- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&amp;03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_openat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_openat.matched is defined and find_openat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_openat.matched is defined and find_openat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_usergroup_modification_group" strategy="restrict">- name: Set architecture for audit group tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_group
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_group
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_group
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_group.matched is defined and find_group.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_group
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_group.files | map(attribute=''path'') | list | first }}'
  when:
    - find_group.matched is defined and find_group.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_group
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_group
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_group
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_all_rp_filter" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_all_rp_filter_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_all_rp_filter_value: !!str <sub idref="sysctl_net_ipv4_conf_all_rp_filter_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
  sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: '{{ sysctl_net_ipv4_conf_all_rp_filter_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_all_rp_filter
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_fchown" strategy="restrict">- name: Set architecture for audit fchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchown
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_fchown.matched is defined and find_fchown.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fchown.matched is defined and find_fchown.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_dcredit" strategy="restrict">- name: XCCDF Value var_password_pam_dcredit # promote to variable
  set_fact:
    var_password_pam_dcredit: !!str <sub idref="var_password_pam_dcredit" />
  tags:
    - always

- name: Ensure PAM variable dcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*dcredit
    line: dcredit = {{ var_password_pam_dcredit }}
  tags:
    - accounts_password_pam_dcredit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.3
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-194
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_all_accept_source_route" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_all_accept_source_route_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_all_accept_source_route_value: !!str <sub idref="sysctl_net_ipv4_conf_all_accept_source_route_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.all.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_all_accept_source_route
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_syslogng_enabled" strategy="enable">- name: Enable service syslogng
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service syslogng
      service:
        name: syslogng
        enabled: 'yes'
        state: started
      when:
        - '"syslogng" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_syslogng_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-4(1)
    - NIST-800-53-AU-12
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_file_deletion_events_renameat" strategy="restrict">- name: Set architecture for audit renameat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_renameat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/delete.rules
  when:
    - find_renameat.matched is defined and find_renameat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_renameat.matched is defined and find_renameat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the renameat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S renameat -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the renameat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S renameat -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S renameat -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the renameat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S renameat -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_lsetxattr" strategy="restrict">- name: Set architecture for audit lsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lsetxattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_lsetxattr.matched is defined and find_lsetxattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_abrt-plugin-logger_removed" strategy="disable">- name: Ensure abrt-plugin-logger is removed
  package:
    name: abrt-plugin-logger
    state: absent
  tags:
    - package_abrt-plugin-logger_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_rekey_limit" strategy="restrict">- name: Force frequent session key renegotiation
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*RekeyLimit\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: RekeyLimit 512M 1h
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_rekey_limit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_login_events_tallylog" strategy="restrict">- name: Set architecture for audit tallylog tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_tallylog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_tallylog
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_tallylog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/logins.rules
  when:
    - find_tallylog.matched is defined and find_tallylog.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_tallylog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
  when:
    - find_tallylog.matched is defined and find_tallylog.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_tallylog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the tallylog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/tallylog -p wa -k logins
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_tallylog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/tallylog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_tallylog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_session_idle_user_locks" strategy="unknown">- name: Prevent user modification of GNOME Session idle-delay
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/session/idle-delay
    line: /org/gnome/desktop/session/idle-delay
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_session_idle_user_locks
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_geolite2-city_removed" strategy="disable">- name: Ensure geolite2-city is removed
  package:
    name: geolite2-city
    state: absent
  tags:
    - package_geolite2-city_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_retention_num_logs" strategy="restrict">- name: XCCDF Value var_auditd_num_logs # promote to variable
  set_fact:
    var_auditd_num_logs: !!str <sub idref="var_auditd_num_logs" />
  tags:
    - always

- name: Configure auditd Number of Logs Retained
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: num_logs = {{ var_auditd_num_logs }}
    regexp: ^\s*num_logs\s*=\s*.*$
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_retention_num_logs
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.7
    - NIST-800-171-3.3.1
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-11
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="high" reboot="false" rule="mount_option_dev_shm_nosuid" strategy="configure">- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc &gt; 1
  changed_when: false
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_nosuid
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
    - '{{ device_name.stdout_lines[0].split() | list | lower }}'
    - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
    - device_name.stdout is defined and device_name.stdout_lines is defined
    - (device_name.stdout | length &gt; 0)
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_nosuid
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2

- name: Ensure permission nosuid are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
    - device_name.stdout is defined
    - (device_name.stdout | length &gt; 0)
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_nosuid
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_maxrepeat" strategy="restrict">- name: XCCDF Value var_password_pam_maxrepeat # promote to variable
  set_fact:
    var_password_pam_maxrepeat: !!str <sub idref="var_password_pam_maxrepeat" />
  tags:
    - always

- name: Ensure PAM variable maxrepeat is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxrepeat
    line: maxrepeat = {{ var_password_pam_maxrepeat }}
  tags:
    - accounts_password_pam_maxrepeat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5
    - NIST-800-53-IA-5(c)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="ensure_gpgcheck_never_disabled" strategy="unknown">- name: Find All yum Repositories
  find:
    paths: /etc/yum.repos.d/
    patterns: '*.repo'
    contains: ^\[.+]$
  register: yum_find
  tags:
    - ensure_gpgcheck_never_disabled
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-6.2
    - NIST-800-171-3.4.8
    - NIST-800-53-CM-5(3)
    - NIST-800-53-CM-11(a)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - CJIS-5.10.4.1

- name: Ensure gpgcheck Enabled For All yum Package Repositories
  with_items: '{{ yum_find.files }}'
  lineinfile:
    create: true
    dest: '{{ item.path }}'
    regexp: ^gpgcheck
    line: gpgcheck=1
  tags:
    - ensure_gpgcheck_never_disabled
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-6.2
    - NIST-800-171-3.4.8
    - NIST-800-53-CM-5(3)
    - NIST-800-53-CM-11(a)
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - CJIS-5.10.4.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_nss-tools_installed" strategy="enable">- name: Ensure nss-tools is installed
  package:
    name: nss-tools
    state: present
  tags:
    - package_nss-tools_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_usergroup_modification_opasswd" strategy="restrict">- name: Set architecture for audit opasswd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_opasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_opasswd
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_opasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_opasswd.matched is defined and find_opasswd.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_opasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_opasswd.files | map(attribute=''path'') | list | first }}'
  when:
    - find_opasswd.matched is defined and find_opasswd.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_opasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the opasswd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_opasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_opasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_abrt-cli_removed" strategy="disable">- name: Ensure abrt-cli is removed
  package:
    name: abrt-cli
    state: absent
  tags:
    - package_abrt-cli_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="coredump_disable_storage" strategy="restrict">- name: Disable storing core dump
  block:

    - name: Deduplicate values from /etc/systemd/coredump.conf
      lineinfile:
        path: /etc/systemd/coredump.conf
        create: false
        regexp: ^\s*Storage\s*=\s*
        state: absent

    - name: Insert correct line to /etc/systemd/coredump.conf
      lineinfile:
        path: /etc/systemd/coredump.conf
        create: false
        line: Storage=none
        state: present
  tags:
    - coredump_disable_storage
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_kernel_dmesg_restrict" strategy="disable">- name: Ensure sysctl kernel.dmesg_restrict is set to 1
  sysctl:
    name: kernel.dmesg_restrict
    value: '1'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_kernel_dmesg_restrict
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.5
    - NIST-800-53-SI-11
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_owner_etc_group" strategy="configure">- name: Test for existence /etc/group
  stat:
    path: /etc/group
  register: file_exists
  tags:
    - file_owner_etc_group
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure owner 0 on /etc/group
  file:
    path: /etc/group
    owner: '0'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_owner_etc_group
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_geolite2-country_removed" strategy="disable">- name: Ensure geolite2-country is removed
  package:
    name: geolite2-country
    state: absent
  tags:
    - package_geolite2-country_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_removexattr" strategy="restrict">- name: Set architecture for audit removexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_removexattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_removexattr.matched is defined and find_removexattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_removexattr.matched is defined and find_removexattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the removexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S removexattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S removexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the removexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S removexattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S removexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S removexattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S removexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S removexattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S removexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_removexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_disable_user_admin" strategy="unknown">- name: Disable User Administration in GNOME3
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/lockdown
    option: user-administration-disabled
    value: 'true'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_disable_user_admin
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.5

- name: Prevent user modification of GNOME3 Thumbnailers
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/lockdown/user-administration-disabled
    line: /org/gnome/desktop/lockdown/user-administration-disabled
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_disable_user_admin
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.5
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_bind_removed" strategy="disable">- name: Ensure bind is removed
  package:
    name: bind
    state: absent
  tags:
    - package_bind_removed
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_freq" strategy="restrict">- name: Set number of records to cause an explicit flush to audit logs
  block:

    - name: Deduplicate values from /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: false
        regexp: (?i)^\s*freq\s*=\s*
        state: absent

    - name: Insert correct line to /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: true
        line: freq = 50
        state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_freq
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_firewalld_enabled" strategy="enable">- name: Enable service firewalld
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service firewalld
      service:
        name: firewalld
        enabled: 'yes'
        state: started
      when:
        - '"firewalld" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_firewalld_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.3
    - NIST-800-171-3.4.7
    - NIST-800-53-CM-6(b)
</fix><fix complexity="low" disruption="low" reboot="false" rule="directory_access_var_log_audit" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*dir=/var/log/audit/.*$
    patterns: '*.rules'
  register: find_var_log_audit
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - directory_access_var_log_audit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/access-audit-trail.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access-audit-trail.rules
  when:
    - find_var_log_audit.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - directory_access_var_log_audit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_var_log_audit.files | map(attribute=''path'') | list | first }}'
  when:
    - find_var_log_audit.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - directory_access_var_log_audit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the /var/log/audit/ rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid&gt;=1000 -F auid!=unset
      -F key=access-audit-trail
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - directory_access_var_log_audit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the /var/log/audit/ rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F dir=/var/log/audit/ -F perm=r -F auid&gt;=1000 -F auid!=unset
      -F key=access-audit-trail
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - directory_access_var_log_audit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_unix_chkpwd" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/unix_chkpwd.*$
    patterns: '*.rules'
  register: find_unix_chkpwd
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_unix_chkpwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_unix_chkpwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_unix_chkpwd.files | map(attribute=''path'') | list | first }}'
  when:
    - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_unix_chkpwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the unix_chkpwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid&gt;=1000 -F
      auid!=unset -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_unix_chkpwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the unix_chkpwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid&gt;=1000 -F
      auid!=unset -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_unix_chkpwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_ssh_keysign" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/libexec/openssh/ssh-keysign.*$
    patterns: '*.rules'
  register: find_ssh_keysign
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_ssh_keysign
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_ssh_keysign.matched is defined and find_ssh_keysign.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_ssh_keysign
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_ssh_keysign.files | map(attribute=''path'') | list | first }}'
  when:
    - find_ssh_keysign.matched is defined and find_ssh_keysign.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_ssh_keysign
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the ssh_keysign rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid&gt;=1000
      -F auid!=unset -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_ssh_keysign
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the ssh_keysign rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid&gt;=1000
      -F auid!=unset -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_ssh_keysign
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_pam_timestamp_check" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/pam_timestamp_check.*$
    patterns: '*.rules'
  register: find_pam_timestamp_check
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pam_timestamp_check
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_pam_timestamp_check.matched is defined and find_pam_timestamp_check.matched
      == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pam_timestamp_check
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_pam_timestamp_check.files | map(attribute=''path'') | list | first
        }}'
  when:
    - find_pam_timestamp_check.matched is defined and find_pam_timestamp_check.matched
      &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pam_timestamp_check
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the pam_timestamp_check rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid&gt;=1000
      -F auid!=unset -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pam_timestamp_check
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the pam_timestamp_check rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid&gt;=1000
      -F auid!=unset -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pam_timestamp_check
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_remote_access_credential_prompt" strategy="unknown">- name: Require Credential Prompting for Remote Access in GNOME3
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/Vino
    option: authentication-methods
    value: '[''vnc'']'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_remote_access_credential_prompt
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12

- name: Prevent user modification of GNOME3 Credential Prompting for Remote Access
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/Vino/authentication-methods
    line: /org/gnome/Vino/authentication-methods
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_remote_access_credential_prompt
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
</fix><fix complexity="low" disruption="low" reboot="false" rule="firewalld_sshd_port_enabled" strategy="configure">- name: Ensure firewalld is installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - firewalld
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - firewalld_sshd_port_enabled
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
- name: XCCDF Value sshd_listening_port # promote to variable
  set_fact:
    sshd_listening_port: !!str <sub idref="sshd_listening_port" />
  tags:
    - always

- name: Enable SSHD in firewalld (custom port)
  firewalld:
    port: '{{ sshd_listening_port }}/tcp'
    permanent: true
    state: enabled
  when:
    - sshd_listening_port != 22
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - firewalld_sshd_port_enabled
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)

- name: Enable SSHD in firewalld (default port)
  firewalld:
    service: ssh
    permanent: true
    state: enabled
  when:
    - sshd_listening_port == 22
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - firewalld_sshd_port_enabled
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_zebra_disabled" strategy="disable">- name: Unit Service Exists - zebra.service
  command: systemctl list-unit-files zebra.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_zebra_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-SC-32

- name: Disable service zebra
  systemd:
    name: zebra.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"zebra.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_zebra_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-SC-32

- name: Unit Socket Exists - zebra.socket
  command: systemctl list-unit-files zebra.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_zebra_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-SC-32

- name: Disable socket zebra
  systemd:
    name: zebra.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"zebra.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_zebra_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-SC-32
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_tuned_removed" strategy="disable">- name: Ensure tuned is removed
  package:
    name: tuned
    state: absent
  tags:
    - package_tuned_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_inetutils-telnetd_removed" strategy="disable">- name: Ensure inetutils-telnetd is removed
  package:
    name: inetutils-telnetd
    state: absent
  tags:
    - package_inetutils-telnetd_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_screensaver_idle_delay" strategy="unknown">- name: XCCDF Value inactivity_timeout_value # promote to variable
  set_fact:
    inactivity_timeout_value: !!str <sub idref="inactivity_timeout_value" />
  tags:
    - always

- name: Set GNOME3 Screensaver Inactivity Timeout
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: idle-delay
    value: '{{ inactivity_timeout_value }}'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_idle_delay
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
    - CJIS-5.5.5

- name: Prevent user modification of GNOME idle-delay
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/idle-delay
    line: /org/gnome/desktop/screensaver/idle-delay
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_idle_delay
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
    - CJIS-5.5.5
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_allow_only_protocol2" strategy="restrict">- name: Allow Only SSH Protocol 2
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*Protocol\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: Protocol 2
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_allow_only_protocol2
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.5.4
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-17(8).1(ii)
    - NIST-800-53-IA-5(1)(c)
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_openat" strategy="restrict">- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_openat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_openat.matched is defined and find_openat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_openat.matched is defined and find_openat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="medium" disruption="low" reboot="true" rule="grub2_audit_backlog_limit_argument" strategy="restrict">- name: check audit_backlog_limit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit_backlog_limit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_audit_backlog_limit_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: replace existing audit_backlog_limit argument
  replace:
    path: /etc/default/grub
    regexp: audit_backlog_limit=.
    replace: audit_backlog_limit=8192
  when:
    - argcheck.rc == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_audit_backlog_limit_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: add audit_backlog_limit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit_backlog_limit=8192"
  when:
    - argcheck.rc != 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_audit_backlog_limit_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit_backlog_limit=8192"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_audit_backlog_limit_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_renameat" strategy="restrict">- name: Set architecture for audit renameat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_renameat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_renameat.matched is defined and find_renameat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_renameat.matched is defined and find_renameat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the renameat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the renameat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S renameat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S renameat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the renameat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S renameat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S renameat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_renameat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_sendmail_removed" strategy="disable">- name: Ensure sendmail is removed
  package:
    name: sendmail
    state: absent
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_sendmail_removed
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_tar_installed" strategy="enable">- name: Ensure tar is installed
  package:
    name: tar
    state: present
  tags:
    - package_tar_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_set_keepalive" strategy="restrict">- name: XCCDF Value var_sshd_set_keepalive # promote to variable
  set_fact:
    var_sshd_set_keepalive: !!str <sub idref="var_sshd_set_keepalive" />
  tags:
    - always

- name: Set SSH Client Alive Max Count
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*ClientAliveCountMax\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_set_keepalive
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-2(5)
    - NIST-800-53-SA-8
    - NIST-800-53-AC-12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-SC-10
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_groupowner_etc_passwd" strategy="configure">- name: Test for existence /etc/passwd
  stat:
    path: /etc/passwd
  register: file_exists
  tags:
    - file_groupowner_etc_passwd
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure group owner 0 on /etc/passwd
  file:
    path: /etc/passwd
    group: '0'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_groupowner_etc_passwd
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="selinux_state" strategy="restrict">- name: XCCDF Value var_selinux_state # promote to variable
  set_fact:
    var_selinux_state: !!str <sub idref="var_selinux_state" />
  tags:
    - always

- name: Ensure SELinux State is Enforcing
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUX=
    line: SELINUX={{ var_selinux_state }}
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - selinux_state
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.2
    - NIST-800-171-3.7.2
    - NIST-800-53-AC-3
    - NIST-800-53-AC-3(3)
    - NIST-800-53-AC-3(4)
    - NIST-800-53-AC-4
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9
    - NIST-800-53-SI-6(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_postdrop" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/postdrop.*$
    patterns: '*.rules'
  register: find_postdrop
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postdrop
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_postdrop.matched is defined and find_postdrop.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postdrop
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_postdrop.files | map(attribute=''path'') | list | first }}'
  when:
    - find_postdrop.matched is defined and find_postdrop.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postdrop
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the postdrop rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postdrop
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the postdrop rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postdrop
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_ntp_enabled" strategy="enable">- name: Enable service ntp
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service ntp
      service:
        name: ntp
        enabled: 'yes'
        state: started
      when:
        - '"ntp" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ntp_enabled
    - high_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.4
    - NIST-800-53-AU-8(1)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_chown" strategy="restrict">- name: Set architecture for audit chown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chown
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_chown.matched is defined and find_chown.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
  when:
    - find_chown.matched is defined and find_chown.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S chown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S chown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the chown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S chown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S chown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_iptables_enabled" strategy="enable">- name: Enable service iptables
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service iptables
      service:
        name: iptables
        enabled: 'yes'
        state: started
      when:
        - '"iptables" in ansible_facts.packages'
  tags:
    - service_iptables_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-4
    - NIST-800-53-CA-3(c)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_passwords_pam_faillock_deny_root" strategy="restrict">- name: Add auth pam_faillock preauth even_deny_root before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent even_deny_root
    state: before
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny_root
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(b)

- name: Add even_deny_root argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent even_deny_root
    state: args_present
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny_root
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(b)

- name: Add auth pam_faillock authfail even_deny_root after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail even_deny_root
    state: after
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny_root
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(b)

- name: Add even_deny_root argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail even_deny_root
    state: args_present
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny_root
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(b)

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny_root
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-7(b)
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_owner_efi_grub2_cfg" strategy="configure">- name: Test for existence /boot/efi/EFI/redhat/grub.cfg
  stat:
    path: /boot/efi/EFI/redhat/grub.cfg
  register: file_exists
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_owner_efi_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-7.1
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - CJIS-5.5.2.2

- name: Ensure owner 0 on /boot/efi/EFI/redhat/grub.cfg
  file:
    path: /boot/efi/EFI/redhat/grub.cfg
    owner: '0'
  when:
    - file_exists.stat is defined and file_exists.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_owner_efi_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-7.1
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="medium" reboot="false" rule="gnome_gdm_disable_guest_login" strategy="unknown">- name: Disable GDM Guest Login
  ini_file:
    dest: /etc/gdm/custom.conf
    section: daemon
    option: TimedLoginEnable
    value: 'false'
    no_extra_spaces: true
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - gnome_gdm_disable_guest_login
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-53-CM-6(b)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_lsetxattr" strategy="restrict">- name: Set architecture for audit lsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lsetxattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_lsetxattr.matched is defined and find_lsetxattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S lsetxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S lsetxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_kernel_kptr_restrict" strategy="disable">- name: Ensure sysctl kernel.kptr_restrict is set to 1
  sysctl:
    name: kernel.kptr_restrict
    value: '1'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_kernel_kptr_restrict
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-53-SC-39
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_cockpit_disabled" strategy="disable">- name: Unit Service Exists - cockpit.service
  command: systemctl list-unit-files cockpit.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  tags:
    - service_cockpit_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Disable service cockpit
  systemd:
    name: cockpit.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when: '"cockpit.service" in service_file_exists.stdout_lines[1]'
  tags:
    - service_cockpit_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Unit Socket Exists - cockpit.socket
  command: systemctl list-unit-files cockpit.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  tags:
    - service_cockpit_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Disable socket cockpit
  systemd:
    name: cockpit.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when: '"cockpit.socket" in socket_file_exists.stdout_lines[1]'
  tags:
    - service_cockpit_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_sudo_installed" strategy="enable">- name: Ensure sudo is installed
  package:
    name: sudo
    state: present
  tags:
    - package_sudo_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6(5)
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_minclass" strategy="restrict">- name: XCCDF Value var_password_pam_minclass # promote to variable
  set_fact:
    var_password_pam_minclass: !!str <sub idref="var_password_pam_minclass" />
  tags:
    - always

- name: Ensure PAM variable minclass is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minclass
    line: minclass = {{ var_password_pam_minclass }}
  tags:
    - accounts_password_pam_minclass
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_usergroup_modification_gshadow" strategy="restrict">- name: Set architecture for audit gshadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_gshadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_gshadow
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_gshadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_gshadow.matched is defined and find_gshadow.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_gshadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
  when:
    - find_gshadow.matched is defined and find_gshadow.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_gshadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_gshadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_gshadow
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_kdump_disabled" strategy="disable">- name: Unit Service Exists - kdump.service
  command: systemctl list-unit-files kdump.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_kdump_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-CM-6(b)

- name: Disable service kdump
  systemd:
    name: kdump.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"kdump.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_kdump_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-CM-6(b)

- name: Unit Socket Exists - kdump.socket
  command: systemctl list-unit-files kdump.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_kdump_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-CM-6(b)

- name: Disable socket kdump
  systemd:
    name: kdump.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"kdump.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_kdump_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-CM-6(b)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_icmp_echo_ignore_broadcasts" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value # promote to variable
  set_fact:
    sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str <sub idref="sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
  sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - CJIS-5.10.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_compression" strategy="restrict">- name: Disable Compression Or Set Compression to delayed
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*Compression\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: Compression delayed
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_compression
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-CM-6(b)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_passwd" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/passwd.*$
    patterns: '*.rules'
  register: find_passwd
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_passwd.matched is defined and find_passwd.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
    - find_passwd.matched is defined and find_passwd.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the passwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the passwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_disable_restart_shutdown" strategy="unknown">- name: Disable the GNOME3 Login Restart and Shutdown Buttons
  ini_file:
    dest: /etc/dconf/db/gdm.d/00-security-settings
    section: org/gnome/login-screen
    option: disable-restart-buttons
    value: 'true'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_disable_restart_shutdown
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.2
    - NIST-800-53-AC-6

- name: Prevent user modification of GNOME disablement of Login Restart and Shutdown
    Buttons
  lineinfile:
    path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/login-screen/disable-restart-buttons
    line: /org/gnome/login-screen/disable-restart-buttons
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_disable_restart_shutdown
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.2
    - NIST-800-53-AC-6
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_kernel_module_loading_finit" strategy="configure">- name: Set architecture for audit finit_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_kernel_module_loading_finit
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*finit_module.*$
    patterns: '*.rules'
  register: find_finit_module
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_kernel_module_loading_finit
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_finit_module.matched is defined and find_finit_module.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_kernel_module_loading_finit
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_finit_module.files | map(attribute=''path'') | list | first }}'
  when:
    - find_finit_module.matched is defined and find_finit_module.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_kernel_module_loading_finit
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the finit_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S finit_module -k module-change
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_kernel_module_loading_finit
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the finit_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S finit_module -k module-change
    state: present
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_kernel_module_loading_finit
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the finit_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S finit_module -k module-change
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_kernel_module_loading_finit
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the finit_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S finit_module -k module-change
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_kernel_module_loading_finit
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_audispd-plugins_installed" strategy="enable">- name: Ensure audispd-plugins is installed
  package:
    name: audispd-plugins
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_audispd-plugins_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_groupowner_efi_grub2_cfg" strategy="configure">- name: Test for existence /boot/efi/EFI/redhat/grub.cfg
  stat:
    path: /boot/efi/EFI/redhat/grub.cfg
  register: file_exists
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_groupowner_efi_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-7.1
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - CJIS-5.5.2.2

- name: Ensure group owner 0 on /boot/efi/EFI/redhat/grub.cfg
  file:
    path: /boot/efi/EFI/redhat/grub.cfg
    group: '0'
  when:
    - file_exists.stat is defined and file_exists.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_groupowner_efi_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-7.1
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_talk_removed" strategy="disable">- name: Ensure talk is removed
  package:
    name: talk
    state: absent
  tags:
    - package_talk_removed
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_kernel_kexec_load_disabled" strategy="disable">- name: Ensure sysctl kernel.kexec_load_disabled is set to 1
  sysctl:
    name: kernel.kexec_load_disabled
    value: '1'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_kernel_kexec_load_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_setxattr" strategy="restrict">- name: Set architecture for audit setxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_setxattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_setxattr.matched is defined and find_setxattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_setxattr.matched is defined and find_setxattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S setxattr -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S setxattr -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S setxattr -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S setxattr -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_setxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_ypbind_disabled" strategy="disable">- name: Unit Service Exists - ypbind.service
  command: systemctl list-unit-files ypbind.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ypbind_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable service ypbind
  systemd:
    name: ypbind.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"ypbind.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ypbind_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Unit Socket Exists - ypbind.socket
  command: systemctl list-unit-files ypbind.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ypbind_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable socket ypbind
  systemd:
    name: ypbind.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"ypbind.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ypbind_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="aide_build_database" strategy="restrict">- name: Ensure AIDE is installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - aide
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - aide_build_database
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - CJIS-5.10.1.3

- name: Build and Test AIDE Database
  command: /usr/sbin/aide --init
  changed_when: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - aide_build_database
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - CJIS-5.10.1.3

- name: Check whether the stock AIDE Database exists
  stat:
    path: /var/lib/aide/aide.db.new.gz
  register: aide_database_stat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - aide_build_database
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - CJIS-5.10.1.3

- name: Stage AIDE Database
  copy:
    src: /var/lib/aide/aide.db.new.gz
    dest: /var/lib/aide/aide.db.gz
    backup: true
    remote_src: true
  when:
    - (aide_database_stat.stat.exists is defined and aide_database_stat.stat.exists)
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - aide_build_database
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - CJIS-5.10.1.3
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_sssd-ipa_installed" strategy="enable">- name: Ensure sssd-ipa is installed
  package:
    name: sssd-ipa
    state: present
  tags:
    - package_sssd-ipa_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_set_idle_timeout" strategy="restrict">- name: XCCDF Value sshd_idle_timeout_value # promote to variable
  set_fact:
    sshd_idle_timeout_value: !!str <sub idref="sshd_idle_timeout_value" />
  tags:
    - always

- name: Set SSH Idle Timeout Interval
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*ClientAliveInterval\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: ClientAliveInterval {{ sshd_idle_timeout_value }}
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_set_idle_timeout
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-2(5)
    - NIST-800-53-SA-8(i)
    - NIST-800-53-AC-12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-SC-10
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_telnetd-ssl_removed" strategy="disable">- name: Ensure telnetd-ssl is removed
  package:
    name: telnetd-ssl
    state: absent
  tags:
    - package_telnetd-ssl_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_open" strategy="restrict">- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_open.matched is defined and find_open.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
    - find_open.matched is defined and find_open.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_execution_setfiles" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/setfiles.*$
    patterns: '*.rules'
  register: find_setfiles
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setfiles
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_setfiles.matched is defined and find_setfiles.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setfiles
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_setfiles.files | map(attribute=''path'') | list | first }}'
  when:
    - find_setfiles.matched is defined and find_setfiles.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setfiles
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the setfiles rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/setfiles -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setfiles
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the setfiles rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/setfiles -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_setfiles
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_pt_chown" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/libexec/pt_chown.*$
    patterns: '*.rules'
  register: find_pt_chown
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pt_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_pt_chown.matched is defined and find_pt_chown.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pt_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_pt_chown.files | map(attribute=''path'') | list | first }}'
  when:
    - find_pt_chown.matched is defined and find_pt_chown.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pt_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the pt_chown rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/libexec/pt_chown -F perm=x -F auid&gt;=1000 -F
      auid!=unset -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pt_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the pt_chown rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/libexec/pt_chown -F perm=x -F auid&gt;=1000 -F
      auid!=unset -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_pt_chown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_enable_x11_forwarding" strategy="restrict">- name: Enable Encrypted X11 Forwarding
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*X11Forwarding\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: X11Forwarding yes
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_enable_x11_forwarding
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-53-CM-2(1)(b)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="accounts_password_pam_retry" strategy="configure">- name: XCCDF Value var_password_pam_retry # promote to variable
  set_fact:
    var_password_pam_retry: !!str <sub idref="var_password_pam_retry" />
  tags:
    - always

- name: Set Password Retry Prompts Permitted Per-Session - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: (^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)
    replace: \g&lt;1&gt;{{ var_password_pam_retry }}\g&lt;3&gt;
  tags:
    - accounts_password_pam_retry
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-CM-6(b)
    - NIST-800-53-IA-5(c)
    - CJIS-5.5.3

- name: Set Password Retry Prompts Permitted Per-Session - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$
    replace: \g&lt;0&gt; retry={{ var_password_pam_retry }}
  tags:
    - accounts_password_pam_retry
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-CM-6(b)
    - NIST-800-53-IA-5(c)
    - CJIS-5.5.3
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_atd_disabled" strategy="disable">- name: Unit Service Exists - atd.service
  command: systemctl list-unit-files atd.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_atd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7

- name: Disable service atd
  systemd:
    name: atd.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"atd.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_atd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7

- name: Unit Socket Exists - atd.socket
  command: systemctl list-unit-files atd.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_atd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7

- name: Disable socket atd
  systemd:
    name: atd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"atd.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_atd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_unlinkat" strategy="restrict">- name: Set architecture for audit unlinkat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_unlinkat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_unlinkat.matched is defined and find_unlinkat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_unlinkat.matched is defined and find_unlinkat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the unlinkat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S unlinkat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S unlinkat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S unlinkat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S unlinkat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_sssd_installed" strategy="enable">- name: Ensure sssd is installed
  package:
    name: sssd
    state: present
  tags:
    - package_sssd_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(10)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_audit_installed" strategy="enable">- name: Ensure audit is installed
  package:
    name: audit
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_audit_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-7(a)
    - NIST-800-53-AU-7(b)
    - NIST-800-53-AU-7(1)
    - NIST-800-53-AU-10
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_cron_installed" strategy="enable">- name: Ensure cron is installed
  package:
    name: cron
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_cron_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_user_known_hosts" strategy="restrict">- name: Disable SSH Support for User Known Hosts
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*IgnoreUserKnownHosts\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: IgnoreUserKnownHosts yes
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_user_known_hosts
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_tcp_syncookies" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_tcp_syncookies_value # promote to variable
  set_fact:
    sysctl_net_ipv4_tcp_syncookies_value: !!str <sub idref="sysctl_net_ipv4_tcp_syncookies_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.tcp_syncookies is set
  sysctl:
    name: net.ipv4.tcp_syncookies
    value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_tcp_syncookies
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-SC-5(1)(2)
    - NIST-800-53-SC-5(2)
    - NIST-800-53-SC-5(3)
    - CJIS-5.10.1.1
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_fs_protected_symlinks" strategy="disable">- name: Ensure sysctl fs.protected_symlinks is set to 1
  sysctl:
    name: fs.protected_symlinks
    value: '1'
    state: present
    reload: true
  tags:
    - sysctl_fs_protected_symlinks
    - unknown_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-53-SI-11
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_disable_user_list" strategy="unknown">- name: Disable the GNOME3 Login User List
  ini_file:
    dest: /etc/dconf/db/gdm.d/00-security-settings
    section: org/gnome/login-screen
    option: disable-user-list
    value: 'true'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_disable_user_list
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-AC-23

- name: Prevent user modification of GNOME3 disablement of Login User List
  lineinfile:
    path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/login-screen/disable-user-list
    line: /org/gnome/login-screen/disable-user-list
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_disable_user_list
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-AC-23
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_fchmod" strategy="restrict">- name: Set architecture for audit fchmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmod
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_fchmod.matched is defined and find_fchmod.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fchmod.matched is defined and find_fchmod.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmod -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmod -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmod -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmod -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_usernetctl" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/usernetctl.*$
    patterns: '*.rules'
  register: find_usernetctl
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_usernetctl
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_usernetctl.matched is defined and find_usernetctl.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_usernetctl
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_usernetctl.files | map(attribute=''path'') | list | first }}'
  when:
    - find_usernetctl.matched is defined and find_usernetctl.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_usernetctl
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the usernetctl rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/usernetctl -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_usernetctl
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the usernetctl rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/usernetctl -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_usernetctl
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_lchown" strategy="restrict">- name: Set architecture for audit lchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lchown
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_lchown.matched is defined and find_lchown.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
  when:
    - find_lchown.matched is defined and find_lchown.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lchown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lchown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lchown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lchown -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_maximum_age_login_defs" strategy="restrict">- name: XCCDF Value var_accounts_maximum_age_login_defs # promote to variable
  set_fact:
    var_accounts_maximum_age_login_defs: !!str <sub idref="var_accounts_maximum_age_login_defs" />
  tags:
    - always

- name: Set Password Maximum Age
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^#?PASS_MAX_DAYS
    line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}
  tags:
    - accounts_maximum_age_login_defs
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.4
    - NIST-800-171-3.5.6
    - NIST-800-53-IA-5(f)
    - NIST-800-53-IA-5(g)
    - NIST-800-53-IA-5(1)(d)
    - CJIS-5.6.2.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_iprutils_removed" strategy="disable">- name: Ensure iprutils is removed
  package:
    name: iprutils
    state: absent
  tags:
    - package_iprutils_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="require_emergency_target_auth" strategy="restrict">- name: require emergency mode password
  lineinfile:
    create: true
    dest: /usr/lib/systemd/system/emergency.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block
      default"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - require_emergency_target_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-171-3.4.5
    - NIST-800-53-IA-2
    - NIST-800-53-IA-2(1)
    - NIST-800-53-AC-3
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_enable_warning_banner" strategy="restrict">- name: Enable SSH Warning Banner
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*Banner\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: Banner /etc/issue
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_enable_warning_banner
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)(1)
    - NIST-800-53-AC-8(c)(2)
    - NIST-800-53-AC-8(c)(3)
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="false" rule="force_opensc_card_drivers" strategy="configure">- name: XCCDF Value var_smartcard_drivers # promote to variable
  set_fact:
    var_smartcard_drivers: !!str <sub idref="var_smartcard_drivers" />
  tags:
    - always

- name: Check existence of opensc conf
  stat:
    path: /etc/opensc-{{ ansible_architecture }}.conf
  register: opensc_conf_fcd
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - force_opensc_card_drivers
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)

- name: Force opensc To Use Defined Smart Card Driver
  lineinfile:
    path: /etc/opensc-{{ ansible_architecture }}.conf
    line: '        force_card_driver = {{ var_smartcard_drivers }}'
    regexp: (^\s+#|^)\s+force_card_driver\s+=\s+.*
    state: present
  when:
    - opensc_conf_fcd.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - force_opensc_card_drivers
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_pcsc-lite_installed" strategy="enable">- name: Ensure pcsc-lite is installed
  package:
    name: pcsc-lite
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_pcsc-lite_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_file_deletion_events_rename" strategy="restrict">- name: Set architecture for audit rename tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rename
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/delete.rules
  when:
    - find_rename.matched is defined and find_rename.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
  when:
    - find_rename.matched is defined and find_rename.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the rename rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rename -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the rename rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rename -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rename -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the rename rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rename -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_do_not_permit_user_env" strategy="restrict">- name: Do Not Allow SSH Environment Options
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*PermitUserEnvironment\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: PermitUserEnvironment yes
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_do_not_permit_user_env
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-CM-6(b)
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="medium" reboot="false" rule="ensure_gpgcheck_globally_activated" strategy="unknown">- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when: ansible_distribution == "Fedora"
  tags:
    - ensure_gpgcheck_globally_activated
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-6.2
    - NIST-800-171-3.4.8
    - NIST-800-53-CM-5(3)
    - NIST-800-53-CM-11
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  tags:
    - ensure_gpgcheck_globally_activated
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-6.2
    - NIST-800-171-3.4.8
    - NIST-800-53-CM-5(3)
    - NIST-800-53-CM-11
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when: ansible_distribution == "Fedora"
  tags:
    - ensure_gpgcheck_globally_activated
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-6.2
    - NIST-800-171-3.4.8
    - NIST-800-53-CM-5(3)
    - NIST-800-53-CM-11
    - NIST-800-53-SI-7
    - NIST-800-53-MA-1(b)
    - CJIS-5.10.4.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_permissions_etc_passwd" strategy="configure">- name: Test for existence /etc/passwd
  stat:
    path: /etc/passwd
  register: file_exists
  tags:
    - file_permissions_etc_passwd
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure permission 0644 on /etc/passwd
  file:
    path: /etc/passwd
    mode: '0644'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_permissions_etc_passwd
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="medium" reboot="true" rule="kernel_module_dccp_disabled" strategy="disable">- name: Ensure kernel module 'dccp' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/dccp.conf
    regexp: dccp
    line: install dccp /bin/true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - kernel_module_dccp_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - CJIS-5.10.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_owner_etc_shadow" strategy="configure">- name: Test for existence /etc/shadow
  stat:
    path: /etc/shadow
  register: file_exists
  tags:
    - file_owner_etc_shadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure owner 0 on /etc/shadow
  file:
    path: /etc/shadow
    owner: '0'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_owner_etc_shadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_permissions_grub2_cfg" strategy="configure">- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_permissions_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)

- name: Ensure permission 0600 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    mode: '0600'
  when:
    - file_exists.stat is defined and file_exists.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_permissions_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_pubkey_auth" strategy="restrict">- name: Disable PubkeyAuthentication Authentication
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*PubkeyAuthentication\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: PubkeyAuthentication no
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_pubkey_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="configure_opensc_card_drivers" strategy="configure">- name: XCCDF Value var_smartcard_drivers # promote to variable
  set_fact:
    var_smartcard_drivers: !!str <sub idref="var_smartcard_drivers" />
  tags:
    - always

- name: Check existence of opensc conf
  stat:
    path: /etc/opensc-{{ ansible_architecture }}.conf
  register: opensc_conf_cd
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - configure_opensc_card_drivers
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)

- name: Configure opensc Smart Card Drivers
  lineinfile:
    path: /etc/opensc-{{ ansible_architecture }}.conf
    line: '        card_drivers = {{ var_smartcard_drivers }}'
    regexp: (^\s+#|^)\s+card_drivers\s+=\s+.*
    state: present
  when:
    - opensc_conf_cd.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - configure_opensc_card_drivers
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_sudoedit" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudoedit.*$
    patterns: '*.rules'
  register: find_sudoedit
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudoedit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_sudoedit.matched is defined and find_sudoedit.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudoedit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_sudoedit.files | map(attribute=''path'') | list | first }}'
  when:
    - find_sudoedit.matched is defined and find_sudoedit.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudoedit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the sudoedit rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudoedit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the sudoedit rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudoedit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_disk_full_action" strategy="restrict">- name: XCCDF Value var_auditd_disk_full_action # promote to variable
  set_fact:
    var_auditd_disk_full_action: !!str <sub idref="var_auditd_disk_full_action" />
  tags:
    - always

- name: Configure auditd Disk Full Action when Disk Space Is Full
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: disk_full_action = {{ var_auditd_disk_full_action }}
    regexp: ^\s*disk_full_action\s*=\s*.*$
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_disk_full_action
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-4
    - NIST-800-53-AU-5(b)
    - NIST-800-53-IR-5
    - NIST-800-53-AU-5(2)
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_permissions_etc_shadow" strategy="configure">- name: Test for existence /etc/shadow
  stat:
    path: /etc/shadow
  register: file_exists
  tags:
    - file_permissions_etc_shadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure permission 0000 on /etc/shadow
  file:
    path: /etc/shadow
    mode: '0000'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_permissions_etc_shadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="set_password_hashing_algorithm_libuserconf" strategy="restrict">- name: Set Password Hashing Algorithm in /etc/libuser.conf
  lineinfile:
    dest: /etc/libuser.conf
    insertafter: ^\s*\[defaults]
    regexp: ^#?crypt_style
    line: crypt_style = sha512
    state: present
    create: true
  tags:
    - set_password_hashing_algorithm_libuserconf
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.1
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-53-IA-7
    - CJIS-5.6.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_rdisc_disabled" strategy="disable">- name: Unit Service Exists - rdisc.service
  command: systemctl list-unit-files rdisc.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rdisc_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7

- name: Disable service rdisc
  systemd:
    name: rdisc.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"rdisc.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rdisc_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7

- name: Unit Socket Exists - rdisc.socket
  command: systemctl list-unit-files rdisc.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rdisc_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7

- name: Disable socket rdisc
  systemd:
    name: rdisc.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"rdisc.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rdisc_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_execution_chcon" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chcon.*$
    patterns: '*.rules'
  register: find_chcon
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_chcon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_chcon.matched is defined and find_chcon.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_chcon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_chcon.files | map(attribute=''path'') | list | first }}'
  when:
    - find_chcon.matched is defined and find_chcon.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_chcon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the chcon rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_chcon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the chcon rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_chcon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_print_last_log" strategy="restrict">- name: Enable SSH Print Last Log
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*PrintLastLog\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: PrintLastLog yes
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_print_last_log
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-9
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_usergroup_modification_passwd" strategy="restrict">- name: Set architecture for audit passwd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_passwd
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_passwd.matched is defined and find_passwd.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
    - find_passwd.matched is defined and find_passwd.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_usergroup_modification_passwd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-2(4)
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_group_open_by_handle_at" strategy="restrict">- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&amp;03[\s]+-F[\s]+path=/etc/group.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
        }}'
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/group
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/group
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/group
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/group
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
    on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/group
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/group
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/group
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/group
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_fchmodat" strategy="restrict">- name: Set architecture for audit fchmodat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmodat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_fchmodat.matched is defined and find_fchmodat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fchmodat.matched is defined and find_fchmodat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmodat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fchmodat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fchmodat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fchmodat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fchmodat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fchmodat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fchmodat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fchmodat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fchmodat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_sssd_enabled" strategy="enable">- name: Enable service sssd
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service sssd
      service:
        name: sssd
        enabled: 'yes'
        state: started
      when:
        - '"sssd" in ansible_facts.packages'
  tags:
    - service_sssd_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(10)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_ypbind_removed" strategy="disable">- name: Ensure ypbind is removed
  package:
    name: ypbind
    state: absent
  tags:
    - package_ypbind_removed
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_umask_etc_profile" strategy="restrict">- name: XCCDF Value var_accounts_user_umask # promote to variable
  set_fact:
    var_accounts_user_umask: !!str <sub idref="var_accounts_user_umask" />
  tags:
    - always

- name: Set user umask in /etc/profile
  replace:
    path: /etc/profile
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
    - accounts_umask_etc_profile
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-SA-8
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_default_log_martians" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_default_log_martians_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_default_log_martians_value: !!str <sub idref="sysctl_net_ipv4_conf_default_log_martians_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.default.log_martians is set
  sysctl:
    name: net.ipv4.conf.default.log_martians
    value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_default_log_martians
    - unknown_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-17(7)
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5(3)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="accounts_root_path_dirs_no_write" strategy="restrict">- name: Print error message if user is not root
  fail:
    msg: Root account required to read root $PATH
  when: ansible_user != "root"
  ignore_errors: true
  tags:
    - accounts_root_path_dirs_no_write
    - medium_severity
    - restrict_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-CM-6(b)

- name: Get root paths which are not symbolic links
  stat:
    path: '{{ item }}'
  changed_when: false
  failed_when: false
  register: root_paths
  with_items: '{{ ansible_env.PATH.split('':'') }}'
  when: ansible_user == "root"
  tags:
    - accounts_root_path_dirs_no_write
    - medium_severity
    - restrict_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-CM-6(b)

- name: Disable writability to root directories
  file:
    path: '{{ item.item }}'
    mode: g-w,o-w
  with_items: '{{ root_paths.results }}'
  when:
    - root_paths.results is defined
    - item.stat.exists
    - not item.stat.islnk
  tags:
    - accounts_root_path_dirs_no_write
    - medium_severity
    - restrict_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-CM-6(b)
</fix><fix complexity="low" disruption="low" reboot="true" rule="grub2_disable_interactive_boot" strategy="restrict">- name: Verify that Interactive Boot is Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: systemd.confirm_spawn=(1|yes|true|on)
    replace: systemd.confirm_spawn=no
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_disable_interactive_boot
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-171-3.1.2
    - NIST-800-171-3.4.5
    - NIST-800-53-SC-2
    - NIST-800-53-AC-3

- name: Verify that Interactive Boot is Disabled (runtime)
  command: /sbin/grubby --update-kernel=ALL --remove-args="systemd.confirm_spawn"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_disable_interactive_boot
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-171-3.1.2
    - NIST-800-171-3.4.5
    - NIST-800-53-SC-2
    - NIST-800-53-AC-3
</fix><fix complexity="low" disruption="low" reboot="false" rule="set_password_hashing_algorithm_logindefs" strategy="restrict">- name: Set Password Hashing Algorithm in /etc/login.defs
  lineinfile:
    dest: /etc/login.defs
    regexp: ^#?ENCRYPT_METHOD
    line: ENCRYPT_METHOD SHA512
    state: present
    create: true
  tags:
    - set_password_hashing_algorithm_logindefs
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.1
    - NIST-800-171-3.13.11
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-53-IA-7
    - CJIS-5.6.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="coredump_disable_backtraces" strategy="restrict">- name: Disable core dump backtraces
  block:

    - name: Deduplicate values from /etc/systemd/coredump.conf
      lineinfile:
        path: /etc/systemd/coredump.conf
        create: false
        regexp: ^\s*ProcessSizeMax\s*=\s*
        state: absent

    - name: Insert correct line to /etc/systemd/coredump.conf
      lineinfile:
        path: /etc/systemd/coredump.conf
        create: false
        line: ProcessSizeMax=0
        state: present
  tags:
    - coredump_disable_backtraces
    - unknown_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_fsetxattr" strategy="restrict">- name: Set architecture for audit fsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fsetxattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fsetxattr.matched is defined and find_fsetxattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fsetxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fsetxattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_talk-server_removed" strategy="disable">- name: Ensure talk-server is removed
  package:
    name: talk-server
    state: absent
  tags:
    - package_talk-server_removed
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="configure_opensc_nss_db" strategy="configure">- name: Check existence of pkcs11-switch
  stat:
    path: /usr/bin/pkcs11-switch
  register: pkcs11switch
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - configure_opensc_nss_db
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)

- name: Get NSS database smart card configuration
  command: /usr/bin/pkcs11-switch
  changed_when: true
  register: pkcsw_output
  when:
    - pkcs11switch.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - configure_opensc_nss_db
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)

- name: Configure NSS DB To Use opensc
  command: /usr/bin/pkcs11-switch opensc
  when:
    - pkcs11switch.stat.exists and pkcsw_output.stdout != "opensc"
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - configure_opensc_nss_db
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3
    - NIST-800-53-IA-2(2)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_fremovexattr" strategy="restrict">- name: Set architecture for audit fremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fremovexattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fremovexattr.matched is defined and find_fremovexattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid&gt;=1000 -F auid!=unset
      -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid&gt;=1000 -F auid!=unset
      -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid&gt;=1000 -F auid!=unset
      -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid&gt;=1000 -F auid!=unset
      -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_firewalld_installed" strategy="enable">- name: Ensure firewalld is installed
  package:
    name: firewalld
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_firewalld_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_mount" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/mount.*$
    patterns: '*.rules'
  register: find_mount
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_mount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_mount.matched is defined and find_mount.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_mount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_mount.files | map(attribute=''path'') | list | first }}'
  when:
    - find_mount.matched is defined and find_mount.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_mount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the mount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/mount -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_mount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the mount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/mount -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_mount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_retention_space_left_action" strategy="restrict">- name: XCCDF Value var_auditd_space_left_action # promote to variable
  set_fact:
    var_auditd_space_left_action: !!str <sub idref="var_auditd_space_left_action" />
  tags:
    - always

- name: Configure auditd space_left Action on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: space_left_action = {{ var_auditd_space_left_action }}
    regexp: ^\s*space_left_action\s*=\s*.*$
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_retention_space_left_action
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.7
    - NIST-800-171-3.3.1
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-4
    - NIST-800-53-AU-5(1)
    - NIST-800-53-AU-5(b)
    - NIST-800-53-IR-5
    - NIST-800-53-AU-5(2)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_maxclassrepeat" strategy="restrict">- name: XCCDF Value var_password_pam_maxclassrepeat # promote to variable
  set_fact:
    var_password_pam_maxclassrepeat: !!str <sub idref="var_password_pam_maxclassrepeat" />
  tags:
    - always

- name: Ensure PAM variable maxclassrepeat is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxclassrepeat
    line: maxclassrepeat = {{ var_password_pam_maxclassrepeat }}
  tags:
    - accounts_password_pam_maxclassrepeat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5
    - NIST-800-53-IA-5(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands" strategy="restrict">- name: Search for privileged commands
  shell: find / -xdev -type f -perm -4000 -o -type f -perm -2000 2&gt;/dev/null
  args:
    warn: false
    executable: /bin/bash
  check_mode: false
  register: find_result
  changed_when: false
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.2
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-2(4)
    - NIST-800-53-AU-6(9)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path={{ item }} .*$
    patterns: '*.rules'
  with_items:
    - '{{ find_result.stdout_lines }}'
  register: files_result
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.2
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-2(4)
    - NIST-800-53-AU-6(9)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Overwrites the rule in rules.d
  lineinfile:
    path: '{{ item.1.path }}'
    line: -a always,exit -F path={{ item.0.item }} -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=special-config-changes
    create: false
    regexp: ^.*path={{ item.0.item }} .*$
  with_subelements:
    - '{{ files_result.results }}'
    - files
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.2
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-2(4)
    - NIST-800-53-AU-6(9)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Adds the rule in rules.d
  lineinfile:
    path: /etc/audit/rules.d/privileged.rules
    line: -a always,exit -F path={{ item.item }} -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=special-config-changes
    create: true
  with_items:
    - '{{ files_result.results }}'
  when:
    - files_result.results is defined and item.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.2
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-2(4)
    - NIST-800-53-AU-6(9)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1

- name: Inserts/replaces the rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path={{ item.item }} -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=special-config-changes
    create: true
    regexp: ^.*path={{ item.item }} .*$
  with_items:
    - '{{ files_result.results }}'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.2
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-2(4)
    - NIST-800-53-AU-6(9)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_gshadow_open" strategy="restrict">- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&amp;03[\s]+-F[\s]+path=/etc/gshadow.*
    patterns: '*.rules'
  register: find_open
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_open.matched is defined and find_open.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
    - find_open.matched is defined and find_open.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_kernel_randomize_va_space" strategy="disable">- name: Ensure sysctl kernel.randomize_va_space is set to 2
  sysctl:
    name: kernel.randomize_va_space
    value: '2'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_kernel_randomize_va_space
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.7
    - NIST-800-53-SC-30(2)
    - NIST-800-53-SC-39
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_ntpd_enabled" strategy="enable">- name: Enable service ntpd
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service ntpd
      service:
        name: ntpd
        enabled: 'yes'
        state: started
      when:
        - '"ntp" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ntpd_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.4
    - NIST-800-53-AU-8(1)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_binutils_installed" strategy="enable">- name: Ensure binutils is installed
  package:
    name: binutils
    state: present
  tags:
    - package_binutils_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_rsyslog-gnutls_installed" strategy="enable">- name: Ensure rsyslog-gnutls is installed
  package:
    name: rsyslog-gnutls
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_rsyslog-gnutls_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_telnet_disabled" strategy="disable">- name: Unit Service Exists - telnet.service
  command: systemctl list-unit-files telnet.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_telnet_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Disable service telnet
  systemd:
    name: telnet.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"telnet.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_telnet_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Unit Socket Exists - telnet.socket
  command: systemctl list-unit-files telnet.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_telnet_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Disable socket telnet
  systemd:
    name: telnet.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"telnet.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_telnet_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_rlogin_disabled" strategy="disable">- name: Unit Service Exists - rlogin.service
  command: systemctl list-unit-files rlogin.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rlogin_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Disable service rlogin
  systemd:
    name: rlogin.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"rlogin.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rlogin_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Unit Socket Exists - rlogin.socket
  command: systemctl list-unit-files rlogin.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rlogin_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Disable socket rlogin
  systemd:
    name: rlogin.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"rlogin.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rlogin_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat" strategy="restrict">- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: |-
      ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating
      ## System Protection Profile (OSPP)v4.2. These rules depends on having
      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at_o_creat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_unsuccessful_file_modification_openat_o_creat" strategy="restrict">- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: |-
      ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating
      ## System Protection Profile (OSPP)v4.2. These rules depends on having
      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_openat_o_creat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_sudo" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudo.*$
    patterns: '*.rules'
  register: find_sudo
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudo
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_sudo.matched is defined and find_sudo.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudo
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_sudo.files | map(attribute=''path'') | list | first }}'
  when:
    - find_sudo.matched is defined and find_sudo.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudo
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the sudo rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudo
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the sudo rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_sudo
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_debug-shell_disabled" strategy="disable">- name: Unit Service Exists - debug-shell.service
  command: systemctl list-unit-files debug-shell.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_debug-shell_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5

- name: Disable service debug-shell
  systemd:
    name: debug-shell.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"debug-shell.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_debug-shell_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5

- name: Unit Socket Exists - debug-shell.socket
  command: systemctl list-unit-files debug-shell.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_debug-shell_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5

- name: Disable socket debug-shell
  systemd:
    name: debug-shell.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"debug-shell.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_debug-shell_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_netfs_disabled" strategy="disable">- name: Unit Service Exists - netfs.service
  command: systemctl list-unit-files netfs.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  tags:
    - service_netfs_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Disable service netfs
  systemd:
    name: netfs.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when: '"netfs.service" in service_file_exists.stdout_lines[1]'
  tags:
    - service_netfs_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Unit Socket Exists - netfs.socket
  command: systemctl list-unit-files netfs.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  tags:
    - service_netfs_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Disable socket netfs
  systemd:
    name: netfs.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when: '"netfs.socket" in socket_file_exists.stdout_lines[1]'
  tags:
    - service_netfs_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="true" rule="kernel_module_bluetooth_disabled" strategy="disable">- name: Ensure kernel module 'bluetooth' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/bluetooth.conf
    regexp: bluetooth
    line: install bluetooth /bin/true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - kernel_module_bluetooth_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.16
    - NIST-800-53-AC-17(8)
    - NIST-800-53-AC-18(a)
    - NIST-800-53-AC-18(d)
    - NIST-800-53-AC-18(3)
    - NIST-800-53-CM-7
    - NIST-800-53-MP-7
    - CJIS-5.13.1.3
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_iptables_installed" strategy="enable">- name: Ensure iptables is installed
  package:
    name: iptables
    state: present
  tags:
    - package_iptables_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_groupowner_etc_gshadow" strategy="configure">- name: Test for existence /etc/gshadow
  stat:
    path: /etc/gshadow
  register: file_exists
  tags:
    - file_groupowner_etc_gshadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6

- name: Ensure group owner 0 on /etc/gshadow
  file:
    path: /etc/gshadow
    group: '0'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_groupowner_etc_gshadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_all_accept_redirects" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_all_accept_redirects_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_all_accept_redirects_value: !!str <sub idref="sysctl_net_ipv4_conf_all_accept_redirects_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_all_accept_redirects
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - CJIS-5.10.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_crond_enabled" strategy="enable">- name: Enable service crond
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service crond
      service:
        name: crond
        enabled: 'yes'
        state: started
      when:
        - '"cronie" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_crond_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_passwords_pam_faillock_unlock_time" strategy="restrict">- name: XCCDF Value var_accounts_passwords_pam_faillock_unlock_time # promote to variable
  set_fact:
    var_accounts_passwords_pam_faillock_unlock_time: !!str <sub idref="var_accounts_passwords_pam_faillock_unlock_time" />
  tags:
    - always

- name: Add auth pam_faillock preauth unlock_time before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
      }}
    state: before
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_unlock_time
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.7
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(b)
    - CJIS-5.5.3

- name: Add unlock_time argument to pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
      }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_unlock_time
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.7
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(b)
    - CJIS-5.5.3

- name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
      }}
    state: after
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_unlock_time
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.7
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(b)
    - CJIS-5.5.3

- name: Add unlock_time argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time
      }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_unlock_time
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.7
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(b)
    - CJIS-5.5.3

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_unlock_time
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.7
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(b)
    - CJIS-5.5.3
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_unsuccessful_file_modification_creat" strategy="restrict">- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: |-
      ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating
      ## System Protection Profile (OSPP)v4.2. These rules depends on having
      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_creat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_groupowner_etc_group" strategy="configure">- name: Test for existence /etc/group
  stat:
    path: /etc/group
  register: file_exists
  tags:
    - file_groupowner_etc_group
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure group owner 0 on /etc/group
  file:
    path: /etc/group
    group: '0'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_groupowner_etc_group
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_usbguard_installed" strategy="enable">- name: Ensure usbguard is installed
  package:
    name: usbguard
    state: present
  tags:
    - package_usbguard_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_shadow_open" strategy="restrict">- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&amp;03[\s]+-F[\s]+path=/etc/shadow.*
    patterns: '*.rules'
  register: find_open
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_open.matched is defined and find_open.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
    - find_open.matched is defined and find_open.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/shadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_shadow_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_gnutls-utils_installed" strategy="enable">- name: Ensure gnutls-utils is installed
  package:
    name: gnutls-utils
    state: present
  tags:
    - package_gnutls-utils_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_cron_enabled" strategy="enable">- name: Enable service cron
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service cron
      service:
        name: cron
        enabled: 'yes'
        state: started
      when:
        - '"cron" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_cron_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_glibc_installed" strategy="enable">- name: Ensure glibc is installed
  package:
    name: glibc
    state: present
  tags:
    - package_glibc_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_fchmodat" strategy="restrict">- name: Set architecture for audit fchmodat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmodat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_fchmodat.matched is defined and find_fchmodat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fchmodat.matched is defined and find_fchmodat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmodat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmodat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmodat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmodat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchmodat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_log_format" strategy="restrict">- name: Resolve information before writing to audit logs
  block:

    - name: Deduplicate values from /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: false
        regexp: (?i)^\s*log_format\s*=\s*
        state: absent

    - name: Insert correct line to /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: true
        line: log_format = ENRICHED
        state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_log_format
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_file_deletion_events_unlinkat" strategy="restrict">- name: Set architecture for audit unlinkat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlinkat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/delete.rules
  when:
    - find_unlinkat.matched is defined and find_unlinkat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_unlinkat.matched is defined and find_unlinkat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the unlinkat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlinkat -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlinkat -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlinkat -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlinkat -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlinkat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_set_loglevel_verbose" strategy="restrict">- name: Set SSH Daemon LogLevel to VERBOSE
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*LogLevel\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: LogLevel VERBOSE
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_set_loglevel_verbose
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-17(1)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_telnet_removed" strategy="disable">- name: Ensure telnet is removed
  package:
    name: telnet
    state: absent
  tags:
    - package_telnet_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_postqueue" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/postqueue.*$
    patterns: '*.rules'
  register: find_postqueue
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postqueue
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_postqueue.matched is defined and find_postqueue.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postqueue
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_postqueue.files | map(attribute=''path'') | list | first }}'
  when:
    - find_postqueue.matched is defined and find_postqueue.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postqueue
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the postqueue rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postqueue
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the postqueue rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_postqueue
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_retention_max_log_file" strategy="restrict">- name: XCCDF Value var_auditd_max_log_file # promote to variable
  set_fact:
    var_auditd_max_log_file: !!str <sub idref="var_auditd_max_log_file" />
  tags:
    - always

- name: Configure auditd Max Log File Size
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*max_log_file\s*=\s*.*$
    line: max_log_file = {{ var_auditd_max_log_file }}
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_retention_max_log_file
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.7
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-11
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_abrt-addon-python_removed" strategy="disable">- name: Ensure abrt-addon-python is removed
  package:
    name: abrt-addon-python
    state: absent
  tags:
    - package_abrt-addon-python_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="false" rule="sssd_enable_smartcards" strategy="configure">- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  tags:
    - sssd_enable_smartcards
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
    - section: sssd
      option: domains
      value: default
    - section: domain/default
      option: id_provider
      value: files
  when:
    - test_grep_domain.stdout is defined
    - test_grep_domain.stdout | length &lt; 1
  tags:
    - sssd_enable_smartcards
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed

- name: Enable Smartcards in SSSD
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: pam
    option: pam_cert_auth
    value: true
    create: true
    mode: 384
  tags:
    - sssd_enable_smartcards
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="false" rule="sssd_memcache_timeout" strategy="unknown">- name: XCCDF Value var_sssd_memcache_timeout # promote to variable
  set_fact:
    var_sssd_memcache_timeout: !!str <sub idref="var_sssd_memcache_timeout" />
  tags:
    - always

- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  tags:
    - sssd_memcache_timeout
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(10)
    - NIST-800-53-IA-5(13)

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
    - section: sssd
      option: domains
      value: default
    - section: domain/default
      option: id_provider
      value: files
  when:
    - test_grep_domain.stdout is defined
    - test_grep_domain.stdout | length &lt; 1
  tags:
    - sssd_memcache_timeout
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(10)
    - NIST-800-53-IA-5(13)

- name: Configure SSSD's Memory Cache to Expire
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: nss
    option: memcache_timeout
    value: '{{ var_sssd_memcache_timeout }}'
    create: true
    mode: 384
  tags:
    - sssd_memcache_timeout
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(10)
    - NIST-800-53-IA-5(13)
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_minlen" strategy="restrict">- name: XCCDF Value var_password_pam_minlen # promote to variable
  set_fact:
    var_password_pam_minlen: !!str <sub idref="var_password_pam_minlen" />
  tags:
    - always

- name: Ensure PAM variable minlen is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minlen
    line: minlen = {{ var_password_pam_minlen }}
  tags:
    - accounts_password_pam_minlen
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.3
    - NIST-800-53-IA-5(1)(a)
    - CJIS-5.6.2.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_abrt-plugin-rhtsupport_removed" strategy="disable">- name: Ensure abrt-plugin-rhtsupport is removed
  package:
    name: abrt-plugin-rhtsupport
    state: absent
  tags:
    - package_abrt-plugin-rhtsupport_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_fchownat" strategy="restrict">- name: Set architecture for audit fchownat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchownat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_fchownat.matched is defined and find_fchownat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fchownat.matched is defined and find_fchownat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchownat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchownat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchownat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchownat -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fchownat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_abrt-addon-kerneloops_removed" strategy="disable">- name: Ensure abrt-addon-kerneloops is removed
  package:
    name: abrt-addon-kerneloops
    state: absent
  tags:
    - package_abrt-addon-kerneloops_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_kerb_auth" strategy="restrict">- name: Disable Kerberos Authentication
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*KerberosAuthentication\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: KerberosAuthentication no
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_kerb_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-CM-6(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_gpasswd" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/gpasswd.*$
    patterns: '*.rules'
  register: find_gpasswd
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_gpasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_gpasswd.matched is defined and find_gpasswd.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_gpasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_gpasswd.files | map(attribute=''path'') | list | first }}'
  when:
    - find_gpasswd.matched is defined and find_gpasswd.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_gpasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the gpasswd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_gpasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the gpasswd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_gpasswd
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="sssd_offline_cred_expiration" strategy="configure">- name: Test for domain group
  command: grep '\s*\[domain\/[^]]*]' /etc/sssd/sssd.conf
  register: test_grep_domain
  ignore_errors: true
  changed_when: false
  tags:
    - sssd_offline_cred_expiration
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(13)

- name: Add default domain group (if no domain there)
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
    create: true
    mode: 384
  with_items:
    - section: sssd
      option: domains
      value: default
    - section: domain/default
      option: id_provider
      value: files
  when:
    - test_grep_domain.stdout is defined
    - test_grep_domain.stdout | length &lt; 1
  tags:
    - sssd_offline_cred_expiration
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(13)

- name: Configure SSD to Expire Offline Credentials
  ini_file:
    dest: /etc/sssd/sssd.conf
    section: pam
    option: offline_credentials_expiration
    value: 1
    create: true
    mode: 384
  tags:
    - sssd_offline_cred_expiration
    - medium_severity
    - configure_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(13)
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_use_approved_macs" strategy="restrict">- name: XCCDF Value sshd_approved_macs # promote to variable
  set_fact:
    sshd_approved_macs: !!str <sub idref="sshd_approved_macs" />
  tags:
    - always

- name: Use Only FIPS 140-2 Validated MACs
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*MACs\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: MACs {{ sshd_approved_macs }}
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_use_approved_macs
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.11
    - NIST-800-171-3.13.8
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-IA-7
    - NIST-800-53-SC-13
    - NIST-800-53-MA-4(6)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_fs_suid_dumpable" strategy="disable">- name: Ensure sysctl fs.suid_dumpable is set to 0
  sysctl:
    name: fs.suid_dumpable
    value: '0'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_fs_suid_dumpable
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-53-SI-11
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_tmout" strategy="restrict">- name: XCCDF Value var_accounts_tmout # promote to variable
  set_fact:
    var_accounts_tmout: !!str <sub idref="var_accounts_tmout" />
  tags:
    - always

- name: Set Interactive Session Timeout
  block:

    - name: Deduplicate values from /etc/profile
      lineinfile:
        path: /etc/profile
        create: false
        regexp: ^\s*TMOUT=
        state: absent

    - name: Check if /etc/profile.d exists
      stat:
        path: /etc/profile.d
      register: _etc_profile_d_exists

    - name: Check if the parameter TMOUT is present in /etc/profile.d
      find:
        paths: /etc/profile.d
        recurse: 'yes'
        follow: 'no'
        contains: ^\s*TMOUT=
      register: _etc_profile_d_has_parameter
      when: _etc_profile_d_exists.stat.isdir is defined and _etc_profile_d_exists.stat.isdir

    - name: Remove parameter from files in /etc/profile.d
      lineinfile:
        path: '{{ item.path }}'
        create: false
        regexp: ^\s*TMOUT=
        state: absent
      with_items: '{{ _etc_profile_d_has_parameter.files }}'
      when: _etc_profile_d_has_parameter.matched

    - name: Insert correct line to /etc/profile
      lineinfile:
        path: /etc/profile
        create: true
        line: TMOUT={{ var_accounts_tmout }}
        state: present
        validate: bash -n %s
  tags:
    - accounts_tmout
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-SC-10
    - NIST-800-53-AC-2(5)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="kernel_module_rds_disabled" strategy="disable">- name: Ensure kernel module 'rds' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/rds.conf
    regexp: rds
    line: install rds /bin/true
  tags:
    - kernel_module_rds_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_enable_smartcard_auth" strategy="unknown">- name: Enable the GNOME3 Login Smartcard Authentication
  ini_file:
    dest: /etc/dconf/db/gdm.d/00-security-settings
    section: org/gnome/login-screen
    option: enable-smartcard-authentication
    value: 'true'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_enable_smartcard_auth
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3

- name: Prevent user modification of GNOME3 disablement of Smartcard Authentication
  lineinfile:
    path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/login-screen/enable-smartcard-authentication
    line: /org/gnome/login-screen/enable-smartcard-authentication
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_enable_smartcard_auth
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.3
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_openscap-scanner_installed" strategy="enable">- name: Ensure openscap-scanner is installed
  package:
    name: openscap-scanner
    state: present
  tags:
    - package_openscap-scanner_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_rename" strategy="restrict">- name: Set architecture for audit rename tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_rename
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_rename.matched is defined and find_rename.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
  when:
    - find_rename.matched is defined and find_rename.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the rename rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the rename rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S rename -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S rename -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the rename rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S rename -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S rename -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_rename
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_aide_installed" strategy="enable">- name: Ensure aide is installed
  package:
    name: aide
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_aide_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-53-CM-3(d)
    - NIST-800-53-CM-3(e)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - CJIS-5.10.1.3
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_libcap-ng-utils_installed" strategy="enable">- name: Ensure libcap-ng-utils is installed
  package:
    name: libcap-ng-utils
    state: present
  tags:
    - package_libcap-ng-utils_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="restrict_serial_port_logins" strategy="restrict">- name: Restrict Serial Port Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ttyS[0-9]
    state: absent
  tags:
    - restrict_serial_port_logins
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-6(2)
    - NIST-800-53-IA-2
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_empty_passwords" strategy="restrict">- name: Disable SSH Access via Empty Passwords
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*PermitEmptyPasswords\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: PermitEmptyPasswords no
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_empty_passwords
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-3
    - NIST-800-53-AC-6
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-CM-6(b)
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="false" rule="disable_ctrlaltdel_reboot" strategy="disable">- name: Disable Ctrl-Alt-Del Reboot Activation
  systemd:
    name: ctrl-alt-del.target
    masked: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - disable_ctrlaltdel_reboot
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_lchown" strategy="restrict">- name: Set architecture for audit lchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lchown
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_lchown.matched is defined and find_lchown.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
  when:
    - find_lchown.matched is defined and find_lchown.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S lchown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S lchown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the lchown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S lchown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S lchown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_lchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_lremovexattr" strategy="restrict">- name: Set architecture for audit lremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lremovexattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_lremovexattr.matched is defined and find_lremovexattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid&gt;=1000 -F auid!=unset
      -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid&gt;=1000 -F auid!=unset
      -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid&gt;=1000 -F auid!=unset
      -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid&gt;=1000 -F auid!=unset
      -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_lremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="sebool_selinuxuser_execmod" strategy="enable">- name: XCCDF Value var_selinuxuser_execmod # promote to variable
  set_fact:
    var_selinuxuser_execmod: !!str <sub idref="var_selinuxuser_execmod" />
  tags:
    - always

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sebool_selinuxuser_execmod
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Set SELinux boolean selinuxuser_execmod accordingly
  seboolean:
    name: selinuxuser_execmod
    state: '{{ var_selinuxuser_execmod }}'
    persistent: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sebool_selinuxuser_execmod
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_newgidmap" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgidmap.*$
    patterns: '*.rules'
  register: find_newgidmap
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_newgidmap.matched is defined and find_newgidmap.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_newgidmap.files | map(attribute=''path'') | list | first }}'
  when:
    - find_newgidmap.matched is defined and find_newgidmap.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the newgidmap rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the newgidmap rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgidmap -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgidmap
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_nis_removed" strategy="disable">- name: Ensure nis is removed
  package:
    name: nis
    state: absent
  tags:
    - package_nis_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_ucredit" strategy="restrict">- name: XCCDF Value var_password_pam_ucredit # promote to variable
  set_fact:
    var_password_pam_ucredit: !!str <sub idref="var_password_pam_ucredit" />
  tags:
    - always

- name: Ensure PAM variable ucredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ucredit
    line: ucredit = {{ var_password_pam_ucredit }}
  tags:
    - accounts_password_pam_ucredit
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.2.3
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(a)
</fix><fix complexity="high" disruption="medium" reboot="false" rule="rpm_verify_hashes" strategy="restrict">- name: 'Set fact: Package manager reinstall command (dnf)'
  set_fact:
    package_manager_reinstall_cmd: dnf reinstall -y
  when: ansible_distribution == "Fedora"
  tags:
    - rpm_verify_hashes
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-53-AU-9(3)
    - CJIS-5.10.4.1

- name: 'Set fact: Package manager reinstall command (yum)'
  set_fact:
    package_manager_reinstall_cmd: yum reinstall -y
  when: (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")
  tags:
    - rpm_verify_hashes
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-53-AU-9(3)
    - CJIS-5.10.4.1

- name: Read files with incorrect hash
  command: rpm -Va --nodeps --nosize --nomtime --nordev --nocaps --nolinkto --nouser
    --nogroup --nomode --noconfig --noghost
  args:
    warn: false
  register: files_with_incorrect_hash
  changed_when: false
  failed_when: files_with_incorrect_hash.rc &gt; 1
  when: (package_manager_reinstall_cmd is defined)
  tags:
    - rpm_verify_hashes
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-53-AU-9(3)
    - CJIS-5.10.4.1

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_hash.stdout_lines | map(''regex_findall'',
    ''^[.]+[5]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
    | list | unique }}'
  register: list_of_packages
  changed_when: false
  when:
    - files_with_incorrect_hash.stdout_lines is defined
    - (files_with_incorrect_hash.stdout_lines | length &gt; 0)
  tags:
    - rpm_verify_hashes
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-53-AU-9(3)
    - CJIS-5.10.4.1

- name: Reinstall packages of files with incorrect hash
  command: '{{ package_manager_reinstall_cmd }} ''{{ item }}'''
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
    | unique }}'
  when:
    - files_with_incorrect_hash.stdout_lines is defined
    - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines
      | length &gt; 0))
  tags:
    - rpm_verify_hashes
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SI-7(1)
    - NIST-800-53-AU-9(3)
    - CJIS-5.10.4.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_unsuccessful_file_modification_open_o_creat" strategy="restrict">- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: |-
      ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating
      ## System Protection Profile (OSPP)v4.2. These rules depends on having
      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_o_creat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_login_events_faillock" strategy="restrict">- name: Set architecture for audit faillock tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_faillock
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_faillock
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_faillock
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/logins.rules
  when:
    - find_faillock.matched is defined and find_faillock.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_faillock
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
  when:
    - find_faillock.matched is defined and find_faillock.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_faillock
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the faillock rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/run/faillock -p wa -k logins
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_faillock
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/run/faillock -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_faillock
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="high" reboot="false" rule="mount_option_dev_shm_nodev" strategy="configure">- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc &gt; 1
  changed_when: false
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_nodev
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
    - '{{ device_name.stdout_lines[0].split() | list | lower }}'
    - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
    - device_name.stdout is defined and device_name.stdout_lines is defined
    - (device_name.stdout | length &gt; 0)
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_nodev
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
    - device_name.stdout is defined
    - (device_name.stdout | length &gt; 0)
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_nodev
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_default_accept_source_route" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_default_accept_source_route_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_default_accept_source_route_value: !!str <sub idref="sysctl_net_ipv4_conf_default_accept_source_route_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.default.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_default_accept_source_route
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
    - CJIS-5.10.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_nfs-utils_removed" strategy="disable">- name: Ensure nfs-utils is removed
  package:
    name: nfs-utils
    state: absent
  tags:
    - package_nfs-utils_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_oddjobd_disabled" strategy="disable">- name: Unit Service Exists - oddjobd.service
  command: systemctl list-unit-files oddjobd.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_oddjobd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7

- name: Disable service oddjobd
  systemd:
    name: oddjobd.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"oddjobd.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_oddjobd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7

- name: Unit Socket Exists - oddjobd.socket
  command: systemctl list-unit-files oddjobd.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_oddjobd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7

- name: Disable socket oddjobd
  systemd:
    name: oddjobd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"oddjobd.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_oddjobd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_sshd_disabled" strategy="disable">- name: Unit Service Exists - sshd.service
  command: systemctl list-unit-files sshd.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_sshd_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Disable service sshd
  systemd:
    name: sshd.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"sshd.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_sshd_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Unit Socket Exists - sshd.socket
  command: systemctl list-unit-files sshd.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_sshd_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Disable socket sshd
  systemd:
    name: sshd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"sshd.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_sshd_disabled
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_rhosts_rsa" strategy="restrict">- name: Disable SSH Support for Rhosts RSA Authentication
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*RhostsRSAAuthentication\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: RhostsRSAAuthentication no
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_rhosts_rsa
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-CM-6(a)
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_ftruncate" strategy="restrict">- name: Set architecture for audit ftruncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_ftruncate
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_ftruncate.matched is defined and find_ftruncate.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
  when:
    - find_ftruncate.matched is defined and find_ftruncate.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the ftruncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_ftruncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_default_send_redirects" strategy="disable">- name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.default.send_redirects
    value: '0'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_default_send_redirects
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
    - CJIS-5.10.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_ntpdate_disabled" strategy="disable">- name: Unit Service Exists - ntpdate.service
  command: systemctl list-unit-files ntpdate.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ntpdate_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable service ntpdate
  systemd:
    name: ntpdate.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"ntpdate.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ntpdate_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Unit Socket Exists - ntpdate.socket
  command: systemctl list-unit-files ntpdate.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ntpdate_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable socket ntpdate
  systemd:
    name: ntpdate.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"ntpdate.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_ntpdate_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_execution_restorecon" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/restorecon.*$
    patterns: '*.rules'
  register: find_restorecon
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_restorecon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_restorecon.matched is defined and find_restorecon.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_restorecon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_restorecon.files | map(attribute=''path'') | list | first }}'
  when:
    - find_restorecon.matched is defined and find_restorecon.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_restorecon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the restorecon rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_restorecon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the restorecon rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_restorecon
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_minimum_age_login_defs" strategy="restrict">- name: XCCDF Value var_accounts_minimum_age_login_defs # promote to variable
  set_fact:
    var_accounts_minimum_age_login_defs: !!str <sub idref="var_accounts_minimum_age_login_defs" />
  tags:
    - always

- name: Set Password Minimum Age
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^#?PASS_MIN_DAYS
    line: PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}
  tags:
    - accounts_minimum_age_login_defs
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(f)
    - NIST-800-53-IA-5(1)(d)
    - CJIS-5.6.2.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_max_concurrent_login_sessions" strategy="restrict">- name: XCCDF Value var_accounts_max_concurrent_login_sessions # promote to variable
  set_fact:
    var_accounts_max_concurrent_login_sessions: !!str <sub idref="var_accounts_max_concurrent_login_sessions" />
  tags:
    - always

- name: Limit the Number of Concurrent Login Sessions Allowed Per User
  lineinfile:
    state: present
    dest: /etc/security/limits.conf
    insertbefore: ^# End of file
    regexp: ^#?\*.*maxlogins
    line: '*           hard    maxlogins     {{ var_accounts_max_concurrent_login_sessions
      }}'
    create: true
  tags:
    - accounts_max_concurrent_login_sessions
    - low_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-10
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="require_singleuser_auth" strategy="restrict">- name: require single user mode password
  lineinfile:
    create: true
    dest: /usr/lib/systemd/system/rescue.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block
      default"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - require_singleuser_auth
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-171-3.4.5
    - NIST-800-53-IA-2
    - NIST-800-53-IA-2(1)
    - NIST-800-53-AC-3
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_default_secure_redirects" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_default_secure_redirects_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_default_secure_redirects_value: !!str <sub idref="sysctl_net_ipv4_conf_default_secure_redirects_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.default.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_default_secure_redirects
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_rsh_disabled" strategy="disable">- name: Unit Service Exists - rsh.service
  command: systemctl list-unit-files rsh.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rsh_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Disable service rsh
  systemd:
    name: rsh.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"rsh.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rsh_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Unit Socket Exists - rsh.socket
  command: systemctl list-unit-files rsh.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rsh_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)

- name: Disable socket rsh
  systemd:
    name: rsh.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"rsh.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rsh_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
    - NIST-800-53-IA-5(1)(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_owner_etc_passwd" strategy="configure">- name: Test for existence /etc/passwd
  stat:
    path: /etc/passwd
  register: file_exists
  tags:
    - file_owner_etc_passwd
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure owner 0 on /etc/passwd
  file:
    path: /etc/passwd
    owner: '0'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_owner_etc_passwd
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_retention_admin_space_left_action" strategy="restrict">- name: XCCDF Value var_auditd_admin_space_left_action # promote to variable
  set_fact:
    var_auditd_admin_space_left_action: !!str <sub idref="var_auditd_admin_space_left_action" />
  tags:
    - always

- name: Configure auditd admin_space_left Action on Low Disk Space
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: admin_space_left_action = {{ var_auditd_admin_space_left_action }}
    regexp: ^\s*admin_space_left_action\s*=\s*.*$
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_retention_admin_space_left_action
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.7
    - NIST-800-171-3.3.1
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-4
    - NIST-800-53-AU-5(b)
    - NIST-800-53-IR-5
    - NIST-800-53-AU-5(2)
    - CJIS-5.4.1.1
</fix><fix complexity="medium" disruption="low" reboot="true" rule="grub2_slub_debug_argument" strategy="restrict">- name: check slub_debug argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*slub_debug=' /etc/default/grub
  failed_when: false
  register: argcheck
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_slub_debug_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: replace existing slub_debug argument
  replace:
    path: /etc/default/grub
    regexp: slub_debug=.
    replace: slub_debug=P
  when:
    - argcheck.rc == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_slub_debug_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: add slub_debug argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 slub_debug=P"
  when:
    - argcheck.rc != 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_slub_debug_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="slub_debug=P"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_slub_debug_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_passwd_openat" strategy="restrict">- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&amp;03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_openat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_openat.matched is defined and find_openat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_openat.matched is defined and find_openat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="gnome_gdm_disable_automatic_login" strategy="unknown">- name: Disable GDM Automatic Login
  ini_file:
    dest: /etc/gdm/custom.conf
    section: daemon
    option: AutomaticLoginEnable
    value: 'false'
    no_extra_spaces: true
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - gnome_gdm_disable_automatic_login
    - high_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-53-CM-6(b)
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_permissions_sshd_pub_key" strategy="configure">- name: Find /etc/ssh/ file(s)
  find:
    paths: /etc/ssh/
    patterns: ^.*.pub$
    use_regex: true
  register: files_found
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_permissions_sshd_pub_key
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.10
    - NIST-800-53-AC-6

- name: Set permissions for /etc/ssh/ file(s)
  file:
    path: '{{ item.path }}'
    mode: '0644'
  with_items:
    - '{{ files_found.files }}'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_permissions_sshd_pub_key
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.10
    - NIST-800-53-AC-6
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_xinetd_removed" strategy="disable">- name: Ensure xinetd is removed
  package:
    name: xinetd
    state: absent
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_xinetd_removed
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_policycoreutils_installed" strategy="enable">- name: Ensure policycoreutils is installed
  package:
    name: policycoreutils
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_policycoreutils_installed
    - high_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_group_open" strategy="restrict">- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&amp;03[\s]+-F[\s]+path=/etc/group.*
    patterns: '*.rules'
  register: find_open
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_open.matched is defined and find_open.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
    - find_open.matched is defined and find_open.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/group -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_group_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_net-snmp_removed" strategy="disable">- name: Ensure net-snmp is removed
  package:
    name: net-snmp
    state: absent
  tags:
    - package_net-snmp_removed
    - unknown_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="high" reboot="true" rule="security_patches_up_to_date" strategy="patch">- name: Security patches are up to date
  package:
    name: '*'
    state: latest
  tags:
    - security_patches_up_to_date
    - high_severity
    - skip_ansible_lint
    - patch_strategy
    - low_complexity
    - high_disruption
    - reboot_required
    - PCI-DSS-Req-6.2
    - NIST-800-53-SI-2
    - NIST-800-53-SI-2(c)
    - NIST-800-53-MA-1(b)
    - CJIS-5.10.4.1
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_ip_forward" strategy="disable">- name: Ensure sysctl net.ipv4.ip_forward is set to 0
  sysctl:
    name: net.ipv4.ip_forward
    value: '0'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_ip_forward
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-32
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_unlink" strategy="restrict">- name: Set architecture for audit unlink tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_unlink
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_unlink.matched is defined and find_unlink.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
  when:
    - find_unlink.matched is defined and find_unlink.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the unlink rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the unlink rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S unlink -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S unlink -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the unlink rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S unlink -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S unlink -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="disable_prelink" strategy="restrict">- name: Does prelink file exist
  stat:
    path: /etc/sysconfig/prelink
  register: prelink_exists
  tags:
    - disable_prelink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.13.11
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-13
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - NIST-800-53-IA-7
    - CJIS-5.10.1.3

- name: disable prelinking
  lineinfile:
    path: /etc/sysconfig/prelink
    regexp: ^PRELINKING=
    line: PRELINKING=no
  when: prelink_exists.stat.exists
  tags:
    - disable_prelink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.13.11
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - NIST-800-53-SC-13
    - NIST-800-53-SC-28
    - NIST-800-53-SI-7
    - NIST-800-53-IA-7
    - CJIS-5.10.1.3
</fix><fix complexity="low" disruption="low" reboot="false" rule="rsyslog_remote_loghost" strategy="restrict">- name: XCCDF Value rsyslog_remote_loghost_address # promote to variable
  set_fact:
    rsyslog_remote_loghost_address: !!str <sub idref="rsyslog_remote_loghost_address" />
  tags:
    - always

- name: Set rsyslog remote loghost
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: ^\*\.\*
    line: '*.* @@{{ rsyslog_remote_loghost_address }}'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - rsyslog_remote_loghost
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-3(2)
    - NIST-800-53-AU-4(1)
    - NIST-800-53-AU-9
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_root_login" strategy="restrict">- name: Disable SSH Root Login
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*PermitRootLogin\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: PermitRootLogin no
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_root_login
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-3
    - NIST-800-53-AC-6(2)
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-IA-2
    - NIST-800-53-IA-2(5)
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_audispd_syslog_plugin_activated" strategy="configure">- name: enable syslog plugin
  lineinfile:
    dest: /etc/audisp/plugins.d/syslog.conf
    regexp: ^active
    line: active = yes
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_audispd_syslog_plugin_activated
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.5.3
    - NIST-800-171-3.3.1
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-3(2)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="high" disruption="medium" reboot="false" rule="rpm_verify_permissions" strategy="restrict">- name: Read list of files with incorrect permissions
  command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev
    --nocaps --nolinkto --nouser --nogroup
  args:
    warn: false
  register: files_with_incorrect_permissions
  failed_when: files_with_incorrect_permissions.rc &gt; 1
  changed_when: false
  tags:
    - rpm_verify_permissions
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9(1)
    - NIST-800-53-AU-9(3)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - CJIS-5.10.4.1

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_permissions.stdout_lines | map(''regex_findall'',
    ''^[.]+[M]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
    | list | unique }}'
  register: list_of_packages
  changed_when: false
  when: (files_with_incorrect_permissions.stdout_lines | length &gt; 0)
  tags:
    - rpm_verify_permissions
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9(1)
    - NIST-800-53-AU-9(3)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - CJIS-5.10.4.1

- name: Correct file permissions with RPM
  command: rpm --setperms '{{ item }}'
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
    | unique }}'
  when: (files_with_incorrect_permissions.stdout_lines | length &gt; 0)
  tags:
    - rpm_verify_permissions
    - high_severity
    - restrict_strategy
    - high_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-11.5
    - NIST-800-171-3.3.8
    - NIST-800-171-3.4.1
    - NIST-800-53-AC-6
    - NIST-800-53-AU-9(1)
    - NIST-800-53-AU-9(3)
    - NIST-800-53-CM-6(d)
    - NIST-800-53-CM-6(3)
    - CJIS-5.10.4.1
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_passwd_open_by_handle_at" strategy="restrict">- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open_by_handle_at(,[\S]+)?[\s]+-F[\s]+a2&amp;03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_open_by_handle_at
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
        }}'
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/passwd
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/passwd
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/passwd
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/passwd
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
    on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/passwd
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F a2&amp;03 -F path=/etc/passwd
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/passwd
      -F auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F a2&amp;03 -F path=/etc/passwd
      -F auid&gt;=1000 -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_vim_installed" strategy="enable">- name: Ensure vim is installed
  package:
    name: vim
    state: present
  tags:
    - package_vim_installed
    - low_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_truncate" strategy="restrict">- name: Set architecture for audit truncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_truncate
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_truncate.matched is defined and find_truncate.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
  when:
    - find_truncate.matched is defined and find_truncate.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the truncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the truncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the truncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_truncate
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_passwd_open" strategy="restrict">- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*open(,[\S]+)?[\s]+-F[\s]+a1&amp;03[\s]+-F[\s]+path=/etc/passwd.*
    patterns: '*.rules'
  register: find_open
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_open.matched is defined and find_open.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
    - find_open.matched is defined and find_open.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S open -F a1&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S open -F a1&amp;03 -F path=/etc/passwd -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_passwd_open
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_fchown" strategy="restrict">- name: Set architecture for audit fchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchown
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_fchown.matched is defined and find_fchown.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fchown.matched is defined and find_fchown.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fchown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b32 -S fchown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fchown rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fchown -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset
      -F key=access
    - -a always,exit -F arch=b64 -S fchown -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fchown
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_login_events_lastlog" strategy="restrict">- name: Set architecture for audit lastlog tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_lastlog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_lastlog
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_lastlog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/logins.rules
  when:
    - find_lastlog.matched is defined and find_lastlog.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_lastlog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
  when:
    - find_lastlog.matched is defined and find_lastlog.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_lastlog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the lastlog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/lastlog -p wa -k logins
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_lastlog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/lastlog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_login_events_lastlog
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.3
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_umount" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/umount.*$
    patterns: '*.rules'
  register: find_umount
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_umount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_umount.matched is defined and find_umount.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_umount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_umount.files | map(attribute=''path'') | list | first }}'
  when:
    - find_umount.matched is defined and find_umount.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_umount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the umount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_umount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the umount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_umount
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="no_rsh_trust_files" strategy="restrict">- block:

    - name: Detect shosts.equiv Files on the System
      find:
        paths: /
        recurse: true
        patterns: shosts.equiv
      check_mode: false
      register: shosts_equiv_locations

    - name: Remove Rsh Trust Files
      file:
        path: '{{ item.path }}'
        state: absent
      with_items: '{{ shosts_equiv_locations.files }}'
      when: shosts_equiv_locations
  tags:
    - no_rsh_trust_files
    - high_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_abrt-plugin-sosreport_removed" strategy="disable">- name: Ensure abrt-plugin-sosreport is removed
  package:
    name: abrt-plugin-sosreport
    state: absent
  tags:
    - package_abrt-plugin-sosreport_removed
    - low_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_audispd_encrypt_sent_records" strategy="configure">- name: Configure Kerberos 5 Encryption in Audit Event Multiplexor (audispd)
  lineinfile:
    dest: /etc/audisp/audisp-remote.conf
    line: enable_krb5 = yes
    regexp: ^\s*enable_krb5\s*=\s*.*$
    state: present
    mode: 416
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_audispd_encrypt_sent_records
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-9(3)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_kernel_yama_ptrace_scope" strategy="disable">- name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
  sysctl:
    name: kernel.yama.ptrace_scope
    value: '1'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_kernel_yama_ptrace_scope
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_rexec_disabled" strategy="disable">- name: Unit Service Exists - rexec.service
  command: systemctl list-unit-files rexec.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rexec_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable service rexec
  systemd:
    name: rexec.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"rexec.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rexec_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Unit Socket Exists - rexec.socket
  command: systemctl list-unit-files rexec.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rexec_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable socket rexec
  systemd:
    name: rexec.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"rexec.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rexec_disabled
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_execution_semanage" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/semanage.*$
    patterns: '*.rules'
  register: find_semanage
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_semanage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_semanage.matched is defined and find_semanage.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_semanage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_semanage.files | map(attribute=''path'') | list | first }}'
  when:
    - find_semanage.matched is defined and find_semanage.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_semanage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the semanage rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_semanage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the semanage rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_semanage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_disk_error_action" strategy="restrict">- name: XCCDF Value var_auditd_disk_error_action # promote to variable
  set_fact:
    var_auditd_disk_error_action: !!str <sub idref="var_auditd_disk_error_action" />
  tags:
    - always

- name: Configure auditd Disk Error Action on Disk Error
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: disk_error_action = {{ var_auditd_disk_error_action }}
    regexp: ^\s*disk_error_action\s*=\s*.*$
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_disk_error_action
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-4
    - NIST-800-53-AU-5(b)
    - NIST-800-53-IR-5
    - NIST-800-53-AU-5(2)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_icmp_ignore_bogus_error_responses" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value # promote to variable
  set_fact:
    sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: !!str <sub idref="sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
  sysctl:
    name: net.ipv4.icmp_ignore_bogus_error_responses
    value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
    - unknown_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_execution_seunshare" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/seunshare.*$
    patterns: '*.rules'
  register: find_seunshare
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_seunshare
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_seunshare.matched is defined and find_seunshare.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_seunshare
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_seunshare.files | map(attribute=''path'') | list | first }}'
  when:
    - find_seunshare.matched is defined and find_seunshare.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_seunshare
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the seunshare rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_seunshare
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the seunshare rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/seunshare -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_execution_seunshare
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_all_secure_redirects" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_all_secure_redirects_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_all_secure_redirects_value: !!str <sub idref="sysctl_net_ipv4_conf_all_secure_redirects_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.all.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_all_secure_redirects
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_cryptsetup-luks_installed" strategy="enable">- name: Ensure cryptsetup-luks is installed
  package:
    name: cryptsetup-luks
    state: present
  tags:
    - package_cryptsetup-luks_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_use_priv_separation" strategy="restrict">- name: Enable Use of Privilege Separation
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*UsePrivilegeSeparation\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: UsePrivilegeSeparation sandbox
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_use_priv_separation
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-6
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_chmod" strategy="restrict">- name: Set architecture for audit chmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chmod
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_chmod.matched is defined and find_chmod.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
  when:
    - find_chmod.matched is defined and find_chmod.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chmod -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chmod -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chmod -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chmod -F auid&gt;=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_chmod
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_groupowner_grub2_cfg" strategy="configure">- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_groupowner_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-7.1
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - CJIS-5.5.2.2

- name: Ensure group owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    group: '0'
  when:
    - file_exists.stat is defined and file_exists.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_groupowner_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-7.1
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write" strategy="restrict">- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: |-
      ## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

      ## The purpose of these rules is to meet the requirements for Operating
      ## System Protection Profile (OSPP)v4.2. These rules depends on having
      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

      ## Unsuccessful file creation (open with O_CREAT)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

      ## Unsuccessful file modifications (open for write or truncate)
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

      ## Unsuccessful file access (any other opens) This has to go last.
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at_o_trunc_write
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_screensaver_lock_enabled" strategy="unknown">- name: Enable GNOME3 Screensaver Lock After Idle Period
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: lock-enabled
    value: 'true'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_lock_enabled
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(b)
    - CJIS-5.5.5

- name: Prevent user modification of GNOME lock-enabled
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/lock-enabled
    line: /org/gnome/desktop/screensaver/lock-enabled
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_lock_enabled
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(b)
    - CJIS-5.5.5
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_etc_gshadow_openat" strategy="restrict">- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: .*openat(,[\S]+)?[\s]+-F[\s]+a2&amp;03[\s]+-F[\s]+path=/etc/gshadow.*
    patterns: '*.rules'
  register: find_openat
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/modify.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/modify.rules
  when:
    - find_openat.matched is defined and find_openat.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
    - find_openat.matched is defined and find_openat.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/gshadow -F
      auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/gshadow -F
      auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/gshadow -F
      auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b32 -S openat -F a2&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
    regexp: -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/gshadow -F
      auid&gt;=1000 -F auid!=unset -F key=[\S]+
  with_items:
    - -a always,exit -F arch=b64 -S openat -F a2&amp;03 -F path=/etc/gshadow -F auid&gt;=1000
      -F auid!=unset -F key=modify
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_etc_gshadow_openat
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="account_disable_post_pw_expiration" strategy="restrict">- name: XCCDF Value var_account_disable_post_pw_expiration # promote to variable
  set_fact:
    var_account_disable_post_pw_expiration: !!str <sub idref="var_account_disable_post_pw_expiration" />
  tags:
    - always

- name: Set Account Expiration Following Inactivity
  lineinfile:
    create: true
    dest: /etc/default/useradd
    regexp: ^INACTIVE
    line: INACTIVE={{ var_account_disable_post_pw_expiration }}
  tags:
    - account_disable_post_pw_expiration
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.4
    - NIST-800-171-3.5.6
    - NIST-800-53-AC-2(2)
    - NIST-800-53-AC-2(3)
    - NIST-800-53-IA-4(e)
    - CJIS-5.6.2.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_owner_etc_gshadow" strategy="configure">- name: Test for existence /etc/gshadow
  stat:
    path: /etc/gshadow
  register: file_exists
  tags:
    - file_owner_etc_gshadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6

- name: Ensure owner 0 on /etc/gshadow
  file:
    path: /etc/gshadow
    owner: '0'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_owner_etc_gshadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_krb5-workstation_removed" strategy="disable">- name: Ensure krb5-workstation is removed
  package:
    name: krb5-workstation
    state: absent
  tags:
    - package_krb5-workstation_removed
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="securetty_root_login_console_only" strategy="restrict">- name: Restrict Virtual Console Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ^vc
    state: absent
  tags:
    - securetty_root_login_console_only
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-6(2)
    - NIST-800-53-IA-2
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_rsyslog_enabled" strategy="enable">- name: Enable service rsyslog
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service rsyslog
      service:
        name: rsyslog
        enabled: 'yes'
        state: started
      when:
        - '"rsyslog" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_rsyslog_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-4(1)
    - NIST-800-53-AU-12
</fix><fix complexity="low" disruption="medium" reboot="true" rule="kernel_module_sctp_disabled" strategy="disable">- name: Ensure kernel module 'sctp' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/sctp.conf
    regexp: sctp
    line: install sctp /bin/true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - kernel_module_sctp_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-7
    - CJIS-5.10.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_chsh" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chsh.*$
    patterns: '*.rules'
  register: find_chsh
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chsh
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_chsh.matched is defined and find_chsh.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chsh
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_chsh.files | map(attribute=''path'') | list | first }}'
  when:
    - find_chsh.matched is defined and find_chsh.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chsh
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the chsh rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chsh
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the chsh rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chsh
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="no_direct_root_logins" strategy="restrict">- name: Test for existence of /etc/securetty
  stat:
    path: /etc/securetty
  register: securetty_empty
  tags:
    - no_direct_root_logins
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.6
    - NIST-800-53-IA-2
    - NIST-800-53-IA-2(1)

- name: Direct root Logins Not Allowed
  copy:
    dest: /etc/securetty
    content: ''
  when: securetty_empty.stat.size &gt; 1
  tags:
    - no_direct_root_logins
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.6
    - NIST-800-53-IA-2
    - NIST-800-53-IA-2(1)
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_passwords_pam_faillock_deny" strategy="restrict">- name: XCCDF Value var_accounts_passwords_pam_faillock_deny # promote to variable
  set_fact:
    var_accounts_passwords_pam_faillock_deny: !!str <sub idref="var_accounts_passwords_pam_faillock_deny" />
  tags:
    - always

- name: Add auth pam_faillock preauth deny before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny
      }}
    state: before
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.6
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(a)
    - CJIS-5.5.3

- name: Add deny argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny
      }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.6
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(a)
    - CJIS-5.5.3

- name: Add auth pam_faillock authfail deny after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: after
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.6
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(a)
    - CJIS-5.5.3

- name: Add deny argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    new_type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.6
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(a)
    - CJIS-5.5.3

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
  tags:
    - accounts_passwords_pam_faillock_deny
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.6
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(a)
    - CJIS-5.5.3
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_userhelper" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/userhelper.*$
    patterns: '*.rules'
  register: find_userhelper
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_userhelper
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_userhelper.matched is defined and find_userhelper.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_userhelper
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_userhelper.files | map(attribute=''path'') | list | first }}'
  when:
    - find_userhelper.matched is defined and find_userhelper.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_userhelper
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the userhelper rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_userhelper
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the userhelper rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_userhelper
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_openssh-server_removed" strategy="disable">- name: Ensure openssh-server is removed
  package:
    name: openssh-server
    state: absent
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - package_openssh-server_removed
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_fremovexattr" strategy="restrict">- name: Set architecture for audit fremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fremovexattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fremovexattr.matched is defined and find_fremovexattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EACCES -F auid&gt;=1000 -F
      auid!=unset -F key=access
    - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EACCES -F auid&gt;=1000 -F
      auid!=unset -F key=access
    - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EACCES -F auid&gt;=1000 -F
      auid!=unset -F key=access
    - -a always,exit -F arch=b32 -S fremovexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)

- name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EACCES -F auid&gt;=1000 -F
      auid!=unset -F key=access
    - -a always,exit -F arch=b64 -S fremovexattr -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset
      -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_fremovexattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - NIST-800-53-AU-12(c)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_scap-security-guide_installed" strategy="enable">- name: Ensure scap-security-guide is installed
  package:
    name: scap-security-guide
    state: present
  tags:
    - package_scap-security-guide_installed
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_remote_access_encryption" strategy="unknown">- name: Require Encryption for Remote Access in GNOME3
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/Vino
    option: require-encryption
    value: 'true'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_remote_access_encryption
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-53-CM-2(1)(b)

- name: Prevent user modification of GNOME3 Encryption for Remote Access
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/Vino/require-encryption
    line: /org/gnome/Vino/require-encryption
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_remote_access_encryption
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-53-CM-2(1)(b)
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_write_logs" strategy="restrict">- name: Write Audit Logs to the Disk
  block:

    - name: Deduplicate values from /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: false
        regexp: (?i)^\s*write_logs\s*=\s*
        state: absent

    - name: Insert correct line to /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: true
        line: write_logs = yes
        state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_write_logs
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_banner_enabled" strategy="unknown">- name: Enable GNOME3 Login Warning Banner
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/login-screen
    option: banner-message-enable
    value: 'true'
    create: true
  tags:
    - dconf_gnome_banner_enabled
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)(1)
    - NIST-800-53-AC-8(c)(2)
    - NIST-800-53-AC-8(c)(3)

- name: Prevent user modification of GNOME banner-message-enabled
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/login-screen/banner-message-enable
    line: /org/gnome/login-screen/banner-message-enable
    create: true
  tags:
    - dconf_gnome_banner_enabled
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(b)
    - NIST-800-53-AC-8(c)(1)
    - NIST-800-53-AC-8(c)(2)
    - NIST-800-53-AC-8(c)(3)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_unsuccessful_file_modification_open_by_handle_at" strategy="restrict">- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open_by_handle_at
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/access.rules
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first
        }}'
  when:
    - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched
      &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid&gt;=1000
      -F auid!=unset -F key=access
    - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid&gt;=1000
      -F auid!=unset -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid&gt;=1000
      -F auid!=unset -F key=access
    - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid&gt;=1000
      -F auid!=unset -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when
    on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid&gt;=1000
      -F auid!=unset -F key=access
    - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid&gt;=1000
      -F auid!=unset -F key=access
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
    - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid&gt;=1000
      -F auid!=unset -F key=access
    - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid&gt;=1000
      -F auid!=unset -F key=access
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_unsuccessful_file_modification_open_by_handle_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.4
    - PCI-DSS-Req-10.2.1
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_screensaver_mode_blank" strategy="unknown">- name: Implement Blank Screensaver
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: picture-uri
    value: string ''
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_mode_blank
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(b)
    - CJIS-5.5.5

- name: Prevent user modification of GNOME picture-uri
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/picture-uri
    line: /org/gnome/desktop/screensaver/picture-uri
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_mode_blank
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(b)
    - CJIS-5.5.5
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_permissions_etc_gshadow" strategy="configure">- name: Test for existence /etc/gshadow
  stat:
    path: /etc/gshadow
  register: file_exists
  tags:
    - file_permissions_etc_gshadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6

- name: Ensure permission 0000 on /etc/gshadow
  file:
    path: /etc/gshadow
    mode: '0000'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_permissions_etc_gshadow
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-6
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_dac_modification_fsetxattr" strategy="restrict">- name: Set architecture for audit fsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fsetxattr
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules
    as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
    - find_fsetxattr.matched is defined and find_fsetxattr.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid&gt;=1000 -F auid!=unset -F
      key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_dac_modification_fsetxattr
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.5.5
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_default_accept_redirects" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_default_accept_redirects_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_default_accept_redirects_value: !!str <sub idref="sysctl_net_ipv4_conf_default_accept_redirects_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_default_accept_redirects
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7
    - CJIS-5.10.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_autofs_disabled" strategy="disable">- name: Unit Service Exists - autofs.service
  command: systemctl list-unit-files autofs.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_autofs_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.6
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3

- name: Disable service autofs
  systemd:
    name: autofs.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"autofs.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_autofs_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.6
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3

- name: Unit Socket Exists - autofs.socket
  command: systemctl list-unit-files autofs.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_autofs_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.6
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3

- name: Disable socket autofs
  systemd:
    name: autofs.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_autofs_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.6
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_screensaver_idle_activation_enabled" strategy="unknown">- name: Enable GNOME3 Screensaver Idle Activation
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/desktop/screensaver
    option: idle_activation_enabled
    value: 'true'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_idle_activation_enabled
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
    - CJIS-5.5.5

- name: Prevent user modification of GNOME idle_activation_enabled
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/idle-activation-enabled
    line: /org/gnome/desktop/screensaver/idle-activation-enabled
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_idle_activation_enabled
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.1.8
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
    - CJIS-5.5.5
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_name_format" strategy="restrict">- name: Set hostname as computer node name in audit logs
  block:

    - name: Deduplicate values from /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: false
        regexp: (?i)^\s*name_format\s*=\s*
        state: absent

    - name: Insert correct line to /etc/audit/auditd.conf
      lineinfile:
        path: /etc/audit/auditd.conf
        create: true
        line: name_format = hostname
        state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_name_format
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_permissions_etc_group" strategy="configure">- name: Test for existence /etc/group
  stat:
    path: /etc/group
  register: file_exists
  tags:
    - file_permissions_etc_group
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2

- name: Ensure permission 0644 on /etc/group
  file:
    path: /etc/group
    mode: '0644'
  when: file_exists.stat is defined and file_exists.stat.exists
  tags:
    - file_permissions_etc_group
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-8.7.c
    - NIST-800-53-AC-6
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_screensaver_user_locks" strategy="unknown">- name: Prevent user modification of GNOME lock-delay
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/desktop/screensaver/lock-delay
    line: /org/gnome/desktop/screensaver/lock-delay
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_screensaver_user_locks
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.10
    - NIST-800-53-AC-11(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_pam_difok" strategy="restrict">- name: XCCDF Value var_password_pam_difok # promote to variable
  set_fact:
    var_password_pam_difok: !!str <sub idref="var_password_pam_difok" />
  tags:
    - always

- name: Ensure PAM variable difok is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*difok
    line: difok = {{ var_password_pam_difok }}
  tags:
    - accounts_password_pam_difok
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-IA-5(b)
    - NIST-800-53-IA-5(c)
    - NIST-800-53-IA-5(1)(b)
    - CJIS-5.6.2.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="accounts_password_minlen_login_defs" strategy="restrict">- name: XCCDF Value var_accounts_password_minlen_login_defs # promote to variable
  set_fact:
    var_accounts_password_minlen_login_defs: !!str <sub idref="var_accounts_password_minlen_login_defs" />
  tags:
    - always

- name: Set Password Minimum Length in login.defs
  lineinfile:
    dest: /etc/login.defs
    regexp: ^PASS_MIN_LEN *[0-9]*
    state: present
    line: PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}
    create: true
  tags:
    - accounts_password_minlen_login_defs
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.5.7
    - NIST-800-53-IA-5(f)
    - NIST-800-53-IA-5(1)(a)
    - CJIS-5.6.2.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_retention_flush" strategy="restrict">- name: XCCDF Value var_auditd_flush # promote to variable
  set_fact:
    var_auditd_flush: !!str <sub idref="var_auditd_flush" />
  tags:
    - always

- name: Configure auditd Flush Priority
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*flush\s*=\s*.*$
    line: flush = {{ var_auditd_flush }}
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_retention_flush
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.3.1
    - NIST-800-53-AU-9
    - NIST-800-53-AU-12(1)
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_ypserv_removed" strategy="disable">- name: Ensure ypserv is removed
  package:
    name: ypserv
    state: absent
  tags:
    - package_ypserv_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7(a)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_at" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/at.*$
    patterns: '*.rules'
  register: find_at
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_at.matched is defined and find_at.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_at.files | map(attribute=''path'') | list | first }}'
  when:
    - find_at.matched is defined and find_at.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the at rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/at -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the at rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/at -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_at
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="false" rule="dconf_gnome_login_retries" strategy="unknown">- name: Enable the GNOME3 Login Number of Failures
  ini_file:
    dest: /etc/dconf/db/gdm.d/00-security-settings
    section: org/gnome/login-screen
    option: allowed-failures
    value: '3'
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_login_retries
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.8

- name: Prevent user modification of GNOME3 Login Number of Failures
  lineinfile:
    path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/login-screen/allowed-failures
    line: /org/gnome/login-screen/allowed-failures
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - dconf_gnome_login_retries
    - medium_severity
    - unknown_strategy
    - low_complexity
    - medium_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.8
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_xinetd_disabled" strategy="disable">- name: Unit Service Exists - xinetd.service
  command: systemctl list-unit-files xinetd.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_xinetd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable service xinetd
  systemd:
    name: xinetd.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"xinetd.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_xinetd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Unit Socket Exists - xinetd.socket
  command: systemctl list-unit-files xinetd.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_xinetd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable socket xinetd
  systemd:
    name: xinetd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"xinetd.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_xinetd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.7
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_set_loglevel_info" strategy="restrict">- name: Set LogLevel to INFO
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*LogLevel\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: LogLevel INFO
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_set_loglevel_info
    - low_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_crontab" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/crontab.*$
    patterns: '*.rules'
  register: find_crontab
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_crontab
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_crontab.matched is defined and find_crontab.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_crontab
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_crontab.files | map(attribute=''path'') | list | first }}'
  when:
    - find_crontab.matched is defined and find_crontab.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_crontab
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the crontab rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_crontab
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the crontab rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_crontab
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="true" rule="audit_rules_file_deletion_events_unlink" strategy="restrict">- name: Set architecture for audit unlink tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlink
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as
    the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/delete.rules
  when:
    - find_unlink.matched is defined and find_unlink.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
  when:
    - find_unlink.matched is defined and find_unlink.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the unlink rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlink -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the unlink rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlink -F auid&gt;=1000 -F auid!=unset -F key=delete
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlink -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)

- name: Inserts/replaces the unlink rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlink -F auid&gt;=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
    - audit_arch is defined and audit_arch == 'b64'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_file_deletion_events_unlink
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - reboot_required
    - PCI-DSS-Req-10.2.7
    - NIST-800-171-3.1.7
    - NIST-800-53-AC-17(7)
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-2(a)
    - NIST-800-53-AU-2(c)
    - NIST-800-53-AU-2(d)
    - NIST-800-53-AU-12(a)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-IR-5
    - NIST-800-53-MA-4(1)(a)
</fix><fix complexity="low" disruption="high" reboot="false" rule="mount_option_dev_shm_noexec" strategy="configure">- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc &gt; 1
  changed_when: false
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_noexec
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
    - '{{ device_name.stdout_lines[0].split() | list | lower }}'
    - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
    - device_name.stdout is defined and device_name.stdout_lines is defined
    - (device_name.stdout | length &gt; 0)
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_noexec
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2

- name: Ensure permission noexec are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
    - device_name.stdout is defined
    - (device_name.stdout | length &gt; 0)
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - mount_option_dev_shm_noexec
    - medium_severity
    - configure_strategy
    - low_complexity
    - high_disruption
    - no_reboot_needed
    - NIST-800-53-CM-7
    - NIST-800-53-MP-2
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_disable_rhosts" strategy="restrict">- name: Disable SSH Support for .rhosts Files
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*IgnoreRhosts\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: IgnoreRhosts yes
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_disable_rhosts
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-3
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-CM-6(a)
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="false" rule="disable_ctrlaltdel_burstaction" strategy="disable">- name: Disable Ctrl-Alt-Del Burst Action
  lineinfile:
    dest: /etc/systemd/system.conf
    state: present
    regexp: ^CtrlAltDelBurstAction
    line: CtrlAltDelBurstAction=none
    create: true
  tags:
    - disable_ctrlaltdel_burstaction
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_abrtd_disabled" strategy="disable">- name: Unit Service Exists - abrtd.service
  command: systemctl list-unit-files abrtd.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_abrtd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable service abrtd
  systemd:
    name: abrtd.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"abrtd.service" in service_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_abrtd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Unit Socket Exists - abrtd.socket
  command: systemctl list-unit-files abrtd.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_abrtd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7

- name: Disable socket abrtd
  systemd:
    name: abrtd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
    - '"abrtd.socket" in socket_file_exists.stdout_lines[1]'
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_abrtd_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="service_pcscd_enabled" strategy="enable">- name: Enable service pcscd
  block:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable service pcscd
      service:
        name: pcscd
        enabled: 'yes'
        state: started
      when:
        - '"pcsc-lite" in ansible_facts.packages'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - service_pcscd_enabled
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="sshd_use_approved_ciphers" strategy="restrict">- name: Use Only FIPS 140-2 Validated Ciphers
  block:

    - name: Deduplicate values from /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: false
        regexp: (?i)^\s*Ciphers\s+
        state: absent

    - name: Insert correct line to /etc/ssh/sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        create: true
        line: Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
        state: present
        insertbefore: ^[#\s]*Match
        validate: /usr/sbin/sshd -t -f %s
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sshd_use_approved_ciphers
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.11
    - NIST-800-171-3.13.8
    - NIST-800-53-AC-3
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-17(b)
    - NIST-800-53-AC-17(2)
    - NIST-800-53-AU-10(5)
    - NIST-800-53-CM-6(b)
    - NIST-800-53-IA-5(1)(c)
    - NIST-800-53-IA-7
    - NIST-800-53-SI-7
    - NIST-800-53-SC-13
    - CJIS-5.5.6
</fix><fix complexity="low" disruption="low" reboot="false" rule="package_telnet-server_removed" strategy="disable">- name: Ensure telnet-server is removed
  package:
    name: telnet-server
    state: absent
  tags:
    - package_telnet-server_removed
    - high_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-53-AC-17(8)
    - NIST-800-53-CM-7(a)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="kernel_module_usb-storage_disabled" strategy="disable">- name: Ensure kernel module 'usb-storage' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/usb-storage.conf
    regexp: usb-storage
    line: install usb-storage /bin/true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - kernel_module_usb-storage_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.21
    - NIST-800-53-AC-19(a)
    - NIST-800-53-AC-19(d)
    - NIST-800-53-AC-19(e)
    - NIST-800-53-IA-3
    - NIST-800-53-MP-7
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_owner_grub2_cfg" strategy="configure">- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_owner_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-7.1
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - CJIS-5.5.2.2

- name: Ensure owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    owner: '0'
  when:
    - file_exists.stat is defined and file_exists.stat.exists
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_owner_grub2_cfg
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-7.1
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(7)
    - CJIS-5.5.2.2
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_fs_protected_hardlinks" strategy="disable">- name: Ensure sysctl fs.protected_hardlinks is set to 1
  sysctl:
    name: fs.protected_hardlinks
    value: '1'
    state: present
    reload: true
  tags:
    - sysctl_fs_protected_hardlinks
    - unknown_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-53-SI-11
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_all_log_martians" strategy="disable">- name: XCCDF Value sysctl_net_ipv4_conf_all_log_martians_value # promote to variable
  set_fact:
    sysctl_net_ipv4_conf_all_log_martians_value: !!str <sub idref="sysctl_net_ipv4_conf_all_log_martians_value" />
  tags:
    - always

- name: Ensure sysctl net.ipv4.conf.all.log_martians is set
  sysctl:
    name: net.ipv4.conf.all.log_martians
    value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_all_log_martians
    - unknown_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-17(7)
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5(3)
</fix><fix complexity="low" disruption="low" reboot="false" rule="clean_components_post_updating" strategy="restrict">- name: Ensure YUM Removes Previous Package Versions
  lineinfile:
    dest: /etc/yum.conf
    regexp: ^#?clean_requirements_on_remove
    line: clean_requirements_on_remove=1
    insertafter: \[main\]
    create: true
  tags:
    - clean_components_post_updating
    - low_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.4.8
    - NIST-800-53-SI-2(6)
    - NIST-800-53-CM-11
</fix><fix complexity="low" disruption="low" reboot="false" rule="sebool_selinuxuser_execheap" strategy="enable">- name: XCCDF Value var_selinuxuser_execheap # promote to variable
  set_fact:
    var_selinuxuser_execheap: !!str <sub idref="var_selinuxuser_execheap" />
  tags:
    - always

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sebool_selinuxuser_execheap
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Set SELinux boolean selinuxuser_execheap accordingly
  seboolean:
    name: selinuxuser_execheap
    state: '{{ var_selinuxuser_execheap }}'
    persistent: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sebool_selinuxuser_execheap
    - medium_severity
    - enable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
</fix><fix complexity="low" disruption="low" reboot="false" rule="file_permissions_sshd_private_key" strategy="configure">- name: Find /etc/ssh/ file(s)
  find:
    paths: /etc/ssh/
    patterns: ^.*_key$
    use_regex: true
  register: files_found
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_permissions_sshd_private_key
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.10
    - NIST-800-53-AC-6
    - NIST-800-53-AC-17

- name: Set permissions for /etc/ssh/ file(s)
  file:
    path: '{{ item.path }}'
    mode: '0640'
  with_items:
    - '{{ files_found.files }}'
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - file_permissions_sshd_private_key
    - medium_severity
    - configure_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.13
    - NIST-800-171-3.13.10
    - NIST-800-53-AC-6
    - NIST-800-53-AC-17
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_newgrp" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgrp.*$
    patterns: '*.rules'
  register: find_newgrp
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgrp
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_newgrp.matched is defined and find_newgrp.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgrp
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_newgrp.files | map(attribute=''path'') | list | first }}'
  when:
    - find_newgrp.matched is defined and find_newgrp.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgrp
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the newgrp rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgrp
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the newgrp rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_newgrp
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="medium" reboot="true" rule="sysctl_net_ipv4_conf_all_send_redirects" strategy="disable">- name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: '0'
    state: present
    reload: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - sysctl_net_ipv4_conf_all_send_redirects
    - medium_severity
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - NIST-800-171-3.1.20
    - NIST-800-53-AC-4
    - NIST-800-53-CM-7
    - NIST-800-53-SC-5(1)
    - CJIS-5.10.1.1
</fix><fix complexity="low" disruption="low" reboot="false" rule="audit_rules_privileged_commands_chage" strategy="restrict">- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chage.*$
    patterns: '*.rules'
  register: find_chage
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
      - /etc/audit/rules.d/privileged.rules
  when:
    - find_chage.matched is defined and find_chage.matched == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
      - '{{ find_chage.files | map(attribute=''path'') | list | first }}'
  when:
    - find_chage.matched is defined and find_chage.matched &gt; 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the chage rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)

- name: Inserts/replaces the chage rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid&gt;=1000 -F auid!=unset
      -F key=privileged
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - audit_rules_privileged_commands_chage
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - NIST-800-171-3.1.7
    - NIST-800-53-AU-3(1)
    - NIST-800-53-AU-12(c)
    - NIST-800-53-AC-6(9)
</fix><fix complexity="low" disruption="low" reboot="false" rule="auditd_data_retention_max_log_file_action" strategy="restrict">- name: XCCDF Value var_auditd_max_log_file_action # promote to variable
  set_fact:
    var_auditd_max_log_file_action: !!str <sub idref="var_auditd_max_log_file_action" />
  tags:
    - always

- name: Configure auditd max_log_file_action Upon Reaching Maximum Log Size
  lineinfile:
    dest: /etc/audit/auditd.conf
    line: max_log_file_action = {{ var_auditd_max_log_file_action }}
    regexp: ^\s*max_log_file_action\s*=\s*.*$
    state: present
    create: true
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - auditd_data_retention_max_log_file_action
    - medium_severity
    - restrict_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - PCI-DSS-Req-10.7
    - NIST-800-53-AU-1(b)
    - NIST-800-53-AU-4
    - NIST-800-53-AU-11
    - NIST-800-53-IR-5
    - CJIS-5.4.1.1
</fix></fix-group></fix-content>