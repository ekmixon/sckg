# platform = multi_platform_all
# complexity = low
# reboot = false
# disruption = low
# strategy = disable
- name: Unit Service Exists - cockpit.service
  command: systemctl list-unit-files cockpit.service
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  tags:
    - service_cockpit_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Disable service cockpit
  systemd:
    name: cockpit.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when: '"cockpit.service" in service_file_exists.stdout_lines[1]'
  tags:
    - service_cockpit_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Unit Socket Exists - cockpit.socket
  command: systemctl list-unit-files cockpit.socket
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  tags:
    - service_cockpit_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed

- name: Disable socket cockpit
  systemd:
    name: cockpit.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when: '"cockpit.socket" in socket_file_exists.stdout_lines[1]'
  tags:
    - service_cockpit_disabled
    - medium_severity
    - disable_strategy
    - low_complexity
    - low_disruption
    - no_reboot_needed
