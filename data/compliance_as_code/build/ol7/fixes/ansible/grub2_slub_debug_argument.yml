# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv
# complexity = medium
# reboot = true
# disruption = low
# strategy = restrict
- name: check slub_debug argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*slub_debug=' /etc/default/grub
  failed_when: false
  register: argcheck
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_slub_debug_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: replace existing slub_debug argument
  replace:
    path: /etc/default/grub
    regexp: slub_debug=.
    replace: slub_debug=P
  when:
    - argcheck.rc == 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_slub_debug_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: add slub_debug argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 slub_debug=P"
  when:
    - argcheck.rc != 0
    - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_slub_debug_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="slub_debug=P"
  when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  tags:
    - grub2_slub_debug_argument
    - medium_severity
    - restrict_strategy
    - medium_complexity
    - low_disruption
    - reboot_required
