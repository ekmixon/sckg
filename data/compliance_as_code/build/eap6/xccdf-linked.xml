<ns0:Benchmark xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:ns0="http://checklists.nist.gov/xccdf/1.1" id="Jboss-EAP-6" resolved="1" style="SCAP_1.1" xml:lang="en-US">
  <ns0:status date="2019-11-28">draft</ns0:status>
  <ns0:title xml:lang="en-US">Guide to the Secure Configuration of JBoss EAP 6</ns0:title>
  <ns0:description xml:lang="en-US">This guide presents a catalog of security-relevant
configuration settings for JBoss EAP 6. It is a rendering of
content structured in the eXtensible Configuration Checklist Description Format (XCCDF)
in order to support security automation.  The SCAP content is
is available in the <html:code>scap-security-guide</html:code> package which is developed at

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>.
<html:br /><html:br />
Providing system administrators with such guidance informs them how to securely
configure systems under their control in a variety of network roles. Policy
makers and baseline creators can use this catalog of settings, with its
associated references to higher-level security control catalogs, in order to
assist them in security baseline creation. This guide is a <html:em>catalog, not a
checklist</html:em>, and satisfaction of every item is not likely to be possible or
sensible in many operational scenarios. However, the XCCDF format enables
granular selection and adjustment of settings, and their association with OVAL
and OCIL content provides an automated checking capability. Transformations of
this document, and its associated automated checking content, are capable of
providing baselines that meet a diverse set of policy objectives. Some example
XCCDF <html:em>Profiles</html:em>, which are selections of items that form checklists and
can be used as baselines, are available with this guide. They can be
processed, in an automated fashion, with tools that support the Security
Content Automation Protocol (SCAP). The DISA STIG for JBoss EAP 6,
which provides required settings for US Department of Defense systems, is
one example of a baseline created from this guidance.
</ns0:description>
  <ns0:notice id="terms_of_use" xml:lang="en-US">Do not attempt to implement any of the settings in
this guide without first testing them in a non-operational environment. The
creators of this guidance assume no responsibility whatsoever for its use by
other parties, and makes no guarantees, expressed or implied, about its
quality, reliability, or any other characteristic.
</ns0:notice>
  <ns0:front-matter xml:lang="en-US">The SCAP Security Guide Project<html:br />

    <html:a href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>
</ns0:front-matter>
  <ns0:rear-matter xml:lang="en-US">Red Hat and Red Hat Enterprise Linux are either registered
trademarks or trademarks of Red Hat, Inc. in the United States and other
countries. All other names are registered trademarks or trademarks of their
respective companies.
</ns0:rear-matter>
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.0.0" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.0.1" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.1.0" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.1.1" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.2.0" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.2.1" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.2.2" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.2.3" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.2.4" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.3.0" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.3.1" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.3.2" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.3.3" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.0" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.1" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.2" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.3" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.4" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.5" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.6" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.7" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.8" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.9" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.10" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.11" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.12" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.13" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.14" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.15" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.16" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.17" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.18" />
  <ns0:platform idref="cpe:/a:redhat:jboss_enterprise_application_platform:6.4.19" />
  <ns0:version update="https://github.com/OpenSCAP/scap-security-guide/releases/latest">0.1.47</ns0:version>
  <ns0:metadata>
    <dc:publisher>SCAP Security Guide Project</dc:publisher>
    <dc:creator>SCAP Security Guide Project</dc:creator>
    <dc:contributor>Frank J Cameron (CAM1244) &lt;cameron@ctc.com&gt;</dc:contributor>
    <dc:contributor>0x66656c6978 &lt;0x66656c6978@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Gabe Alford &lt;redhatrises@gmail.com&gt;</dc:contributor>
    <dc:contributor>Firas AlShafei &lt;firas.alshafei@us.abb.com&gt;</dc:contributor>
    <dc:contributor>Christopher Anderson &lt;cba@fedoraproject.org&gt;</dc:contributor>
    <dc:contributor>angystardust &lt;angystardust@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Chuck Atkins &lt;chuck.atkins@kitware.com&gt;</dc:contributor>
    <dc:contributor>Ryan Ballanger &lt;root@rballang-admin-2.fastenal.com&gt;</dc:contributor>
    <dc:contributor>Alex Baranowski &lt;alex@euro-linux.com&gt;</dc:contributor>
    <dc:contributor>Molly Jo Bault &lt;Molly.Jo.Bault@ballardtech.com&gt;</dc:contributor>
    <dc:contributor>Gabriel Becker &lt;ggasparb@redhat.com&gt;</dc:contributor>
    <dc:contributor>Alexander Bergmann &lt;abergmann@suse.com&gt;</dc:contributor>
    <dc:contributor>Jose Luis BG &lt;bgjoseluis@gmail.com&gt;</dc:contributor>
    <dc:contributor>Joseph Bisch &lt;joseph.bisch@gmail.com&gt;</dc:contributor>
    <dc:contributor>Jeffrey Blank &lt;blank@eclipse.ncsc.mil&gt;</dc:contributor>
    <dc:contributor>Olivier Bonhomme &lt;ptitoliv@ptitoliv.net&gt;</dc:contributor>
    <dc:contributor>Ted Brunell &lt;tbrunell@redhat.com&gt;</dc:contributor>
    <dc:contributor>Blake Burkhart &lt;blake.burkhart@us.af.mil&gt;</dc:contributor>
    <dc:contributor>Patrick Callahan &lt;pmc@patrickcallahan.com&gt;</dc:contributor>
    <dc:contributor>Nick Carboni &lt;ncarboni@redhat.com&gt;</dc:contributor>
    <dc:contributor>James Cassell &lt;james.cassell@ll.mit.edu&gt;</dc:contributor>
    <dc:contributor>Frank Caviggia &lt;fcaviggi@ra.iad.redhat.com&gt;</dc:contributor>
    <dc:contributor>Eric Christensen &lt;echriste@redhat.com&gt;</dc:contributor>
    <dc:contributor>Caleb Cooper &lt;coopercd@ornl.gov&gt;</dc:contributor>
    <dc:contributor>Deric Crago &lt;deric.crago@gmail.com&gt;</dc:contributor>
    <dc:contributor>Maura Dailey &lt;maura@eclipse.ncsc.mil&gt;</dc:contributor>
    <dc:contributor>Klaas Demter &lt;demter@atix.de&gt;</dc:contributor>
    <dc:contributor>dhanushkar-wso2 &lt;dhanushkar@wso2.com&gt;</dc:contributor>
    <dc:contributor>Andrew DiPrinzio &lt;andrew.diprinzio@jhuapl.edu&gt;</dc:contributor>
    <dc:contributor>Jean-Baptiste Donnette &lt;jean-baptiste.donnette@epita.fr&gt;</dc:contributor>
    <dc:contributor>drax &lt;applezip@gmail.com&gt;</dc:contributor>
    <dc:contributor>Greg Elin &lt;gregelin@gitmachines.com&gt;</dc:contributor>
    <dc:contributor>Leah Fisher &lt;lfisher047@gmail.com&gt;</dc:contributor>
    <dc:contributor>Alijohn Ghassemlouei &lt;alijohn.ghassemlouei@sapns2.com&gt;</dc:contributor>
    <dc:contributor>Andrew Gilmore &lt;agilmore2@gmail.com&gt;</dc:contributor>
    <dc:contributor>Joshua Glemza &lt;jglemza@nasa.gov&gt;</dc:contributor>
    <dc:contributor>Loren Gordon &lt;lorengordon@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Patrik Greco &lt;sikevux@sikevux.se&gt;</dc:contributor>
    <dc:contributor>Steve Grubb &lt;sgrubb@redhat.com&gt;</dc:contributor>
    <dc:contributor>Marek Haicman &lt;mhaicman@redhat.com&gt;</dc:contributor>
    <dc:contributor>Rebekah Hayes &lt;rhayes@corp.rivierautilities.com&gt;</dc:contributor>
    <dc:contributor>Trey Henefield &lt;thenefield@gmail.com&gt;</dc:contributor>
    <dc:contributor>Henning Henkel &lt;henning.henkel@helvetia.ch&gt;</dc:contributor>
    <dc:contributor>hex2a &lt;hex2a@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>John Hooks &lt;jhooks@starscream.pa.jhbcomputers.com&gt;</dc:contributor>
    <dc:contributor>De Huo &lt;De.Huo@windriver.com&gt;</dc:contributor>
    <dc:contributor>Robin Price II &lt;robin@redhat.com&gt;</dc:contributor>
    <dc:contributor>Jiri Jaburek &lt;jjaburek@redhat.com&gt;</dc:contributor>
    <dc:contributor>Keith Jackson &lt;keithkjackson@gmail.com&gt;</dc:contributor>
    <dc:contributor>Jeremiah Jahn &lt;jeremiah@goodinassociates.com&gt;</dc:contributor>
    <dc:contributor>Stephan Joerrens &lt;Stephan.Joerrens@fiduciagad.de&gt;</dc:contributor>
    <dc:contributor>Jono &lt;jono@ubuntu-18.localdomain&gt;</dc:contributor>
    <dc:contributor>Kai Kang &lt;kai.kang@windriver.com&gt;</dc:contributor>
    <dc:contributor>Charles Kernstock &lt;charles.kernstock@ultra-ats.com&gt;</dc:contributor>
    <dc:contributor>Yuli Khodorkovskiy &lt;ykhodorkovskiy@tresys.com&gt;</dc:contributor>
    <dc:contributor>Lee Kinser &lt;lee.kinser@gmail.com&gt;</dc:contributor>
    <dc:contributor>Peter 'Pessoft' Kol&#237;nek &lt;github@pessoft.com&gt;</dc:contributor>
    <dc:contributor>Luke Kordell &lt;luke.t.kordell@lmco.com&gt;</dc:contributor>
    <dc:contributor>Malte Kraus &lt;malte.kraus@suse.com&gt;</dc:contributor>
    <dc:contributor>kspargur &lt;kspargur@kspargur.csb&gt;</dc:contributor>
    <dc:contributor>Amit Kumar &lt;amitkuma@redhat.com&gt;</dc:contributor>
    <dc:contributor>Fen Labalme &lt;fen@civicactions.com&gt;</dc:contributor>
    <dc:contributor>Ian Lee &lt;lee1001@llnl.gov&gt;</dc:contributor>
    <dc:contributor>Jarrett Lee &lt;jarrettl@umd.edu&gt;</dc:contributor>
    <dc:contributor>Jan Lieskovsky &lt;jlieskov@redhat.com&gt;</dc:contributor>
    <dc:contributor>&#352;imon Luka&#353;&#237;k &lt;slukasik@redhat.com&gt;</dc:contributor>
    <dc:contributor>Milan Lysonek &lt;mlysonek@redhat.com&gt;</dc:contributor>
    <dc:contributor>Fredrik Lys&#233;n &lt;fredrik@pipemore.se&gt;</dc:contributor>
    <dc:contributor>Matus Marhefka &lt;mmarhefk@redhat.com&gt;</dc:contributor>
    <dc:contributor>Jamie Lorwey Martin &lt;jlmartin@redhat.com&gt;</dc:contributor>
    <dc:contributor>Michael McConachie &lt;michael@redhat.com&gt;</dc:contributor>
    <dc:contributor>Khary Mendez &lt;kharyam@gmail.com&gt;</dc:contributor>
    <dc:contributor>Rodney Mercer &lt;rmercer@harris.com&gt;</dc:contributor>
    <dc:contributor>Matt Micene &lt;nzwulfin@gmail.com&gt;</dc:contributor>
    <dc:contributor>Brian Millett &lt;bmillett@gmail.com&gt;</dc:contributor>
    <dc:contributor>Mixer9 &lt;35545791+Mixer9@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>mmosel &lt;mmosel@kde.example.com&gt;</dc:contributor>
    <dc:contributor>Zbynek Moravec &lt;zmoravec@redhat.com&gt;</dc:contributor>
    <dc:contributor>Kazuo Moriwaka &lt;moriwaka@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Michael Moseley &lt;michael@eclipse.ncsc.mil&gt;</dc:contributor>
    <dc:contributor>Joe Nall &lt;joe@nall.com&gt;</dc:contributor>
    <dc:contributor>Neiloy &lt;neiloy@redhat.com&gt;</dc:contributor>
    <dc:contributor>Axel Nennker &lt;axel@nennker.de&gt;</dc:contributor>
    <dc:contributor>Michele Newman &lt;mnewman@redhat.com&gt;</dc:contributor>
    <dc:contributor>Sean O'Keeffe &lt;seanokeeffe797@gmail.com&gt;</dc:contributor>
    <dc:contributor>Ilya Okomin &lt;ilya.okomin@oracle.com&gt;</dc:contributor>
    <dc:contributor>Kaustubh Padegaonkar &lt;theTuxRacer@gmail.com&gt;</dc:contributor>
    <dc:contributor>Michael Palmiotto &lt;mpalmiotto@tresys.com&gt;</dc:contributor>
    <dc:contributor>Max R.D. Parmer &lt;maxp@trystero.is&gt;</dc:contributor>
    <dc:contributor>Jan Pazdziora &lt;jpazdziora@redhat.com&gt;</dc:contributor>
    <dc:contributor>pcactr &lt;paul.c.arnold4.ctr@mail.mil&gt;</dc:contributor>
    <dc:contributor>Kenneth Peeples &lt;kennethwpeeples@gmail.com&gt;</dc:contributor>
    <dc:contributor>Nathan Peters &lt;Nathaniel.Peters@ca.com&gt;</dc:contributor>
    <dc:contributor>Frank Lin PIAT &lt;fpiat@klabs.be&gt;</dc:contributor>
    <dc:contributor>Stefan Pietsch &lt;mail.ipv4v6+gh@gmail.com&gt;</dc:contributor>
    <dc:contributor>Vojtech Polasek &lt;vpolasek@redhat.com&gt;</dc:contributor>
    <dc:contributor>Martin Preisler &lt;mpreisle@redhat.com&gt;</dc:contributor>
    <dc:contributor>Wesley Ceraso Prudencio &lt;wcerasop@redhat.com&gt;</dc:contributor>
    <dc:contributor>Raphael Sanchez Prudencio &lt;rsprudencio@redhat.com&gt;</dc:contributor>
    <dc:contributor>T.O. Radzy Radzykewycz &lt;radzy@windriver.com&gt;</dc:contributor>
    <dc:contributor>Kenyon Ralph &lt;kenyon@kenyonralph.com&gt;</dc:contributor>
    <dc:contributor>Rick Renshaw &lt;Richard_Renshaw@xtoenergy.com&gt;</dc:contributor>
    <dc:contributor>Chris Reynolds &lt;c.reynolds82@gmail.com&gt;</dc:contributor>
    <dc:contributor>rhayes &lt;rhayes@rivierautilities.com&gt;</dc:contributor>
    <dc:contributor>Pat Riehecky &lt;riehecky@fnal.gov&gt;</dc:contributor>
    <dc:contributor>rlucente-se-jboss &lt;rlucente@redhat.com&gt;</dc:contributor>
    <dc:contributor>Joshua Roys &lt;roysjosh@gmail.com&gt;</dc:contributor>
    <dc:contributor>rrenshaw &lt;bofh69@yahoo.com&gt;</dc:contributor>
    <dc:contributor>Chris Ruffalo &lt;chris.ruffalo@gmail.com&gt;</dc:contributor>
    <dc:contributor>Ray Shaw (Cont ARL/CISD) rvshaw &lt;rvshaw@esme.arl.army.mil&gt;</dc:contributor>
    <dc:contributor>Willy Santos &lt;wsantos@redhat.com&gt;</dc:contributor>
    <dc:contributor>Gautam Satish &lt;gautams@hpe.com&gt;</dc:contributor>
    <dc:contributor>Watson Sato &lt;wsato@redhat.com&gt;</dc:contributor>
    <dc:contributor>Satoru SATOH &lt;satoru.satoh@gmail.com&gt;</dc:contributor>
    <dc:contributor>Alexander Scheel &lt;ascheel@redhat.com&gt;</dc:contributor>
    <dc:contributor>Spencer Shimko &lt;sshimko@tresys.com&gt;</dc:contributor>
    <dc:contributor>Thomas Sj&#246;gren &lt;konstruktoid@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Francisco Slavin &lt;fslavin@tresys.com&gt;</dc:contributor>
    <dc:contributor>David Smith &lt;dsmith@eclipse.ncsc.mil&gt;</dc:contributor>
    <dc:contributor>Kevin Spargur &lt;kspargur@redhat.com&gt;</dc:contributor>
    <dc:contributor>Kenneth Stailey &lt;kstailey.lists@gmail.com&gt;</dc:contributor>
    <dc:contributor>Leland Steinke &lt;leland.j.steinke.ctr@mail.mil&gt;</dc:contributor>
    <dc:contributor>Justin Stephenson &lt;jstephen@redhat.com&gt;</dc:contributor>
    <dc:contributor>Brian Stinson &lt;brian@bstinson.com&gt;</dc:contributor>
    <dc:contributor>Philippe Thierry &lt;phil@reseau-libre.net&gt;</dc:contributor>
    <dc:contributor>Paul Tittle &lt;ptittle@cmf.nrl.navy.mil&gt;</dc:contributor>
    <dc:contributor>tomas.hudik &lt;tomas.hudik@embedit.cz&gt;</dc:contributor>
    <dc:contributor>Jeb Trayer &lt;jeb.d.trayer@uscg.mil&gt;</dc:contributor>
    <dc:contributor>Mat&#283;j T&#253;&#269; &lt;matyc@redhat.com&gt;</dc:contributor>
    <dc:contributor>VadimDor &lt;29509093+VadimDor@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Shawn Wells &lt;shawn@redhat.com&gt;</dc:contributor>
    <dc:contributor>Daniel E. White &lt;linuxdan@users.noreply.github.com&gt;</dc:contributor>
    <dc:contributor>Roy Williams &lt;roywilli@roywilli.redhat.com&gt;</dc:contributor>
    <dc:contributor>Rob Wilmoth &lt;rwilmoth@redhat.com&gt;</dc:contributor>
    <dc:contributor>Lucas Yamanishi &lt;lucas.yamanishi@onyxpoint.com&gt;</dc:contributor>
    <dc:contributor>Xirui Yang &lt;xirui.yang@oracle.com&gt;</dc:contributor>
    <dc:contributor>Kevin Zimmerman &lt;kevin.zimmerman@kitware.com&gt;</dc:contributor>
    <dc:contributor>Jan &#268;ern&#253; &lt;jcerny@redhat.com&gt;</dc:contributor>
    <dc:contributor>Michal &#352;ruba&#345; &lt;msrubar@redhat.com&gt;</dc:contributor>
    <dc:source>https://github.com/OpenSCAP/scap-security-guide/releases/latest</dc:source>
  </ns0:metadata>
  <ns0:model system="urn:xccdf:scoring:default" />
  <ns0:Profile id="stig">
    <ns0:title override="true" xml:lang="en-US">STIG for JBoss Enterprise Application Platform 6</ns0:title>
    <ns0:description override="true" xml:lang="en-US">This is a *draft* profile for STIG. This profile is being developed under the DoD consensus model to become a STIG in coordination with DISA FSO.</ns0:description>
    <ns0:select idref="jboss_eap_configure_secure_management_access" selected="true" />
    <ns0:select idref="jboss_eap_configure_https" selected="true" />
    <ns0:select idref="jboss_eap_configure_host_access_restrictions" selected="true" />
    <ns0:select idref="jboss_eap_configure_security_manager" selected="true" />
    <ns0:select idref="jboss_eap_enable_rbac" selected="true" />
    <ns0:select idref="jboss_eap_configure_user_roles" selected="true" />
    <ns0:select idref="jboss_eap_configure_application_authentication" selected="true" />
    <ns0:select idref="jboss_eap_configure_management_authentication" selected="true" />
    <ns0:select idref="jboss_eap_configure_security_realm" selected="true" />
    <ns0:select idref="jboss_eap_configure_auditing" selected="true" />
    <ns0:select idref="jboss_eap_configure_auditor_roles" selected="true" />
    <ns0:select idref="jboss_eap_configure_logging_level" selected="true" />
    <ns0:select idref="jboss_eap_configure_log_permissions" selected="true" />
    <ns0:select idref="jboss_eap_configure_offloading_max" selected="true" />
    <ns0:select idref="jboss_eap_configure_user_permissions" selected="true" />
    <ns0:select idref="jboss_eap_restrict_jboss_account" selected="true" />
    <ns0:select idref="jboss_eap_disable_analytics" selected="true" />
    <ns0:select idref="jboss_eap_unprivileged_mode" selected="true" />
    <ns0:select idref="jboss_eap_remove_quickstarts" selected="true" />
    <ns0:select idref="jboss_eap_remove_jmx" selected="true" />
    <ns0:select idref="jboss_eap_disable_replace_welcome_page" selected="true" />
    <ns0:select idref="jboss_eap_remove_unnecessary_apps" selected="true" />
    <ns0:select idref="jboss_eap_configure_ports" selected="true" />
    <ns0:select idref="jboss_eap_configure_ldap" selected="true" />
    <ns0:select idref="jboss_eap_configure_multifactor_authentication" selected="true" />
    <ns0:select idref="jboss_eap_remove_group_accounts" selected="true" />
    <ns0:select idref="jboss_eap_configure_management_network" selected="true" />
    <ns0:select idref="jboss_eap_configure_management_ldap" selected="true" />
    <ns0:select idref="jboss_eap_configure_keystore" selected="true" />
    <ns0:select idref="jboss_eap_encrypt_keystore_passwords" selected="true" />
    <ns0:select idref="jboss_eap_require_password_access" selected="true" />
    <ns0:select idref="jboss_eap_use_secure_ldap_port" selected="true" />
    <ns0:select idref="jboss_eap_secure_keystore_permissions" selected="true" />
    <ns0:select idref="jboss_eap_service_separate_networks" selected="true" />
    <ns0:select idref="jboss_eap_file_permissions" selected="true" />
    <ns0:select idref="jboss_eap_logs_permissions" selected="true" />
    <ns0:select idref="jboss_eap_disable_domain_admin_console" selected="true" />
    <ns0:select idref="jboss_eap_audit_privileged_actions" selected="true" />
    <ns0:select idref="jboss_eap_configure_syslog" selected="true" />
    <ns0:select idref="jboss_eap_disable_automatic_deployment" selected="true" />
    <ns0:select idref="jboss_eap_log_deployments" selected="true" />
    <ns0:select idref="jboss_eap_use_approved_ca_cert" selected="true" />
    <ns0:select idref="jboss_eap_configure_ha_lb" selected="true" />
    <ns0:select idref="jboss_eap_use_tls" selected="true" />
    <ns0:select idref="jboss_eap_use_approved_ciphers" selected="true" />
    <ns0:select idref="jboss_eap_vendor_supported" selected="true" />
    <ns0:select idref="jboss_eap_system_up_to_date" selected="true" />
    <ns0:select idref="jboss_eap_use_dod_approved_certs" selected="true" />
    <ns0:select idref="jboss_eap_roll_over_transfer_logs" selected="true" />
  </ns0:Profile>
  <ns0:Group id="remediation_functions">
    <ns0:title xml:lang="en-US">Remediation functions used by the SCAP Security Guide Project</ns0:title>
    <ns0:description xml:lang="en-US">XCCDF form of the various remediation functions as used by remediation scripts from the SCAP Security Guide Project.</ns0:description>
    <ns0:Value hidden="true" id="function_create_audit_remediation_unsuccessful_file_modification_detailed" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function create_audit_remediation_unsuccessful_file_modification_detailed</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value>function create_audit_remediation_unsuccessful_file_modification_detailed {
	mkdir -p "$(dirname "$1")"
	# The - option to mark a here document limit string (&lt;&lt;-EOF) suppresses leading tabs (but not spaces) in the output.
	cat &lt;&lt;-EOF &gt; "$1"
		## This content is a section of an Audit config snapshot recommended for RHEL8 sytems that target OSPP compliance.
		## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules

		## The purpose of these rules is to meet the requirements for Operating
		## System Protection Profile (OSPP)v4.2. These rules depends on having
		## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.

		## Unsuccessful file creation (open with O_CREAT)
		-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S open -F a1&amp;0100 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create
		-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-create

		## Unsuccessful file modifications (open for write or truncate)
		-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S open -F a1&amp;01003 -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification
		-a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-modification

		## Unsuccessful file access (any other opens) This has to go last.
		-a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
		-a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
		-a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
		-a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid&gt;=1000 -F auid!=unset -F key=unsuccesful-access
	EOF
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_die" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function die</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value># Print a message to stderr and exit the shell
# $1: The message to print.
# $2: The error code (optional, default is 1)
function die {
	local _message="$1" _rc="${2:-1}"
	printf '%s\n' "$_message" &gt;&amp;2
	exit "$_rc"
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_ensure_there_are_servers_in_ntp_compatible_config_file" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function ensure_there_are_servers_in_ntp_compatible_config_file</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value># Function ensures that the ntp/chrony config file contains valid server entries
# $1: Path to the config file
# $2: Comma-separated list of servers
function ensure_there_are_servers_in_ntp_compatible_config_file {
	# If invoked with no arguments, exit. This is an intentional behavior.
	[ $# -gt 1 ] || return 0
	[ $# = 2 ] || die "$0 requires zero or exactly two arguments"
	local _config_file="$1" _servers_list="$2"
	if ! grep -q '#[[:space:]]*server' "$_config_file"; then
		for server in $(echo "$_servers_list" | tr ',' '\n') ; do
			printf '\nserver %s iburst' "$server" &gt;&gt; "$_config_file"
		done
	else
		sed -i 's/#[ \t]*server/server/g' "$_config_file"
	fi
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_fix_audit_syscall_rule" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function fix_audit_syscall_rule</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value># Function to fix syscall audit rule for given system call. It is
# based on example audit syscall rule definitions as outlined in
# /usr/share/doc/audit-2.3.7/stig.rules file provided with the audit
# package. It will combine multiple system calls belonging to the same
# syscall group into one audit rule (rather than to create audit rule per
# different system call) to avoid audit infrastructure performance penalty
# in the case of 'one-audit-rule-definition-per-one-system-call'. See:
#
#   https://www.redhat.com/archives/linux-audit/2014-November/msg00009.html
#
# for further details.
#
# Expects five arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules
# * audit rules' pattern		audit rule skeleton for same syscall
# * syscall group			greatest common string this rule shares
# 					with other rules from the same group
# * architecture			architecture this rule is intended for
# * full form of new rule to add	expected full form of audit rule as to be
# 					added into audit.rules file
#
# Note: The 2-th up to 4-th arguments are used to determine how many existing
# audit rules will be inspected for resemblance with the new audit rule
# (5-th argument) the function is going to add. The rule's similarity check
# is performed to optimize audit.rules definition (merge syscalls of the same
# group into one rule) to avoid the "single-syscall-per-audit-rule" performance
# penalty.
#
# Example call:
#
#	See e.g. 'audit_rules_file_deletion_events.sh' remediation script
#
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
	echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
# 
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

retval=0

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	return 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect+=('/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
	# Extract audit $key from audit rule so we can use it later
	key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)' '|' "$full_rule" : '.*-F[[:space:]]key=\([^[:space:]]\+\)')
	readarray -t matches &lt; &lt;(sed -s -n -e "\;${pattern};!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules)
	if [ $? -ne 0 ]
	then
		retval=1
	fi
	for match in "${matches[@]}"
	do
		files_to_inspect+=("${match}")
	done
	# Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
	if [ ${#files_to_inspect[@]} -eq "0" ]
	then
		file_to_inspect="/etc/audit/rules.d/$key.rules"
		files_to_inspect=("$file_to_inspect")
		if [ ! -e "$file_to_inspect" ]
		then
			touch "$file_to_inspect"
			chmod 0640 "$file_to_inspect"
		fi
	fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do
	# Filter existing $audit_file rules' definitions to select those that:
	# * follow the rule pattern, and
	# * meet the hardware architecture requirement, and
	# * are current syscall group specific
	readarray -t existing_rules &lt; &lt;(sed -e "\;${pattern};!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file")
	if [ $? -ne 0 ]
	then
		retval=1
	fi

	# Process rules found case-by-case
	for rule in "${existing_rules[@]}"
	do
		# Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
		if [ "${rule}" != "${full_rule}" ]
		then
			# If so, isolate just '(-S \w)+' substring of that rule
			rule_syscalls=$(echo $rule | grep -o -P '(-S \w+ )+')
			# Check if list of '-S syscall' arguments of that rule is subset
			# of '-S syscall' list of expected $full_rule
			if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
			then
				# Rule is covered (i.e. the list of -S syscalls for this rule is
				# subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
				# Thus delete the rule from audit.rules &amp; our array
				sed -i -e "\;${rule};d" "$audit_file"
				if [ $? -ne 0 ]
				then
					retval=1
				fi
				existing_rules=("${existing_rules[@]//$rule/}")
			else
				# Rule isn't covered by $full_rule - it besides -S syscall arguments
				# for this group contains also -S syscall arguments for other syscall
				# group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
				# since 'lchown' &amp; 'fchownat' share 'chown' substring
				# Therefore:
				# * 1) delete the original rule from audit.rules
				# (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
				# * 2) delete the -S syscall arguments for this syscall group, but
				# keep those not belonging to this syscall group
				# (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
				# * 3) append the modified (filtered) rule again into audit.rules
				# if the same rule not already present
				#
				# 1) Delete the original rule
				sed -i -e "\;${rule};d" "$audit_file"
				if [ $? -ne 0 ]
				then
					retval=1
				fi

				# 2) Delete syscalls for this group, but keep those from other groups
				# Convert current rule syscall's string into array splitting by '-S' delimiter
				IFS_BKP="$IFS"
				IFS=$'-S'
				read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
				# Reset IFS back to default
				IFS="$IFS_BKP"
				# Splitting by "-S" can't be replaced by the readarray functionality easily

				# Declare new empty string to hold '-S syscall' arguments from other groups
				new_syscalls_for_rule=''
				# Walk through existing '-S syscall' arguments
				for syscall_arg in "${rule_syscalls_as_array[@]}"
				do
					# Skip empty $syscall_arg values
					if [ "$syscall_arg" == '' ]
					then
						continue
					fi
					# If the '-S syscall' doesn't belong to current group add it to the new list
					# (together with adding '-S' delimiter back for each of such item found)
					if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
					then
						new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
					fi
				done
				# Replace original '-S syscall' list with the new one for this rule
				updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
				# Squeeze repeated whitespace characters in rule definition (if any) into one
				updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
				# 3) Append the modified / filtered rule again into audit.rules
				#    (but only in case it's not present yet to prevent duplicate definitions)
				if ! grep -q -- "$updated_rule" "$audit_file"
				then
					echo "$updated_rule" &gt;&gt; "$audit_file"
				fi
			fi
		else
			# $audit_file already contains the expected rule form for this
			# architecture &amp; key =&gt; don't insert it second time
			append_expected_rule=1
		fi
	done

	# We deleted all rules that were subset of the expected one for this arch &amp; key.
	# Also isolated rules containing system calls not from this system calls group.
	# Now append the expected rule if it's not present in $audit_file yet
	if [[ ${append_expected_rule} -eq "0" ]]
	then
		echo "$full_rule" &gt;&gt; "$audit_file"
	fi
done

return $retval

}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_fix_audit_watch_rule" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function fix_audit_watch_rule</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value># Function to fix audit file system object watch rule for given path:
# * if rule exists, also verifies the -w bits match the requirements
# * if rule doesn't exist yet, appends expected rule form to $files_to_inspect
#   audit rules file, depending on the tool which was used to load audit rules
#
# Expects four arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules'
# * path                        	value of -w audit rule's argument
# * required access bits        	value of -p audit rule's argument
# * key                         	value of -k audit rule's argument
#
# Example call:
#
#       fix_audit_watch_rule "auditctl" "/etc/localtime" "wa" "audit_time_rules"
#
function fix_audit_watch_rule {

# Load function arguments into local variables
local tool="$1"
local path="$2"
local required_access_bits="$3"
local key="$4"

# Check sanity of the input
if [ $# -ne "4" ]
then
	echo "Usage: fix_audit_watch_rule 'tool' 'path' 'bits' 'key'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
#
# -----------------------------------------------------------------------------------------
# Tool used to load audit rules	| Rule already defined	|  Audit rules file to inspect	  |
# -----------------------------------------------------------------------------------------
#	auditctl		|     Doesn't matter	|  /etc/audit/audit.rules	  |
# -----------------------------------------------------------------------------------------
# 	augenrules		|          Yes		|  /etc/audit/rules.d/*.rules	  |
# 	augenrules		|          No		|  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
declare -a files_to_inspect
files_to_inspect=()

# Check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	exit 1
# If the audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# into the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect+=('/etc/audit/audit.rules')
# If the audit is 'augenrules', then check if rule is already defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to list of files for inspection.
# If rule isn't defined, add '/etc/audit/rules.d/$key.rules' to list of files for inspection.
elif [ "$tool" == 'augenrules' ]
then
	readarray -t matches &lt; &lt;(grep -P "[\s]*-w[\s]+$path" /etc/audit/rules.d/*.rules)

	# For each of the matched entries
	for match in "${matches[@]}"
	do
		# Extract filepath from the match
		rulesd_audit_file=$(echo $match | cut -f1 -d ':')
		# Append that path into list of files for inspection
		files_to_inspect+=("$rulesd_audit_file")
	done
	# Case when particular audit rule isn't defined yet
	if [ "${#files_to_inspect[@]}" -eq "0" ]
	then
		# Append '/etc/audit/rules.d/$key.rules' into list of files for inspection
		local key_rule_file="/etc/audit/rules.d/$key.rules"
		# If the $key.rules file doesn't exist yet, create it with correct permissions
		if [ ! -e "$key_rule_file" ]
		then
			touch "$key_rule_file"
			chmod 0640 "$key_rule_file"
		fi

		files_to_inspect+=("$key_rule_file")
	fi
fi

# Finally perform the inspection and possible subsequent audit rule
# correction for each of the files previously identified for inspection
for audit_rules_file in "${files_to_inspect[@]}"
do

	# Check if audit watch file system object rule for given path already present
	if grep -q -P -- "[\s]*-w[\s]+$path" "$audit_rules_file"
	then
		# Rule is found =&gt; verify yet if existing rule definition contains
		# all of the required access type bits

		# Escape slashes in path for use in sed pattern below
		local esc_path=${path//$'/'/$'\/'}
		# Define BRE whitespace class shortcut
		local sp="[[:space:]]"
		# Extract current permission access types (e.g. -p [r|w|x|a] values) from audit rule
		current_access_bits=$(sed -ne "s/$sp*-w$sp\+$esc_path$sp\+-p$sp\+\([rxwa]\{1,4\}\).*/\1/p" "$audit_rules_file")
		# Split required access bits string into characters array
		# (to check bit's presence for one bit at a time)
		for access_bit in $(echo "$required_access_bits" | grep -o .)
		do
			# For each from the required access bits (e.g. 'w', 'a') check
			# if they are already present in current access bits for rule.
			# If not, append that bit at the end
			if ! grep -q "$access_bit" &lt;&lt;&lt; "$current_access_bits"
			then
				# Concatenate the existing mask with the missing bit
				current_access_bits="$current_access_bits$access_bit"
			fi
		done
		# Propagate the updated rule's access bits (original + the required
		# ones) back into the /etc/audit/audit.rules file for that rule
		sed -i "s/\($sp*-w$sp\+$esc_path$sp\+-p$sp\+\)\([rxwa]\{1,4\}\)\(.*\)/\1$current_access_bits\3/" "$audit_rules_file"
	else
		# Rule isn't present yet. Append it at the end of $audit_rules_file file
		# with proper key

		echo "-w $path -p $required_access_bits -k $key" &gt;&gt; "$audit_rules_file"
	fi
done
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_include_merge_files_by_lines" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function include_merge_files_by_lines</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value>function include_merge_files_by_lines {
	:
}

# 1: Filename of the "master" file
# 2: Filename of the newly created file
function create_empty_file_like {
	local lines_count
	lines_count=$(cat "$1" | wc -l)
	for _ in $(seq 1 "$lines_count"); do
		printf '\n' &gt;&gt; "$2"
	done
}


# 1: Filename of the "master" file
# 2: Filename of sample flie
function second_file_is_same_except_newlines {
	local lines_of_master lines_of_sample len_of_master line_number i
	readarray -t lines_of_master &lt; "$1"
	readarray -t lines_of_sample &lt; "$2"

	len_of_master="${#lines_of_master[@]}"
	if test "$len_of_master" != "${#lines_of_sample[@]}"; then
		echo "Files '$1' and '$2' have different number of lines, $len_of_master and ${#lines_of_sample[@]} respectively."
		return 1
	fi

	for line_number in $(seq 1 "$len_of_master"); do
		i=$((line_number - 1))
		test -n "${lines_of_sample[$i]}" || continue
		if test "${lines_of_master[$i]}" != "${lines_of_sample[$i]}"; then
			echo "Line $line_number is different in files '$1' and '$2'."
			return 1
		fi
	done
}


# 1: Filename of the "master" file
# 2: Filename of sample flie
# 3: List of indices (1-based, space-separated string)
function merge_first_lines_to_second_on_indices {
	local lines_of_master lines_of_sample line_number i
	test -f "$2" || create_empty_file_like "$1" "$2"

	readarray -t lines_of_master &lt; "$1"
	readarray -t lines_of_sample &lt; "$2"

	error_msg="$(second_file_is_same_except_newlines "$1" "$2")"
	if test $? != 0; then
		echo "Error merging lines into '$2': $error_msg" &gt;&amp;2
		return 1
	fi

	for line_number in $3; do
		i=$((line_number - 1))
		lines_of_sample[$i]="${lines_of_master[$i]}"
	done

	printf "%s\n" "${lines_of_sample[@]}" &gt; "$2"
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_include_mount_options_functions" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function include_mount_options_functions</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value>function include_mount_options_functions {
	:
}

# $1: type of filesystem
# $2: new mount point option
# $3: filesystem of new mount point (used when adding new entry in fstab)
# $4: mount type of new mount point (used when adding new entry in fstab)
function ensure_mount_option_for_vfstype {
        local _vfstype="$1" _new_opt="$2" _filesystem=$3 _type=$4 _vfstype_points=()
        readarray -t _vfstype_points &lt; &lt;(grep -E "[[:space:]]${_vfstype}[[:space:]]" /etc/fstab | awk '{print $2}')

        for _vfstype_point in "${_vfstype_points[@]}"
        do
                ensure_mount_option_in_fstab "$_vfstype_point" "$_new_opt" "$_filesystem" "$_type"
        done
}

# $1: mount point
# $2: new mount point option
# $3: device or virtual string (used when adding new entry in fstab)
# $4: mount type of mount point (used when adding new entry in fstab)
function ensure_mount_option_in_fstab {
	local _mount_point="$1" _new_opt="$2" _device=$3 _type=$4
	local _mount_point_match_regexp="" _previous_mount_opts=""
	_mount_point_match_regexp="$(get_mount_point_regexp "$_mount_point")"

	if [ "$(grep -c "$_mount_point_match_regexp" /etc/fstab)" -eq 0 ]; then
		# runtime opts without some automatic kernel/userspace-added defaults
		_previous_mount_opts=$(grep "$_mount_point_match_regexp" /etc/mtab | head -1 |  awk '{print $4}' \
					| sed -E "s/(rw|defaults|seclabel|${_new_opt})(,|$)//g;s/,$//")
		[ "$_previous_mount_opts" ] &amp;&amp; _previous_mount_opts+=","
		echo "${_device} ${_mount_point} ${_type} defaults,${_previous_mount_opts}${_new_opt} 0 0" &gt;&gt; /etc/fstab
	elif [ "$(grep "$_mount_point_match_regexp" /etc/fstab | grep -c "$_new_opt")" -eq 0 ]; then
		_previous_mount_opts=$(grep "$_mount_point_match_regexp" /etc/fstab | awk '{print $4}')
		sed -i "s|\(${_mount_point_match_regexp}.*${_previous_mount_opts}\)|\1,${_new_opt}|" /etc/fstab
	fi
}

# $1: mount point
function get_mount_point_regexp {
		printf "[[:space:]]%s[[:space:]]" "$1"
}

# $1: mount point
function assert_mount_point_in_fstab {
	local _mount_point_match_regexp
	_mount_point_match_regexp="$(get_mount_point_regexp "$1")"
	grep "$_mount_point_match_regexp" -q /etc/fstab \
		|| { echo "The mount point '$1' is not even in /etc/fstab, so we can't set up mount options" &gt;&amp;2; return 1; }
}

# $1: mount point
function remove_defaults_from_fstab_if_overriden {
	local _mount_point_match_regexp
	_mount_point_match_regexp="$(get_mount_point_regexp "$1")"
	if grep "$_mount_point_match_regexp" /etc/fstab | grep -q "defaults,"
	then
		sed -i "s|\(${_mount_point_match_regexp}.*\)defaults,|\1|" /etc/fstab
	fi
}

# $1: mount point
function ensure_partition_is_mounted {
	local _mount_point="$1"
	mkdir -p "$_mount_point" || return 1
	if mountpoint -q "$_mount_point"; then
		mount -o remount --target "$_mount_point"
	else
		mount --target "$_mount_point"
	fi
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_include_set_faillock_option" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function include_set_faillock_option</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value>function include_set_faillock_option {
	:
}

function insert_preauth {
	local pam_file="$1"
	local option="$2"
	local value="$3"
	# is auth required pam_faillock.so preauth present?
	if grep -qE "^\s*auth\s+required\s+pam_faillock\.so\s+preauth.*$" "$pam_file" ; then
		# is the option set?
		if grep -qE "^\s*auth\s+required\s+pam_faillock\.so\s+preauth.*$option=([0-9]*).*$" "$pam_file" ; then
			# just change the value of option to a correct value
			sed -i --follow-symlinks "s/\(^auth.*required.*pam_faillock.so.*preauth.*silent.*\)\($option *= *\).*/\1\2$value/" "$pam_file"
		# the option is not set.
		else
			# append the option
			sed -i --follow-symlinks "/^auth.*required.*pam_faillock.so.*preauth.*silent.*/ s/$/ $option=$value/" "$pam_file"
		fi
	# auth required pam_faillock.so preauth is not present, insert the whole line
	else
		sed -i --follow-symlinks "/^auth.*sufficient.*pam_unix.so.*/i auth        required      pam_faillock.so preauth silent $option=$value" "$pam_file"
	fi
}

function insert_authfail {
	local pam_file="$1"
	local option="$2"
	local value="$3"
	# is auth default pam_faillock.so authfail present?
	if grep -qE "^\s*auth\s+(\[default=die\])\s+pam_faillock\.so\s+authfail.*$" "$pam_file" ; then
		# is the option set?
		if grep -qE "^\s*auth\s+(\[default=die\])\s+pam_faillock\.so\s+authfail.*$option=([0-9]*).*$" "$pam_file" ; then
			# just change the value of option to a correct value
			sed -i --follow-symlinks "s/\(^auth.*[default=die].*pam_faillock.so.*authfail.*\)\($option *= *\).*/\1\2$value/" "$pam_file"
		# the option is not set.
		else
			# append the option
			sed -i --follow-symlinks "/^auth.*[default=die].*pam_faillock.so.*authfail.*/ s/$/ $option=$value/" "$pam_file"
		fi
	# auth default pam_faillock.so authfail is not present, insert the whole line
	else
		sed -i --follow-symlinks "/^auth.*sufficient.*pam_unix.so.*/a auth        [default=die] pam_faillock.so authfail $option=$value" "$pam_file"
	fi
}

function insert_account {
	local pam_file="$1"
	if ! grep -qE "^\s*account\s+required\s+pam_faillock\.so.*$" "$pam_file" ; then
		sed -E -i --follow-symlinks "/^\s*account\s*required\s*pam_unix.so/i account     required      pam_faillock.so" "$pam_file"
	fi
}

function set_faillock_option {
	local pam_file="$1"
	local option="$2"
	local value="$3"
	insert_preauth "$pam_file" "$option" "$value"
	insert_authfail "$pam_file" "$option" "$value"
	insert_account "$pam_file"
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_perform_audit_adjtimex_settimeofday_stime_remediation" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function perform_audit_adjtimex_settimeofday_stime_remediation</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value># Function to fix syscall audit rule for given system call. It is
# based on example audit syscall rule definitions as outlined in
# /usr/share/doc/audit-2.3.7/stig.rules file provided with the audit
# package. It will combine multiple system calls belonging to the same
# syscall group into one audit rule (rather than to create audit rule per
# different system call) to avoid audit infrastructure performance penalty
# in the case of 'one-audit-rule-definition-per-one-system-call'. See:
#
#   https://www.redhat.com/archives/linux-audit/2014-November/msg00009.html
#
# for further details.
#
# Expects five arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules
# * audit rules' pattern		audit rule skeleton for same syscall
# * syscall group			greatest common string this rule shares
# 					with other rules from the same group
# * architecture			architecture this rule is intended for
# * full form of new rule to add	expected full form of audit rule as to be
# 					added into audit.rules file
#
# Note: The 2-th up to 4-th arguments are used to determine how many existing
# audit rules will be inspected for resemblance with the new audit rule
# (5-th argument) the function is going to add. The rule's similarity check
# is performed to optimize audit.rules definition (merge syscalls of the same
# group into one rule) to avoid the "single-syscall-per-audit-rule" performance
# penalty.
#
# Example call:
#
#	See e.g. 'audit_rules_file_deletion_events.sh' remediation script
#
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
	echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
# 
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

retval=0

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	return 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect+=('/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
	# Extract audit $key from audit rule so we can use it later
	key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)' '|' "$full_rule" : '.*-F[[:space:]]key=\([^[:space:]]\+\)')
	readarray -t matches &lt; &lt;(sed -s -n -e "\;${pattern};!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules)
	if [ $? -ne 0 ]
	then
		retval=1
	fi
	for match in "${matches[@]}"
	do
		files_to_inspect+=("${match}")
	done
	# Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
	if [ ${#files_to_inspect[@]} -eq "0" ]
	then
		file_to_inspect="/etc/audit/rules.d/$key.rules"
		files_to_inspect=("$file_to_inspect")
		if [ ! -e "$file_to_inspect" ]
		then
			touch "$file_to_inspect"
			chmod 0640 "$file_to_inspect"
		fi
	fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do
	# Filter existing $audit_file rules' definitions to select those that:
	# * follow the rule pattern, and
	# * meet the hardware architecture requirement, and
	# * are current syscall group specific
	readarray -t existing_rules &lt; &lt;(sed -e "\;${pattern};!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file")
	if [ $? -ne 0 ]
	then
		retval=1
	fi

	# Process rules found case-by-case
	for rule in "${existing_rules[@]}"
	do
		# Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
		if [ "${rule}" != "${full_rule}" ]
		then
			# If so, isolate just '(-S \w)+' substring of that rule
			rule_syscalls=$(echo $rule | grep -o -P '(-S \w+ )+')
			# Check if list of '-S syscall' arguments of that rule is subset
			# of '-S syscall' list of expected $full_rule
			if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
			then
				# Rule is covered (i.e. the list of -S syscalls for this rule is
				# subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
				# Thus delete the rule from audit.rules &amp; our array
				sed -i -e "\;${rule};d" "$audit_file"
				if [ $? -ne 0 ]
				then
					retval=1
				fi
				existing_rules=("${existing_rules[@]//$rule/}")
			else
				# Rule isn't covered by $full_rule - it besides -S syscall arguments
				# for this group contains also -S syscall arguments for other syscall
				# group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
				# since 'lchown' &amp; 'fchownat' share 'chown' substring
				# Therefore:
				# * 1) delete the original rule from audit.rules
				# (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
				# * 2) delete the -S syscall arguments for this syscall group, but
				# keep those not belonging to this syscall group
				# (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
				# * 3) append the modified (filtered) rule again into audit.rules
				# if the same rule not already present
				#
				# 1) Delete the original rule
				sed -i -e "\;${rule};d" "$audit_file"
				if [ $? -ne 0 ]
				then
					retval=1
				fi

				# 2) Delete syscalls for this group, but keep those from other groups
				# Convert current rule syscall's string into array splitting by '-S' delimiter
				IFS_BKP="$IFS"
				IFS=$'-S'
				read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
				# Reset IFS back to default
				IFS="$IFS_BKP"
				# Splitting by "-S" can't be replaced by the readarray functionality easily

				# Declare new empty string to hold '-S syscall' arguments from other groups
				new_syscalls_for_rule=''
				# Walk through existing '-S syscall' arguments
				for syscall_arg in "${rule_syscalls_as_array[@]}"
				do
					# Skip empty $syscall_arg values
					if [ "$syscall_arg" == '' ]
					then
						continue
					fi
					# If the '-S syscall' doesn't belong to current group add it to the new list
					# (together with adding '-S' delimiter back for each of such item found)
					if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
					then
						new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
					fi
				done
				# Replace original '-S syscall' list with the new one for this rule
				updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
				# Squeeze repeated whitespace characters in rule definition (if any) into one
				updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
				# 3) Append the modified / filtered rule again into audit.rules
				#    (but only in case it's not present yet to prevent duplicate definitions)
				if ! grep -q -- "$updated_rule" "$audit_file"
				then
					echo "$updated_rule" &gt;&gt; "$audit_file"
				fi
			fi
		else
			# $audit_file already contains the expected rule form for this
			# architecture &amp; key =&gt; don't insert it second time
			append_expected_rule=1
		fi
	done

	# We deleted all rules that were subset of the expected one for this arch &amp; key.
	# Also isolated rules containing system calls not from this system calls group.
	# Now append the expected rule if it's not present in $audit_file yet
	if [[ ${append_expected_rule} -eq "0" ]]
	then
		echo "$full_rule" &gt;&gt; "$audit_file"
	fi
done

return $retval

}


# Function to perform remediation for the 'adjtimex', 'settimeofday', and 'stime' audit
# system calls on RHEL, Fedora or OL systems.
# Remediation performed for both possible tools: 'auditctl' and 'augenrules'.
#
# Note: 'stime' system call isn't known at 64-bit arch (see "$ ausyscall x86_64 stime" 's output)
# therefore excluded from the list of time group system calls to be audited on this arch
#
# Example Call:
#
#      perform_audit_adjtimex_settimeofday_stime_remediation
#
function perform_audit_adjtimex_settimeofday_stime_remediation {

# Retrieve hardware architecture of the underlying system
[ "$(getconf LONG_BIT)" = "32" ] &amp;&amp; RULE_ARCHS=("b32") || RULE_ARCHS=("b32" "b64")

for ARCH in "${RULE_ARCHS[@]}"
do

	PATTERN="-a always,exit -F arch=${ARCH} -S .* -k *"
	# Create expected audit group and audit rule form for particular system call &amp; architecture
	if [ ${ARCH} = "b32" ]
	then
		# stime system call is known at 32-bit arch (see e.g "$ ausyscall i386 stime" 's output)
		# so append it to the list of time group system calls to be audited
		GROUP="\(adjtimex\|settimeofday\|stime\)"
		FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -S stime -k audit_time_rules"
	elif [ ${ARCH} = "b64" ]
	then
		# stime system call isn't known at 64-bit arch (see "$ ausyscall x86_64 stime" 's output)
		# therefore don't add it to the list of time group system calls to be audited
		GROUP="\(adjtimex\|settimeofday\)"
		FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -k audit_time_rules"
	fi
	# Perform the remediation for both possible tools: 'auditctl' and 'augenrules'
	fix_audit_syscall_rule "auditctl" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
	fix_audit_syscall_rule "augenrules" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
done

}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_perform_audit_rules_privileged_commands_remediation" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function perform_audit_rules_privileged_commands_remediation</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value># Function to perform remediation for 'audit_rules_privileged_commands' rule
#
# Expects two arguments:
#
# audit_tool		tool used to load audit rules
# 			One of 'auditctl' or 'augenrules'
#
# min_auid		Minimum original ID the user logged in with
# 			'500' for RHEL-6 and before, '1000' for RHEL-7 and after.
#
# Example Call(s):
#
#      perform_audit_rules_privileged_commands_remediation "auditctl" "500"
#      perform_audit_rules_privileged_commands_remediation "augenrules"	"1000"
#
function perform_audit_rules_privileged_commands_remediation {
#
# Load function arguments into local variables
local tool="$1"
local min_auid="$2"

# Check sanity of the input
if [ $# -ne "2" ]
then
	echo "Usage: perform_audit_rules_privileged_commands_remediation 'auditctl | augenrules' '500 | 1000'"
	echo "Aborting."
	exit 1
fi

declare -a files_to_inspect=()

# Check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	exit 1
# If the audit tool is 'auditctl', then:
# * add '/etc/audit/audit.rules'to the list of files to be inspected,
# * specify '/etc/audit/audit.rules' as the output audit file, where
#   missing rules should be inserted
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect=("/etc/audit/audit.rules")
	output_audit_file="/etc/audit/audit.rules"
#
# If the audit tool is 'augenrules', then:
# * add '/etc/audit/rules.d/*.rules' to the list of files to be inspected
#   (split by newline),
# * specify /etc/audit/rules.d/privileged.rules' as the output file, where
#   missing rules should be inserted
elif [ "$tool" == 'augenrules' ]
then
	readarray -t files_to_inspect &lt; &lt;(find /etc/audit/rules.d -maxdepth 1 -type f -name '*.rules' -print)
	output_audit_file="/etc/audit/rules.d/privileged.rules"
fi

# Obtain the list of SUID/SGID binaries on the particular system (split by newline)
# into privileged_binaries array
readarray -t privileged_binaries &lt; &lt;(find / -xdev -type f -perm -4000 -o -type f -perm -2000 2&gt;/dev/null)

# Keep list of SUID/SGID binaries that have been already handled within some previous iteration
declare -a sbinaries_to_skip=()

# For each found sbinary in privileged_binaries list
for sbinary in "${privileged_binaries[@]}"
do

	# Check if this sbinary wasn't already handled in some of the previous sbinary iterations
	# Return match only if whole sbinary definition matched (not in the case just prefix matched!!!)
	if [[ $(sed -ne "\|${sbinary}|p" &lt;&lt;&lt; "${sbinaries_to_skip[*]}") ]]
	then
		# If so, don't process it second time &amp; go to process next sbinary
		continue
	fi

	# Reset the counter of inspected files when starting to check
	# presence of existing audit rule for new sbinary
	local count_of_inspected_files=0

	# Define expected rule form for this binary
	expected_rule="-a always,exit -F path=${sbinary} -F perm=x -F auid&gt;=${min_auid} -F auid!=unset -k privileged"

	# If list of audit rules files to be inspected is empty, just add new rule and move on to next binary
	if [[ ${#files_to_inspect[@]} -eq 0 ]]; then
		echo "$expected_rule" &gt;&gt; "$output_audit_file"
		continue
	fi

	# Replace possible slash '/' character in sbinary definition so we could use it in sed expressions below
	sbinary_esc=${sbinary//$'/'/$'\/'}

	# For each audit rules file from the list of files to be inspected
	for afile in "${files_to_inspect[@]}"
	do

		# Search current audit rules file's content for match. Match criteria:
		# * existing rule is for the same SUID/SGID binary we are currently processing (but
		#   can contain multiple -F path= elements covering multiple SUID/SGID binaries)
		# * existing rule contains all arguments from expected rule form (though can contain
		#   them in arbitrary order)
	
		base_search=$(sed -e '/-a always,exit/!d' -e '/-F path='"${sbinary_esc}"'/!d'		\
				-e '/-F path=[^[:space:]]\+/!d'   -e '/-F perm=.*/!d'						\
				-e '/-F auid&gt;='"${min_auid}"'/!d' -e '/-F auid!=\(4294967295\|unset\)/!d'	\
				-e '/-k \|-F key=/!d' "$afile")

		# Increase the count of inspected files for this sbinary
		count_of_inspected_files=$((count_of_inspected_files + 1))

		# Require execute access type to be set for existing audit rule
		exec_access='x'

		# Search current audit rules file's content for presence of rule pattern for this sbinary
		if [[ $base_search ]]
		then

			# Current audit rules file already contains rule for this binary =&gt;
			# Store the exact form of found rule for this binary for further processing
			concrete_rule=$base_search

			# Select all other SUID/SGID binaries possibly also present in the found rule

			readarray -t handled_sbinaries &lt; &lt;(grep -o -e "-F path=[^[:space:]]\+" &lt;&lt;&lt; "$concrete_rule")
			handled_sbinaries=("${handled_sbinaries[@]//-F path=/}")

			# Merge the list of such SUID/SGID binaries found in this iteration with global list ignoring duplicates
			readarray -t sbinaries_to_skip &lt; &lt;(for i in "${sbinaries_to_skip[@]}" "${handled_sbinaries[@]}"; do echo "$i"; done | sort -du)

			# Separate concrete_rule into three sections using hash '#'
			# sign as a delimiter around rule's permission section borders
			concrete_rule="$(echo "$concrete_rule" | sed -n "s/\(.*\)\+\(-F perm=[rwax]\+\)\+/\1#\2#/p")"

			# Split concrete_rule into head, perm, and tail sections using hash '#' delimiter

			rule_head=$(cut -d '#' -f 1 &lt;&lt;&lt; "$concrete_rule")
			rule_perm=$(cut -d '#' -f 2 &lt;&lt;&lt; "$concrete_rule")
			rule_tail=$(cut -d '#' -f 3 &lt;&lt;&lt; "$concrete_rule")

			# Extract already present exact access type [r|w|x|a] from rule's permission section
			access_type=${rule_perm//-F perm=/}

			# Verify current permission access type(s) for rule contain 'x' (execute) permission
			if ! grep -q "$exec_access" &lt;&lt;&lt; "$access_type"
			then

				# If not, append the 'x' (execute) permission to the existing access type bits
				access_type="$access_type$exec_access"
				# Reconstruct the permissions section for the rule
				new_rule_perm="-F perm=$access_type"
				# Update existing rule in current audit rules file with the new permission section
				sed -i "s#${rule_head}\(.*\)${rule_tail}#${rule_head}${new_rule_perm}${rule_tail}#" "$afile"

			fi

		# If the required audit rule for particular sbinary wasn't found yet, insert it under following conditions:
		#
		# * in the "auditctl" mode of operation insert particular rule each time
		#   (because in this mode there's only one file -- /etc/audit/audit.rules to be inspected for presence of this rule),
		#
		# * in the "augenrules" mode of operation insert particular rule only once and only in case we have already
		#   searched all of the files from /etc/audit/rules.d/*.rules location (since that audit rule can be defined
		#   in any of those files and if not, we want it to be inserted only once into /etc/audit/rules.d/privileged.rules file)
		#
		elif [ "$tool" == "auditctl" ] || [[ "$tool" == "augenrules" &amp;&amp; $count_of_inspected_files -eq "${#files_to_inspect[@]}" ]]
		then

			# Check if this sbinary wasn't already handled in some of the previous afile iterations
			# Return match only if whole sbinary definition matched (not in the case just prefix matched!!!)
			if [[ ! $(sed -ne "\|${sbinary}|p" &lt;&lt;&lt; "${sbinaries_to_skip[*]}") ]]
			then
				# Current audit rules file's content doesn't contain expected rule for this
				# SUID/SGID binary yet =&gt; append it
				echo "$expected_rule" &gt;&gt; "$output_audit_file"
			fi

			continue
		fi

	done

done
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_populate" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function populate</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value># The populate function isn't directly used by SSG at the moment but it can be 
# used for testing purposes and will be used in SSG Testsuite in the future.

function populate {
# code to populate environment variables needed (for unit testing)
if [ -z "${!1}" ]; then
	echo "$1 is not defined. Exiting."
	exit
fi
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_replace_or_append" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function replace_or_append</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value># Function to replace configuration setting in config file or add the configuration setting if
# it does not exist.
#
# Expects arguments:
#
# config_file:		Configuration file that will be modified
# key:			Configuration option to change
# value:		Value of the configuration option to change
# cce:			The CCE identifier or '@CCENUM@' if no CCE identifier exists
# format:		The printf-like format string that will be given stripped key and value as arguments,
#			so e.g. '%s=%s' will result in key=value subsitution (i.e. without spaces around =)
#
# Optional arugments:
#
# format:		Optional argument to specify the format of how key/value should be
# 			modified/appended in the configuration file. The default is key = value.
#
# Example Call(s):
#
#     With default format of 'key = value':
#     replace_or_append '/etc/sysctl.conf' '^kernel.randomize_va_space' '2' '@CCENUM@'
#
#     With custom key/value format:
#     replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' 'disabled' '@CCENUM@' '%s=%s'
#
#     With a variable:
#     replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' $var_selinux_state '@CCENUM@' '%s=%s'
#
function replace_or_append {
  local default_format='%s = %s' case_insensitive_mode=yes sed_case_insensitive_option='' grep_case_insensitive_option=''
  local config_file=$1
  local key=$2
  local value=$3
  local cce=$4
  local format=$5

  if [ "$case_insensitive_mode" = yes ]; then
    sed_case_insensitive_option="i"
    grep_case_insensitive_option="-i"
  fi
  [ -n "$format" ] || format="$default_format"
  # Check sanity of the input
  [ $# -ge "3" ] || { echo "Usage: replace_or_append &lt;config_file_location&gt; &lt;key_to_search&gt; &lt;new_value&gt; [&lt;CCE number or literal '@CCENUM@' if unknown&gt;] [printf-like format, default is '$default_format']" &gt;&amp;2; exit 1; }

  # Test if the config_file is a symbolic link. If so, use --follow-symlinks with sed.
  # Otherwise, regular sed command will do.
  sed_command=('sed' '-i')
  if test -L "$config_file"; then
    sed_command+=('--follow-symlinks')
  fi

  # Test that the cce arg is not empty or does not equal @CCENUM@.
  # If @CCENUM@ exists, it means that there is no CCE assigned.
  if [ -n "$cce" ] &amp;&amp; [ "$cce" != '@CCENUM@' ]; then
    cce="${cce}"
  else
    cce="CCE"
  fi

  # Strip any search characters in the key arg so that the key can be replaced without
  # adding any search characters to the config file.
  stripped_key=$(sed 's/[\^=\$,;+]*//g' &lt;&lt;&lt; "$key")

  # shellcheck disable=SC2059
  printf -v formatted_output "$format" "$stripped_key" "$value"

  # If the key exists, change it. Otherwise, add it to the config_file.
  # We search for the key string followed by a word boundary (matched by \&gt;),
  # so if we search for 'setting', 'setting2' won't match.
  if LC_ALL=C grep -q -m 1 $grep_case_insensitive_option -e "${key}\\&gt;" "$config_file"; then
    "${sed_command[@]}" "s/${key}\\&gt;.*/$formatted_output/g$sed_case_insensitive_option" "$config_file"
  else
    # \n is precaution for case where file ends without trailing newline
    printf '\n# Per %s: Set %s in %s\n' "$cce" "$formatted_output" "$config_file" &gt;&gt; "$config_file"
    printf '%s\n' "$formatted_output" &gt;&gt; "$config_file"
  fi
}</ns0:value>
    </ns0:Value>
    <ns0:Value hidden="true" id="function_set_faillock_option_to_value_in_pam_file" operator="equals" prohibitChanges="true" type="string">
      <ns0:title xml:lang="en-US">Remediation function set_faillock_option_to_value_in_pam_file</ns0:title>
      <ns0:description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</ns0:description>
      <ns0:value>function set_faillock_option_to_value_in_pam_file {
	# If invoked with no arguments, exit. This is an intentional behavior.
	[ $# -gt 1 ] || return 0
	[ $# -ge 3 ] || die "$0 requires exactly zero, three, or four arguments"
	[ $# -le 4 ] || die "$0 requires exactly zero, three, or four arguments"
	local _pamFile="$1" _option="$2" _value="$3" _insert_lines_callback="$4"
	# pam_faillock.so already present?
	if grep -q "^auth.*pam_faillock.so.*" "$_pamFile"; then

		# pam_faillock.so present, is the option present?
		if grep -q "^auth.*[default=die].*pam_faillock.so.*authfail.*$_option=" "$_pamFile"; then

			# both pam_faillock.so &amp; option present, just correct option to the right value
			sed -i --follow-symlinks "s/\(^auth.*required.*pam_faillock.so.*preauth.*silent.*\)\($_option *= *\).*/\1\2$_value/" "$_pamFile"
			sed -i --follow-symlinks "s/\(^auth.*[default=die].*pam_faillock.so.*authfail.*\)\($_option *= *\).*/\1\2$_value/" "$_pamFile"

		# pam_faillock.so present, but the option not yet
		else

			# append correct option value to appropriate places
			sed -i --follow-symlinks "/^auth.*required.*pam_faillock.so.*preauth.*silent.*/ s/$/ $_option=$_value/" "$_pamFile"
			sed -i --follow-symlinks "/^auth.*[default=die].*pam_faillock.so.*authfail.*/ s/$/ $_option=$_value/" "$_pamFile"
		fi

	# pam_faillock.so not present yet
	else
		test -z "$_insert_lines_callback" || "$_insert_lines_callback" "$_option" "$_value" "$_pamFile"
		# insert pam_faillock.so preauth &amp; authfail rows with proper value of the option in question
	fi
}</ns0:value>
    </ns0:Value>
  </ns0:Group>
  <ns0:Group id="eap6">
    <ns0:title xml:lang="en-US">JBoss Enterprise Application Platform 6</ns0:title>
    <ns0:description xml:lang="en-US">JBoss Enterprise Application Platform is a popular Java 
Enterprise Edition application server platform by Red Hat. It is based
on the open-source JBoss Application Server, Community Edition.
Leveraging robust container architecture, JBoss EAP is capable of
hosting a wide variety of applications - anything from simple, static
HTML pages all the way to distributed, transaction-based Java Enterprise
Edition applications. JBoss EAP is known for being dependable, fast,
flexible, and cost-effective. This section provides settings for
configuring the JBoss Enterprise Application Platform running on 
Red Hat Enterprise Linux systems.</ns0:description>
    <ns0:Value id="var_jboss_profile" type="string">
      <ns0:title xml:lang="en-US">JBoss Configuration Profile</ns0:title>
      <ns0:description xml:lang="en-US">Choose JBoss configuration name (string)</ns0:description>
      <ns0:value>standalone</ns0:value>
      <ns0:value selector="openshift">standalone-openshift</ns0:value>
    </ns0:Value>
    <ns0:Rule id="jboss_eap_use_dod_approved_certs" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Use DoD Approved Certificates</ns0:title>
      <ns0:description xml:lang="en-US">Configure the application server to use DoD- or CNSS-approved Class 3 or Class
4 PKI certificates.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002450</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000514-AS-000137</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000730</ns0:reference>
      <ns0:rationale xml:lang="en-US">Class 3 PKI certificates are used for servers and software signing rather than
for identifying individuals. Class 4 certificates are used for business-to-
business transactions. Utilizing unapproved certificates not issued or approved
by DoD or CNS creates an integrity risk. The application server must utilize
approved DoD or CNS Class 3 or Class 4 certificates for software signing and
business-to-business transactions.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80497-1</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_use_dod_approved_certs_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_logs_permissions" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss Log Directory Permissions</ns0:title>
      <ns0:description xml:lang="en-US">Configure file permissions on the JBoss log folder to protect from unauthorized
access.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001314</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000267-AS-000170</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000425</ns0:reference>
      <ns0:rationale xml:lang="en-US">If the application provides too much information in error logs and
administrative messages to the screen, this could lead to compromise. The
structure and content of error messages need to be carefully considered by the
organization and development team. The extent to which the information system is
able to identify and handle error conditions is guided by organizational policy
and operational requirements.
<html:br /><html:br />
Application servers must protect the error
messages that are created by the application server. All application server
users' accounts are used for the management of the server and the applications
residing on the application server. All accounts are assigned to a certain role
with corresponding access rights. The application server must restrict access to
error messages so only authorized users may view them. Error messages are
usually written to logs contained on the file system. The application server
will usually create new log files as needed and must take steps to ensure that
the proper file permissions are utilized when the log files are created.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80485-6</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_logs_permissions:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_logs_permissions_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_https" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Enable HTTPS for JBoss Web Interface</ns0:title>
      <ns0:description xml:lang="en-US">Follow procedure "4.4. Configure the JBoss Web Server to use HTTPS."
The detailed procedure is found in the JBoss EAP 6.3 Security Guide available at
the vendor's site, RedHat.com. An overview of steps is provided here.
<html:br /><html:br />
1. Obtain or generate DoD-approved SSL certificates.
2. Configure the SSL certificate using your certificate values.
3. Set the SSL protocol to TLS V1.1 or V1.2.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001453</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000015-AS-000010</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000015</ns0:reference>
      <ns0:rationale xml:lang="en-US">Encryption is critical for protection of remote access sessions. If encryption
is not being used for integrity, malicious users may gain the ability to modify
the application server configuration. The use of cryptography for ensuring
integrity of remote access sessions mitigates that risk.
<html:br /><html:br />
Application servers
utilize a web management interface and scripted commands when allowing remote
access. Web access requires the use of TLS, and scripted access requires using
ssh or some other form of approved cryptography. Application servers must have a
capability to enable a secure remote admin capability.
<html:br /><html:br />
FIPS 140-2 approved TLS
versions include TLS V1.0 or greater.
<html:br /><html:br />
FIPS 140-2 approved TLS versions must be
enabled, and non-FIPS-approved SSL versions must be disabled.
<html:br /><html:br />
NIST SP 800-52
specifies the preferred configurations for government systems.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80451-8</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_https_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_disable_domain_admin_console" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Disable Network Access to the Admin Console</ns0:title>
      <ns0:description xml:lang="en-US">Run the <html:pre>&lt;JBOSS_HOME&gt;/bin/jboss-clii</html:pre> command line interface utility.
Connect to
the JBoss server and run the following command.
<html:pre>/core-service=management/management-interface=httpinterface/:write-attribute(name=console-enabled,value.)</html:pre>
<html:br /><html:br />
Successful command execution returns
<html:pre>{"outcome" =&gt; success"}</html:pre>,
and future attempts to access the management console via web
browser at <html:code><html:i>SERVERNAME</html:i>:9990</html:code> will result in no access to the admin console.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002322</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000316-AS-000199</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000470</ns0:reference>
      <ns0:rationale xml:lang="en-US">When configuring JBoss application servers into a domain configuration, HTTP
management capabilities are not required on domain member servers as management
is done via the server that has been designated as the domain controller.
Leaving HTTP management capabilities enabled on domain member servers increases
the attack surfaces; therefore, management services on domain member servers
must be disabled and management services performed via the domain
controller.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80486-4</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_disable_domain_admin_console_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_use_approved_ciphers" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Use Approved Ciphers</ns0:title>
      <ns0:description xml:lang="en-US">Reference section 4.6 of the JBoss EAP 6.3 Security Guide located on the Red
Hat vendor's website for step-by-step instructions on establishing SSL
encryption on JBoss.
<html:br /><html:br />
The overall steps include:
<html:br /><html:br />
1. Add an HTTPS connector.
2. Configure the SSL encryption certificate and keys.
3. Set the Cipher to an approved algorithm.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002421</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000440-AS-000167</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000655</ns0:reference>
      <ns0:rationale xml:lang="en-US">Preventing the disclosure or modification of transmitted information requires
that application servers take measures to employ approved cryptography in order
to protect the information during transmission over the network. This is usually
achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSec
tunnel.
<html:br /><html:br />
If data in transit is unencrypted, it is vulnerable to disclosure and
modification. If approved cryptographic algorithms are not used, encryption
strength cannot be assured.
<html:br /><html:br />
FIPS 140-2 approved TLS versions include TLS V1.0
or greater.
<html:br /><html:br />
TLS must be enabled, and non-FIPS-approved SSL versions must be
disabled. NIST SP 800-52 specifies the preferred configurations for government
systems.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80494-8</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_use_approved_ciphers_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_unprivileged_mode" selected="false" severity="high">
      <ns0:title xml:lang="en-US">Restrict JBoss Account</ns0:title>
      <ns0:description xml:lang="en-US">Run the JBoss server with non-admin rights.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000381</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000141-AS-000095</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000230</ns0:reference>
      <ns0:rationale xml:lang="en-US">JBoss EAP application server can be run as the OS admin, which is not advised.
Running the application server with admin privileges increases the attack
surface by granting the application server more rights than it requires in order
to operate. If the server is compromised, the attacker will have the same
rights as the application server, which in that case would be admin rights. The
JBoss EAP server must not be run as the admin user.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80467-4</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_unprivileged_mode_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_disable_analytics" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Disable Google Analytics</ns0:title>
      <ns0:description xml:lang="en-US">Using the EAP web console, log on using admin credentials.
On the bottom right-hand side of the screen, select <html:code>Settings</html:code>,
uncheck the <html:code>Enable Data Usage Collection</html:code> box, and save the
configuration.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000381</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000141-AS-000095</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000225</ns0:reference>
      <ns0:rationale xml:lang="en-US">The Google Analytics feature aims to help Red Hat EAP team understand how
customers are using the console and which parts of the console matter the most
to the customers. This information will, in turn, help the team to adapt the
console design, features, and content to the immediate needs of the customers.
Sending analytical data to the vendor introduces risk of unauthorized data
exfiltration. This capability must be disabled.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80466-6</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_disable_analytics_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_system_up_to_date" selected="false" severity="high">
      <ns0:title xml:lang="en-US">JBoss System Is Patched</ns0:title>
      <ns0:description xml:lang="en-US">Configure the operating system and the application server to use a patch
management system or process that ensures security-relevant updates are
installed within the time period directed by the ISSM.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002605</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000456-AS-000266</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000685</ns0:reference>
      <ns0:rationale xml:lang="en-US">The JBoss product is available as Open Source; however, the Red Hat vendor
provides updates, patches and support for the JBoss product. It is imperative
that patches and updates be applied to JBoss in a timely manner as many attacks
against JBoss focus on unpatched systems. It is critical that support be
obtained and made available.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80496-3</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_system_up_to_date_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_enable_rbac" selected="false" severity="high">
      <ns0:title xml:lang="en-US">Enable Role Based Access Control (RBAC)</ns0:title>
      <ns0:description xml:lang="en-US">Run the following command.
<html:pre>&lt;JBOSS_HOME&gt;/bin/jboss-cli.sh -c -&gt; connect -&gt; cd
/core-service=management/access-authorization :write-attribute(name=provider,
value=rbac)</html:pre>
<html:br /><html:br />
Restart JBoss.
<html:br /><html:br />
Map users to roles by running the following
command. Upper-case words are variables.
<html:br /><html:br />
<html:pre>role-mapping=ROLENAME/include=ALIAS:add(name-USERNAME, type=USER ROLE)</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000213</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002235</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000033-AS-000024</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000340-AS-000185</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000035</ns0:reference>
      <ns0:rationale xml:lang="en-US">By default, the JBoss server is not configured to utilize role based access
controls (RBAC). RBAC provides the capability to restrict user access to their
designated management role, thereby limiting access to only the JBoss
functionality that they are supposed to have. Without RBAC, the JBoss server is
not able to enforce authorized access according to role.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80454-2</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_enable_rbac_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_disable_automatic_deployment" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Disable Automatic Deployment</ns0:title>
      <ns0:description xml:lang="en-US">Determine the JBoss server configuration as being either standalone or domain.
Launch the relevant jboss-cli management interface substituting standalone or
domain for <html:i>CONFIG</html:i>
<html:br /><html:br />
<html:pre>&lt;JBOSS_HOME&gt;/<html:i>CONFIG</html:i>/bin/jboss-cli</html:pre>
<html:br /><html:br />
connect to the server and run the command:
<html:pre>/subsystem=deployment-scanner/scanner=default:write-attribute(name=scan-enabled,value.)</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001813</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000380-AS-000088</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000545</ns0:reference>
      <ns0:rationale xml:lang="en-US">When dealing with access restrictions pertaining to change control, it should
be noted that any changes to the software and/or application server
configuration can potentially have significant effects on the overall security
of the system.
<html:br /><html:br />
Access restrictions for changes also include application
software libraries.
<html:br /><html:br />
If the application server provides automatic code
deployment capability, (where updates to applications hosted on the application
server are automatically performed, usually by the developers' IDE tool), it
must also provide a capability to restrict the use of automatic application
deployment. Automatic code deployments are allowable in a development
environment, but not in production.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80489-8</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_disable_automatic_deployment_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_roll_over_transfer_logs" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Roll Over and Transfer JBoss Logs</ns0:title>
      <ns0:description xml:lang="en-US">Open the web-based management interface by opening a browser and pointing it to
<html:code>HTTPS://<html:i>EAP_SERVER</html:i>:9990/</html:code>
<html:br /><html:br />
Authenticate as a user with Admin rights.
Navigate
to the <html:code>Configuration</html:code> tab.
Expand <html:code>+</html:code> Subsystems.
Expand <html:code>+</html:code> Core.
Select
<html:code>Logging</html:code>.
Select the <html:code>Handler</html:code> tab.
Select <html:code>Periodic</html:code>.
<html:br /><html:br />
If a
periodic file handler does not exist, reference JBoss admin guide for
instructions on how to create a file handler that will rotate logs on a daily
basis.
Create scripts that package and off-load log data at least weekly.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001851</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000515-AS-000203</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000735</ns0:reference>
      <ns0:rationale xml:lang="en-US">Information stored in one location is vulnerable to accidental or incidental
deletion or alteration. Protecting log data is important during a forensic
investigation to ensure investigators can track and understand what may have
occurred. Off-loading should be set up as a scheduled task but can be
configured to be run manually, if other processes during the off-loading are
manual.
<html:br /><html:br />
Off-loading is a common process in information systems with limited log
storage capacity.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80498-9</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-export export-name="oval:ssg-var_jboss_profile:var:1" value-id="var_jboss_profile" /><ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_roll_over_transfer_logs:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_roll_over_transfer_logs_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_secure_management_access" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Enable HTTPS for Management Sessions</ns0:title>
      <ns0:description xml:lang="en-US">Follow the specific instructions in the Red Hat Security Guide for EAP version
6.3 to configure the management console for HTTPS.
<html:br /><html:br />
This involves the following steps.
1. Create a keystore in JKS format.
2. Ensure the management console binds to HTTPS.
3. Create a new Security Realm.
4. Configure Management Interface to use new security realm.
5. Configure the management console to use the keystore.
6. Restart the EAP server.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000068</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000014-AS-000009</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000010</ns0:reference>
      <ns0:rationale xml:lang="en-US">Types of management interfaces utilized by the JBoss EAP application server
include web-based HTTP interfaces as well as command line-based management
interfaces. In the event remote HTTP management is required, the access must be
via HTTPS.
<html:br /><html:br />
This requirement is in conjunction with the requirement to isolate
all management access to a restricted network.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80450-0</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_secure_management_access_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_log_permissions" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss Log Permissions</ns0:title>
      <ns0:description xml:lang="en-US">Configure the OS file permissions on the application server to protect log
information from unauthorized access.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000162</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000163</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000164</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000118-AS-000078</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000119-AS-000079</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000120-AS-000080</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000165</ns0:reference>
      <ns0:rationale xml:lang="en-US">If log data were to become compromised, then competent forensic analysis and
discovery of the true source of potentially malicious system activity is
difficult, if not impossible, to achieve.
<html:br /><html:br />
When not configured to use a
centralized logging solution like a syslog server, the JBoss EAP application
server writes log data to log files that are stored on the OS; appropriate file
permissions must be used to restrict access.
<html:br /><html:br />
Log information includes all
information (e.g., log records, log settings, transaction logs, and log reports)
needed to successfully log information system activity. Application servers must
protect log information from unauthorized access.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80462-5</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_log_permissions_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_restrict_jboss_account" selected="false" severity="high">
      <ns0:title xml:lang="en-US">Restrict the JBoss Account</ns0:title>
      <ns0:description xml:lang="en-US">Use the relevant OS commands to restrict JBoss user account from interactively
logging on to the console of the JBoss system.
<html:br /><html:br />
For Windows systems, use GPO.
For UNIX like systems using ssh DenyUsers <html:i>account id</html:i> or follow established
procedure for restricting access.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000381</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000141-AS-000095</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000220</ns0:reference>
      <ns0:rationale xml:lang="en-US">JBoss does not require admin rights to operate and should be run as a regular
user. In addition, if the user account was to be compromised and the account
was allowed interactive logon rights, this would increase the risk and attack
surface against the JBoss system. The right to interactively log on to the
system using the JBoss account should be limited according to the OS
capabilities.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80465-8</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_restrict_jboss_account_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_use_tls" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Use Approves TLS version</ns0:title>
      <ns0:description xml:lang="en-US">Reference section 4.6 of the JBoss EAP 6.3 Security Guide located on the Red
Hat vendor's web site for step-by-step instructions on establishing SSL
encryption on JBoss.
<html:br /><html:br />
The overall steps include:
<html:br /><html:br />
1. Add an HTTPS connector.
2. Configure the SSL encryption certificate and keys.
3. Set the protocol to TLS V1.1 or V1.2.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002418</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000439-AS-000155</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000650</ns0:reference>
      <ns0:rationale xml:lang="en-US">Preventing the disclosure of transmitted information requires that the
application server take measures to employ some form of cryptographic mechanism
in order to protect the information during transmission. This is usually
achieved through the use of Transport Layer Security (TLS).
<html:br /><html:br />
JBoss relies on
the underlying SSL implementation running on the OS. This can be either Java
based or OpenSSL. The SSL protocol setting determines which SSL protocol is
used. SSL has known security vulnerabilities, so TLS should be used instead.
If data is transmitted unencrypted, the data then becomes vulnerable to
disclosure. The disclosure may reveal user identifier/password combinations,
website code revealing business logic, or other user personal information.
<html:br /><html:br />
FIPS 140-2 approved TLS versions include TLS V1.0 or greater.
<html:br /><html:br />
TLS must be enabled,
and non-FIPS-approved SSL versions must be disabled. NIST SP 800-52 specifies
the preferred configurations for government systems.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80493-0</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_use_tls_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_remove_jmx" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Remove the JMX Subsystem</ns0:title>
      <ns0:description xml:lang="en-US">Log on to the OS of the JBoss server with OS permissions that allow access to
JBoss.
Using the relevant OS commands and syntax, cd to the <html:code>&lt;JBOSS_HOME&gt;/bin/</html:code>
folder.
Run the <html:pre>jboss-cli</html:pre> script to start the Command Line Interface (CLI).
Connect to the server and authenticate.
<html:br /><html:br />
For a Managed Domain configuration you
must check each profile name:
<html:br /><html:br />
For each PROFILE NAME, run the command:
<html:pre>/profile=<html:i>PROFILE NAME</html:i>/subsystem=jmx/remoting-connector=jmx:remove</html:pre>
For a Standalone configuration:
<html:pre>/subsystem=jmx/remoting-connector=jmx:remove</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000381</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000141-AS-000095</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000240</ns0:reference>
      <ns0:rationale xml:lang="en-US">The JMX subsystem allows you to trigger JDK and application management
operations remotely. In a managed domain configuration, the JMX subsystem is
removed by default. For a standalone configuration, it is enabled by default and
must be removed.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80469-0</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-export export-name="oval:ssg-var_jboss_profile:var:1" value-id="var_jboss_profile" /><ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_remove_jmx:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_remove_jmx_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_user_permissions" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure mgmt-users.properties File Permissions</ns0:title>
      <ns0:description xml:lang="en-US">Configure the file permissions to allow access to authorized users only.
Owner can be full access. Group can be full access. 
All others must have execute
permissions only.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001499</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000133-AS-000092</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000210</ns0:reference>
      <ns0:rationale xml:lang="en-US">The mgmt-users.properties file contains the password hashes of all users who
are in a management role and must be protected. Application servers have the
ability to specify that the hosted applications utilize shared libraries. The
application server must have a capability to divide roles based upon duties
wherein one project user (such as a developer) cannot modify the shared library
code of another project user. The application server must also be able to
specify that non-privileged users cannot modify any shared library code at
all.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80464-1</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_user_permissions_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_require_password_access" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Require Password Authentication</ns0:title>
      <ns0:description xml:lang="en-US">Configure the LDAP Security Realm using default settings that sets <html:code>allow-empty-values</html:code>
to <html:code>..</html:code> LDAP Security Realm creation is described in
section 11.9 -Add an LDAP Security Realm in the
JBoss_Enterprise_Application_Platform-6.3
-Administration_and_Configuration_Guide-en-US document.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000197</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000172-AS-000120</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000305</ns0:reference>
      <ns0:rationale xml:lang="en-US">Passwords need to be protected at all times, and encryption is the standard
method for protecting passwords during transmission. If passwords are not
encrypted, they can be plainly read (i.e., clear text) and easily compromised.
Application servers have the capability to utilize either certificates (tokens)
or user IDs and passwords in order to authenticate. When the application server
transmits or receives passwords, the passwords must be encrypted.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80480-7</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_require_password_access_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_auditing" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss Auditing and Logging</ns0:title>
      <ns0:description xml:lang="en-US">Launch the jboss-cli management interface.
Connect to the server by typing
<html:code>connect</html:code>, authenticate as a user in the Superuser role, and run the
following command:
<html:br /><html:br />
For a Managed Domain configuration:
<html:pre>host=master/server/<html:i>SERVERNAME</html:i>/core-service=management/access=audit/logger=audit-log:write-attribute(name=enabled,value=true)</html:pre>
<html:br /><html:br />
For a Standalone
configuration:
<html:pre>/core-service=management/access=audit/logger=audit-log:write-attribute(name=enabled,value=true)</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000130</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000131</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000132</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000133</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000134</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000169</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000172</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001464</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000089-AS-000050</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000092-AS-000053</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000095-AS-000056</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000096-AS-000059</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000096-AS-000060</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000098-AS-000061</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000099-AS-000062</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000495-AS-000220</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000499-AS-000224</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000499-AS-000224</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000503-AS-000228</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000504-AS-000229</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000505-AS-000230</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000506-AS-000231</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000509-AS-000234</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000080</ns0:reference>
      <ns0:rationale xml:lang="en-US">Log records can be generated from various components within the JBoss
application server. The minimum list of logged events should be those
pertaining to access and authentication events to the management interface as
well as system startup and shutdown events.
<html:br /><html:br />
By default, JBoss does not log
management interface access but does provide a default file handler. This
handler needs to be enabled. Configuring this setting meets several STIG
auditing requirements.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80459-1</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-export export-name="oval:ssg-var_jboss_profile:var:1" value-id="var_jboss_profile" /><ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_configure_auditing:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_auditing_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_encrypt_keystore_passwords" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Encrypt JBoss Keystore Passwords</ns0:title>
      <ns0:description xml:lang="en-US">Configure the application server to mask the java keystore password as per the
procedure described in section 11.13.3 -Password Vault System in the
JBoss_Enterprise_Application_Platform-6.3
-Administration_and_Configuration_Guide-en-US document.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000196</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000171-AS-000119</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000300</ns0:reference>
      <ns0:rationale xml:lang="en-US">Access to the JBoss Password Vault must be secured, and the password used to
access must be encrypted. There is a specific process used to generate the
encrypted password hash. This process must be followed in order to store the
password in an encrypted format.
<html:br /><html:br />
The admin must utilize this process in order
to ensure the Keystore password is encrypted.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80479-9</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_encrypt_keystore_passwords_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_multifactor_authentication" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure Multi-Factor Authentication</ns0:title>
      <ns0:description xml:lang="en-US">Configure the application server to authenticate privileged users via
multifactor/certificate-based authentication mechanisms when using network
access to the management interface.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000765</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000149-AS-000102</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000265</ns0:reference>
      <ns0:rationale xml:lang="en-US">Multifactor authentication creates a layered defense and makes it more
difficult for an unauthorized person to access the application server. If one
factor is compromised or broken, the attacker still has at least one more
barrier to breach before successfully breaking into the target. Unlike a simple
username/password scenario where the attacker could gain access by knowing both
the username and password without the user knowing his account was compromised,
multifactor authentication adds the requirement that the attacker must have
something from the user, such as a token, or to biometrically be the user.
Multifactor authentication is defined as: using two or more factors to achieve
authentication.
<html:br /><html:br />
Factors include:
(i) something a user knows (e.g.,
password/PIN);
(ii) something a user has (e.g., cryptographic identification
device, token); or
(iii) something a user is (e.g., biometric). A CAC or PKI
Hardware Token meets this definition.
<html:br /><html:br />
A privileged account is defined as an
information system account with authorizations of a privileged user. These
accounts would be capable of accessing the web management interface.
<html:br /><html:br />
When
accessing the application server via a network connection, administrative access
to the application server must be PKI Hardware Token enabled or a DoD-approved
soft certificate.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80474-0</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_multifactor_authentication_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_disable_replace_welcome_page" selected="false" severity="low">
      <ns0:title xml:lang="en-US">Disable or Replace the JBoss Welcome Page</ns0:title>
      <ns0:description xml:lang="en-US">Use the Management CLI script <html:pre>$JBOSS_HOME/bin/jboss-cli.sh</html:pre> to run the following
command. You may need to change the profile to modify a different managed domain
profile, or remove the <html:pre>/profile=default</html:pre> portion of the command for a
standalone server.
<html:br /><html:br />
<html:pre>/profile=default/subsystem=web/virtual-server=default-host:writeattribute(name=enable-welcome-root,value.)</html:pre>
<html:br /><html:br />
To configure
your web application to use the root context (/) as its URL address, modify the
applications jboss-web.xml, which is located in the applications <html:code>META-INF/</html:code> or
<html:code>WEB-INF/</html:code> directory. Replace its <html:code>&lt;context-root&gt;</html:code> directive with one that looks
like the following:
<html:br /><html:br />
<html:pre><ns0:jboss-web><ns0:context-root>/</ns0:context-root></ns0:jboss-web></html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000381</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000141-AS-000095</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000245</ns0:reference>
      <ns0:rationale xml:lang="en-US">The Welcome to JBoss web page provides a redirect to the JBoss admin console,
which, by default, runs on TCP 9990 as well as redirects to the Online User
Guide and Online User Groups hosted at locations on the Internet. The welcome
page is unnecessary and should be disabled or replaced with a valid web
page.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80470-8</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_disable_replace_welcome_page_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_application_authentication" selected="false" severity="high">
      <ns0:title xml:lang="en-US">Remove Silent Authentication - Application Security Realm</ns0:title>
      <ns0:description xml:lang="en-US">Log on to the OS of the JBoss server with OS permissions that allow access to
JBoss.
Using the relevant OS commands and syntax, cd to the <html:code>&lt;JBOSS_HOME&gt;/bin/</html:code>
folder.
Run the <html:pre>jboss-cli</html:pre> script.
Connect to the server and authenticate.
Remove the local element from the Application Realm.
For standalone servers, run
the following command:
<html:pre>/core-service=management/securityrealm=ApplicationRealm/authentication=local:remove</html:pre>
<html:br /><html:br />
For managed domain installations,
run the following command:
<html:pre>/host=HOST_NAME/core-service=management/securityrealm=ApplicationRealm/authentication=local:remove</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000213</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000033-AS-000024</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000045</ns0:reference>
      <ns0:rationale xml:lang="en-US">Silent Authentication is a configuration setting that allows local OS users
access to the JBoss server and a wide range of operations without specifically
authenticating on an individual user basis. By default $localuser is a
Superuser. This introduces an integrity and availability vulnerability and
violates best practice requirements regarding accountability.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80456-7</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_configure_application_authentication:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_application_authentication_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_security_realm" selected="false" severity="high">
      <ns0:title xml:lang="en-US">Secure the JBoss Management Interfaces</ns0:title>
      <ns0:description xml:lang="en-US">Identify the security realm used for management of the system. By default,
this is called <html:code>Management Realm</html:code>.
<html:br /><html:br />
If a management security realm is not
already available, reference the Jboss EAP 6.3 system administration guide for
instructions on how to create a security realm for management purposes. Create
the management realm, and assign authentication and authorization access
restrictions to the management realm.
<html:br /><html:br />
Assign the management interfaces to the management realm.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000213</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000033-AS-000024</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000075</ns0:reference>
      <ns0:rationale xml:lang="en-US">JBoss utilizes the concept of security realms to secure the management
interfaces used for JBoss server administration. If the security realm
attribute is omitted or removed from the management interface definition, access
to that interface is no longer secure. The JBoss management interfaces must be
secured.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80458-3</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_security_realm_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_syslog" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Enable Logging to syslog</ns0:title>
      <ns0:description xml:lang="en-US">Log on to the OS of the JBoss server with OS permissions that allow access to
JBoss.
Using the relevant OS commands and syntax, cd to the <html:code>&lt;JBOSS_HOME&gt;/bin/</html:code>
folder.
Run the <html:pre>jboss-cli</html:pre> script.
Connect to the server and authenticate.
Run
the command:
<html:br /><html:br />
Standalone configuration:
<html:pre>ls /subsystem=logging/syslog-handler=</html:pre>
<html:br /><html:br />
Domain configuration:
<html:pre>ls /profile=default/subsystem=logging/syslog-handler=</html:pre>
<html:br /><html:br />
If no values are returned, this is a finding.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001851</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000358-AS-000064</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000505</ns0:reference>
      <ns0:rationale xml:lang="en-US">Information system logging capability is critical for accurate forensic
analysis. Log record content that may be necessary to satisfy the requirement of
this control includes, but is not limited to, time stamps, source and
destination IP addresses, user/process identifiers, event descriptions,
application-specific events, success/fail indications, filenames involved,
access control or flow control rules invoked.
<html:br /><html:br />
Off-loading is a common process
in information systems with limited log storage capacity.
<html:br /><html:br />
Centralized
management of log records provides for efficiency in maintenance and management
of records, as well as the backup and archiving of those records. Application
servers and their related components are required to off-load log records onto a
different system or media than the system being logged.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80488-0</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-export export-name="oval:ssg-var_jboss_profile:var:1" value-id="var_jboss_profile" /><ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_configure_syslog:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_syslog_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_vendor_supported" selected="false" severity="high">
      <ns0:title xml:lang="en-US">JBoss Version Is Vendor Supported</ns0:title>
      <ns0:description xml:lang="en-US">Obtain vendor support from Red Hat.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002605</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000456-AS-000266</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000680</ns0:reference>
      <ns0:rationale xml:lang="en-US">The JBoss product is available as Open Source; however, the Red Hat vendor
provides updates, patches and support for the JBoss product. It is imperative
that patches and updates be applied to JBoss in a timely manner as many attacks
against JBoss focus on unpatched systems. It is critical that support be
obtained and made available.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80495-5</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_vendor_supported:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_vendor_supported_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_security_manager" selected="false" severity="high">
      <ns0:title xml:lang="en-US">Enable the Java Security Manager</ns0:title>
      <ns0:description xml:lang="en-US">For a domain installation:
Enable the respective JAVA_OPTS flag in both the
domain.conf and the domain.conf.bat files.
<html:br /><html:br />
For a standalone installation:
Enable the respective JAVA_OPTS flag in both the standalone.conf and the
standalone.conf.bat files.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000213</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000033-AS-000024</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000030</ns0:reference>
      <ns0:rationale xml:lang="en-US">The Java Security Manager is a java class that manages the external boundary of
the Java Virtual Machine (JVM) sandbox, controlling how code executing within
the JVM can interact with resources outside the JVM.
<html:br /><html:br />
The Java Security Manager
uses a security policy to determine whether a given action will be
permitted or
denied.
<html:br /><html:br />
To protect the host system, the JBoss application server must be run
within the Java Security Manager.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80453-4</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_configure_security_manager:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_security_manager_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_offloading_max" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss Log Off-Loading Frequency</ns0:title>
      <ns0:description xml:lang="en-US">Configure the application server to off-load log records every seven days onto
a different system or media from the system being logged.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001348</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000125-AS-000084</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000195</ns0:reference>
      <ns0:rationale xml:lang="en-US">JBoss logs by default are written to the local file system. A centralized
logging solution like syslog should be used whenever possible; however, any log
data stored to the file system needs to be off-loaded. JBoss EAP does not
provide an automated backup capability. Instead, reliance is placed on OS or
third-party tools to back up or off-load the log files.
<html:br /><html:br />
Protection of log data
includes assuring log data is not accidentally lost or deleted. Off-loading log
records to a different system or onto separate media from the system the
application server is actually running on helps to assure that, in the event of
a catastrophic system failure, the log records will be retained.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80463-3</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_offloading_max_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_ldap" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure LDAP</ns0:title>
      <ns0:description xml:lang="en-US">Follow steps in section 11.8 - Management Interface Security in the
JBoss_Enterprise_Application_Platform-6.3
-Administration_and_Configuration_Guide-en-US document.
<html:br /><html:br />
1. Create an outbound connection to the LDAP server.
2. Create an LDAP-enabled security realm.
3. Reference the new security domain in the Management Interface.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000764</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000148-AS-000101</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000260</ns0:reference>
      <ns0:rationale xml:lang="en-US">To assure accountability and prevent unauthorized access, application server
users must be uniquely identified and authenticated. This is typically
accomplished via the use of a user store that is either local (OS-based) or
centralized (Active Directory/LDAP) in nature. It should be noted that JBoss
does not specifically mention Active Directory since AD is LDAP aware.
<html:br /><html:br />
To
ensure accountability and prevent unauthorized access, the JBoss Server must be
configured to utilize a centralized authentication mechanism.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80473-2</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_ldap_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_management_network" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Separate JBoss Management Network</ns0:title>
      <ns0:description xml:lang="en-US">Refer to Section 4.9 of the JBoss EAP 6.3 Installation guide for detailed
instructions on how to start JBoss as a service.
<html:br /><html:br />
Use the following command line
parameters to assign the management interface to a specific management network.
These command line flags must be added both when starting JBoss as a service and
when starting from the command line.
<html:br /><html:br />
Substitute your actual network address for
the 10.x.x.x addresses provided as an example below.
<html:br /><html:br />
For a standalone
configuration:
<html:pre>
JBOSS_HOME/bin/standalone.sh -bmanagement=10.2.2.1 -b 10.1.1.1
JBOSS_HOME/bin/domain.sh -bmanagement=10.2.2.1 -b 10.1.1.1
</html:pre>
<html:br /><html:br />
If a management
network is not available, you may substitute localhost/127.0.0.1 for management
address. This will force you to manage the JBoss server from the local host.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000778</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000158-AS-000108</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000285</ns0:reference>
      <ns0:rationale xml:lang="en-US">JBoss provides multiple interfaces for accessing the system. By default,
these are called public and management. Allowing non-
management traffic to access the JBoss management interface increases the
chances of a security compromise. The JBoss server must be configured to bind
the management interface to a network that controls access. This is usually a
network that has been designated as a management network and has restricted
access. Similarly, the public interface must be bound to a network that is not
on the same segment as the management interface.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80476-5</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_management_network_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_file_permissions" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss Application File Permissions</ns0:title>
      <ns0:description xml:lang="en-US">Configure file permissions on the JBoss folder to protect from unauthorized
access.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001199</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000231-AS-000133</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000400</ns0:reference>
      <ns0:rationale xml:lang="en-US">The JBoss EAP Application Server is a Java-based AS. It is installed on the OS
file system and depends upon file system access controls to protect application
data at rest. The file permissions set on the JBoss EAP home folder must be
configured so as to limit access to only authorized people and processes. The
account used for operating the JBoss server and any designated administrative or
operational accounts are the only accounts that should have access.
<html:br /><html:br />
When data
is written to digital media such as hard drives, mobile computers,
external/removable hard drives, personal digital assistants, flash/thumb drives,
etc., there is risk of data loss and data compromise. Steps must be taken to
ensure data stored on the device is protected.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80484-9</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_file_permissions:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_file_permissions_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_log_deployments" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Log Application Deployments</ns0:title>
      <ns0:description xml:lang="en-US">Launch the jboss-cli management interface substituting standalone or domain for
<html:i>CONFIG</html:i> based upon the server installation.
<html:br /><html:br />
<html:pre>&lt;JBOSS_HOME&gt;/<html:i>CONFIG</html:i>/bin/jboss-cli</html:pre>
<html:br /><html:br />
connect to the server and run the following command:
<html:br /><html:br />
<html:pre>/core-service=management/access=audit/logger=audit-log:write-attribute(name=enabled,value=true)</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001814</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000381-AS-000089</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000550</ns0:reference>
      <ns0:rationale xml:lang="en-US">Without logging the enforcement of access restrictions against changes to the
application server configuration, it will be difficult to identify attempted
attacks, and a log trail will not be available for forensic investigation for
after-the-fact actions. Configuration changes may occur to any of the modules
within the application server through the management interface, but logging of
actions to the configuration of a module outside the application server is not
logged.
<html:br /><html:br />
Enforcement actions are the methods or mechanisms used to prevent
unauthorized changes to configuration settings. Enforcement action methods may
be as simple as denying access to a file based on the application of file
permissions (access restriction). Log items may consist of lists of actions
blocked by access restrictions or changes identified after the fact.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80490-6</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_log_deployments_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_remove_group_accounts" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Remove JBoss Group Acount Access</ns0:title>
      <ns0:description xml:lang="en-US">Configure the application server so required users are individually
authenticated by creating individual user accounts. Utilize an LDAP server that
is configured according to DOD policy.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000770</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000153-AS-000104</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000275</ns0:reference>
      <ns0:rationale xml:lang="en-US">To assure individual accountability and prevent unauthorized access,
application server users (and any processes acting on behalf of application
server users) must be individually identified and authenticated.
<html:br /><html:br />
A group
authenticator is a generic account used by multiple individuals. Use of a group
authenticator alone does not uniquely identify individual users.
<html:br /><html:br />
Application
servers must ensure that individual users are authenticated prior to
authenticating via role or group authentication. This is to ensure that there is
non-repudiation for actions taken.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80475-7</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_remove_group_accounts_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_auditor_roles" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss Auditor Role</ns0:title>
      <ns0:description xml:lang="en-US">Obtain documented approvals from ISSM, and assign the appropriate personnel
into the <html:pre>Auditor</html:pre> role.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000171</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000090-AS-000051</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000085</ns0:reference>
      <ns0:rationale xml:lang="en-US">The JBoss server must be configured to select which personnel are assigned the
role of selecting which loggable events are to be logged.
In JBoss, the role
designated for selecting auditable events is the <html:code>Auditor</html:code> role.
The
personnel or roles that can select loggable events are only the ISSM (or
individuals or roles appointed by the ISSM).</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80460-9</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_auditor_roles_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_management_ldap" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure LDAP for Management Interfaces</ns0:title>
      <ns0:description xml:lang="en-US">Follow steps in section 11.8 - Management Interface Security in the
JBoss_Enterprise_Application_Platform-6.3
-Administration_and_Configuration_Guide-en-US document.
<html:br /><html:br />
1. Create an outbound connection to the LDAP server.
2. Create an LDAP-enabled security realm.
3. Reference the new security domain in the Management Interface.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000795</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000163-AS-000111</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000290</ns0:reference>
      <ns0:rationale xml:lang="en-US">JBoss EAP provides a security realm called ManagementRealm. By default, this
realm uses the mgmt-users.properties file for authentication. Using file-based
authentication does not allow the JBoss server to be in compliance with a wide
range of user management requirements such as automatic disabling of inactive
accounts as per DoD policy. To address this issue, the management interfaces
used to manage the JBoss server must be associated with a security realm that
provides centralized authentication management. Examples are AD or LDAP.
Management of user identifiers is not applicable to shared information system
accounts (e.g., guest and anonymous accounts). It is commonly the case that a
user account is the name of an information system account associated with an
individual.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80477-3</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_management_ldap_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_remove_unnecessary_apps" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Remove Unnecessary Applications</ns0:title>
      <ns0:description xml:lang="en-US">Identify, authorize, and document all applications that are deployed to the
application server. Remove unauthorized applications.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000381</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000141-AS-000095</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000250</ns0:reference>
      <ns0:rationale xml:lang="en-US">Extraneous services and applications running on an application server expands
the attack surface and increases risk to the application server. Securing any
server involves identifying and removing any unnecessary services and, in the
case of an application server, unnecessary and/or unapproved applications.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80471-6</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_remove_unnecessary_apps:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_remove_unnecessary_apps_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_secure_keystore_permissions" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Restrict Access to the JBoss Keystore</ns0:title>
      <ns0:description xml:lang="en-US">Configure the application server OS file permissions on the corresponding
private key to restrict access to authorized accounts or roles.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000186</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000176-AS-000125</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000320</ns0:reference>
      <ns0:rationale xml:lang="en-US">The cornerstone of the PKI is the private key used to encrypt or digitally sign
information.
<html:br /><html:br />
If the private key is stolen, this will lead to the compromise of
the authentication and non-repudiation gained through PKI because the attacker
can use the private key to digitally sign documents and can pretend to be the
authorized user.
<html:br /><html:br />
Both the holders of a digital certificate and the issuing
authority must protect the computers, storage devices, or whatever they use to
keep the private keys. Java-based application servers utilize the Java keystore,
which provides storage for cryptographic keys and certificates. The keystore is
usually maintained in a file stored on the file system.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80482-3</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_secure_keystore_permissions_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_logging_level" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss Logging Level</ns0:title>
      <ns0:description xml:lang="en-US">Log on to the OS of the JBoss server with OS permissions that allow access to
JBoss.
Using the relevant OS commands and syntax, cd to the <html:code>&lt;JBOSS_HOME&gt;/bin/</html:code>
folder.
Run the <html:pre>jboss-cli</html:pre> script to start the Command Line Interface (CLI).
Connect to the server and authenticate.
<html:br /><html:br />
The PROFILE NAMEs included with a
Managed Domain JBoss configuration are:
<html:code>default</html:code>, <html:code>full</html:code>, <html:code>full-ha</html:code>, or <html:code>ha</html:code>
For a Managed Domain configuration, you must check
each profile name:
<html:br /><html:br />
For each PROFILE NAME, run the command:
<html:pre>/profile=<html:i>PROFILE NAME</html:i>/subsystem=logging/root-logger=ROOT:write-attribute(name=level,value=INFO)</html:pre>
<html:br /><html:br />
For a Standalone configuration:
<html:pre>/subsystem=logging/root-logger=ROOT:write-attribute(name=level,value=INFO)</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001487</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000100-AS-000063</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000135</ns0:reference>
      <ns0:rationale xml:lang="en-US">800 records less data and may result in an insufficient amount of information
being logged by the ROOT logger. This can result in failed forensic
investigations. The ROOT logger level must be INFO level or lower to provide
adequate log information.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80461-7</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_configure_logging_level:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_logging_level_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_service_separate_networks" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Use Separate Management and Application Networks</ns0:title>
      <ns0:description xml:lang="en-US">Start the application server with a <html:code>-bmanagement</html:code> and a <html:code>-b</html:code> flag so that admin
management functionality and hosted applications are separated.
<html:br /><html:br />
Refer to
section 4.9 in the JBoss EAP 6.3 Installation Guide for specific instructions on
how to start the JBoss server as a service.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-001082</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000211-AS-000146</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000355</ns0:reference>
      <ns0:rationale xml:lang="en-US">The application server consists of the management interface and hosted
applications. By separating the management interface from hosted applications,
the user must authenticate as a privileged user to the management interface
before being presented with management functionality. This prevents non-
privileged users from having visibility to functions not available to the user.
By limiting visibility, a compromised non-privileged account does not offer
information to the attacker or functionality and information needed to further
the attack on the application server.
<html:br /><html:br />
JBoss is designed to operate with
separate application and management interfaces.
The JBoss server is started via
a script. To start the JBoss server in domain mode, the admin will execute the
/bin/domain.sh or domain.bat script.
<html:br /><html:br />
To start the JBoss server in standalone
mode, the admin will execute /bin/standalone.bat or standalone.sh.
<html:br /><html:br />
Command line
flags are used to specify which network address is used for management and which
address is used for public/application access.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80483-1</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_service_separate_networks_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_use_approved_ca_cert" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Use Approved DoD Certificate Authorities</ns0:title>
      <ns0:description xml:lang="en-US">Locate the cacerts file for the JVM. This can be done using the appropriate
find command for the OS and change to the directory where the cacerts file is
located.
<html:br /><html:br />
Remove the certificates that have a CA that is non-DoD approved, and
import DoD CA-approved certificates.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002470</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000427-AS-000264</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000625</ns0:reference>
      <ns0:rationale xml:lang="en-US">Untrusted Certificate Authorities (CA) can issue certificates, but they may be
issued by organizations or individuals that seek to compromise DoD systems or by
organizations with insufficient security controls. If the CA used for verifying
the certificate is not a DoD-approved CA, trust of this CA has not been
established.
<html:br /><html:br />
The DoD will only accept PKI certificates obtained from a DoD-
approved internal or external certificate authority. Reliance on CAs for the
establishment of secure sessions includes, for example, the use of SSL/TLS
certificates. The application server must only allow the use of DoD PKI-
established certificate authorities for verification.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80491-4</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_use_approved_ca_cert_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_ports" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss Management and Application Ports</ns0:title>
      <ns0:description xml:lang="en-US">Open the EAP web console by pointing a web browser to <html:pre>HTTPS://<html:i>Servername</html:i>:9990</html:pre>
Log on to the admin console using admin credentials
Select the
<html:code>Configuration</html:code> tab
Expand the <html:code>General Configuration</html:code> sub
system by clicking on the <html:code>+</html:code>
Select <html:code>Socket Binding</html:code>
Select the
<html:code>View</html:code> option next to <html:code>standard-sockets</html:code>
Select
<html:code>Inbound</html:code>
<html:br /><html:br />
Select the port that needs to be reconfigured and select
<html:code>Edit</html:code>.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000382</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000142-AS-000014</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000255</ns0:reference>
      <ns0:rationale xml:lang="en-US">Some networking protocols may not meet organizational security requirements to
protect data and components.
<html:br /><html:br />
Application servers natively host a number of
various features, such as management interfaces, httpd servers and message
queues. These features all run on TCPIP ports. This creates the potential that
the vendor may choose to utilize port numbers or network services that have been
deemed unusable by the organization. The application server must have the
capability to both reconfigure and disable the assigned ports without adversely
impacting application server operation capabilities.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80472-4</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_ports_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_host_access_restrictions" selected="false" severity="high">
      <ns0:title xml:lang="en-US">Configure Host Access Restrictions for Applications</ns0:title>
      <ns0:description xml:lang="en-US">Configure the Java security manager to enforce access restrictions to the host
system resources in accordance with application design and resource
requirements.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000213</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000033-AS-000024</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000025</ns0:reference>
      <ns0:rationale xml:lang="en-US">The Java Security Manager is a java class that manages the external boundary of
the Java Virtual Machine (JVM) sandbox, controlling how code executing within
the JVM can interact with resources outside the JVM.
<html:br /><html:br />
The JVM requires a
security policy in order to restrict application access. A properly configured
security policy will define what rights the application has to the underlying
system. For example, rights to make changes to files on the host system or to
initiate network sockets in order to connect to another system.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80452-6</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_host_access_restrictions_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_user_roles" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure JBoss User Roles</ns0:title>
      <ns0:description xml:lang="en-US">Document approved management users and their roles. Configure the application
server to use RBAC and ensure users are placed into the appropriate roles.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000213</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000033-AS-000024</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000040</ns0:reference>
      <ns0:rationale xml:lang="en-US">Security realms are a series of mappings between users and passwords and users
and roles. There are 2 JBoss security realms provided by default; they are
<html:code>management realm</html:code> and <html:code>application realm</html:code>.
<html:br /><html:br />
Management realm
stores authentication information for the management API, which provides
functionality for the web-based management console and the management command
line interface (CLI).
<html:br /><html:br />
mgmt-groups.properties stores user to group mapping for
the ManagementRealm but only when role-based access controls (RBAC) is enabled.
If management users are not in the appropriate role, unauthorized access to
JBoss resources can occur.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80455-9</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_user_roles_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_remove_quickstarts" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Remove JBoss Quickstarts</ns0:title>
      <ns0:description xml:lang="en-US">Delete the QuickStarts folder.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000381</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000141-AS-000095</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000235</ns0:reference>
      <ns0:rationale xml:lang="en-US">JBoss QuickStarts are demo applications that can be deployed quickly. Demo
applications are not written with security in mind and often open new attack
vectors. QuickStarts must be removed.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80468-2</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_remove_quickstarts:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_remove_quickstarts_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_management_authentication" selected="false" severity="high">
      <ns0:title xml:lang="en-US">Remove Silent Authentication - Management Security Realm</ns0:title>
      <ns0:description xml:lang="en-US">Log on to the OS of the JBoss server with OS permissions that allow access to
JBoss.
Using the relevant OS commands and syntax, cd to the <html:pre>&lt;JBOSS_HOME&gt;/bin/</html:pre>
folder.
Run the <html:pre>jboss-cli</html:pre> script.
Connect to the server and authenticate.
Remove the local element from the Management Realm.
For standalone servers run
the following command:
<html:pre>/core-service=management/securityrealm=ManagementRealm/authentication=local:remove</html:pre>
<html:br /><html:br />
For managed domain installations run the following command:
<html:pre>/host=HOST_NAME/core-service=management/securityrealm=ManagementRealm/authentication=local:remove</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000213</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000033-AS-000024</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000050</ns0:reference>
      <ns0:rationale xml:lang="en-US">Silent Authentication is a configuration setting that allows local OS users
access to the JBoss server and a wide range of operations without specifically
authenticating on an individual user basis. By default $localuser is a
Superuser. This introduces an integrity and availability vulnerability and
violates best practice requirements regarding accountability.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80457-5</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-export export-name="oval:ssg-var_jboss_profile:var:1" value-id="var_jboss_profile" /><ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_configure_management_authentication:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_management_authentication_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_use_secure_ldap_port" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Use Secure Standard LDAP Port</ns0:title>
      <ns0:description xml:lang="en-US">Follow steps in section 11.8 - Management Interface Security in the
JBoss_Enterprise_Application_Platform-6.3
-Administration_and_Configuration_Guide-en-US document.
<html:br /><html:br />
1. Create an outbound connection to the LDAP server.
2. Create an LDAP-enabled security realm.
3. Reference the new security domain in the Management Interface.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000197</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000172-AS-000121</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000310</ns0:reference>
      <ns0:rationale xml:lang="en-US">Passwords need to be protected at all times, and encryption is the standard
method for protecting passwords during transmission.
<html:br /><html:br />
Application servers have
the capability to utilize LDAP directories for authentication. If LDAP
connections are not protected during transmission, sensitive authentication
credentials can be stolen. When the application server utilizes LDAP, the LDAP
traffic must be encrypted.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80481-5</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_use_secure_ldap_port_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_audit_privileged_actions" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Audit JBoss Privileged Actions</ns0:title>
      <ns0:description xml:lang="en-US">Launch the jboss-cli management interface substituting standalone or domain for
<html:i>CONFIG</html:i> based upon the server installation.
<html:br /><html:br />
<html:pre>&lt;JBOSS_HOME&gt;/<html:i>CONFIG/</html:i>/bin/jboss-cli</html:pre>
<html:br /><html:br />
connect to the server and run the following command:
<html:br /><html:br />
<html:pre>/core-service=management/access=audit/logger=audit-log:write-attribute(name=enabled,value=true)</html:pre></ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002234</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000343-AS-000030</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000480</ns0:reference>
      <ns0:rationale xml:lang="en-US">In order to be able to provide a forensic history of activity, the application
server must ensure users who are granted a privileged role or those who utilize
a separate distinct account when accessing privileged functions or data have
their actions logged.
<html:br /><html:br />
If privileged activity is not logged, no forensic logs
can be used to establish accountability for privileged actions that occur on the
system.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80487-2</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_audit_privileged_actions_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_ha_lb" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Configure Load Balancing (LB) or High Availability (HA)</ns0:title>
      <ns0:description xml:lang="en-US">Configure the application server to provide LB or HA services for the hosted
application.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-002385</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000435-AS-000069</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000640</ns0:reference>
      <ns0:rationale xml:lang="en-US">A MAC I system is a system that handles data vital to the organization's
operational readiness or effectiveness of deployed or contingency forces. A MAC
I system must maintain the highest level of integrity and availability. By HA
clustering the application server, the hosted application and data are given a
platform that is load-balanced and provides high availability.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80492-2</ns0:ident>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_ha_lb_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
    <ns0:Rule id="jboss_eap_configure_keystore" selected="false" severity="medium">
      <ns0:title xml:lang="en-US">Enable the JBoss Keystore</ns0:title>
      <ns0:description xml:lang="en-US">Configure the application server to use the java keystore and JBoss vault as
per section 11.13.1 -Password Vault System in the
JBoss_Enterprise_Application_Platform-6.3
-Administration_and_Configuration_Guide-en-US document.
<html:br /><html:br />
1. Create a java keystore.
2. Mask the keystore password and initialize the password vault.
3. Configure JBoss to use the password vault.</ns0:description>
      <ns0:reference href="https://public.cyber.mil/stigs/cci/">CCI-000196</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=application-servers">SRG-APP-000171-AS-000119</ns0:reference>
      <ns0:reference href="https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=app-security%2Capplication-servers">EAP6-JBOS-AS-000295</ns0:reference>
      <ns0:rationale xml:lang="en-US">JBoss EAP 6 has a Password Vault to encrypt sensitive strings, store them in an
encrypted keystore, and decrypt them for applications and verification systems.
Plain-text configuration files, such as XML deployment descriptors, need to
specify passwords and other sensitive information. Use the JBoss EAP Password
Vault to securely store sensitive strings in plain-text files.</ns0:rationale>
      <ns0:ident system="https://nvd.nist.gov/cce/index.cfm">CCE-80478-1</ns0:ident>
      <ns0:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
        <ns0:check-export export-name="oval:ssg-var_jboss_profile:var:1" value-id="var_jboss_profile" /><ns0:check-content-ref href="oval-linked.xml" name="oval:ssg-jboss_eap_configure_keystore:def:1" />
      </ns0:check>
      <ns0:check system="http://scap.nist.gov/schema/ocil/2">
        <ns0:check-content-ref href="ocil-linked.xml" name="ocil:ssg-jboss_eap_configure_keystore_ocil:questionnaire:1" />
      </ns0:check>
    </ns0:Rule>
  </ns0:Group>
</ns0:Benchmark>