# platform = multi_platform_all
# complexity = low
# strategy = disable
# reboot = false
# disruption = low
- name: Disable At Service (atd)
  hosts: '@@HOSTS@@'
  become: true
  tags:
    - CCE-80871-7
    - NIST-800-53-CM-7
    - disable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - service_atd_disabled
  tasks:

    - name: Unit Service Exists - atd.service
      command: systemctl list-unit-files atd.service
      register: service_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Disable service atd
      systemd:
        name: atd.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"atd.service" in service_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"

    - name: Unit Socket Exists - atd.socket
      command: systemctl list-unit-files atd.socket
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type
        != "docker"

    - name: Disable socket atd
      systemd:
        name: atd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"atd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type !=
          "docker"
